Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls  us/call  us/call  name    
 88.77      5.65     5.65 112507500     0.05     0.05  main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}::operator()(cl::sycl::id) const::{lambda(unsigned int, unsigned int)#1}::operator()(unsigned int, unsigned int) const
  6.76      6.08     0.43    15000    28.67   422.73  main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}::operator()(cl::sycl::id) const
  4.17      6.34     0.27 112507500     0.00     0.05  main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}::operator()(cl::sycl::id) const::{lambda(unsigned int, unsigned int)#2}::operator()(unsigned int, unsigned int) const
  0.31      6.36     0.02                             sumTotient(unsigned int, unsigned int)
  0.00      6.36     0.00   135004     0.00     0.00  std::__array_traits<unsigned long, 1ul>::_S_ref(unsigned long const (&) [1], unsigned long)
  0.00      6.36     0.00    75001     0.00     0.00  std::array<unsigned long, 1ul>::operator[](unsigned long)
  0.00      6.36     0.00    60007     0.00     0.00  std::__array_traits<unsigned long, 3ul>::_S_ref(unsigned long const (&) [3], unsigned long)
  0.00      6.36     0.00    60003     0.00     0.00  std::array<unsigned long, 1ul>::operator[](unsigned long) const
  0.00      6.36     0.00    60001     0.00     0.00  cl::sycl::detail::fill_helper<unsigned long>::operator()(unsigned long) const
  0.00      6.36     0.00    60001     0.00     0.00  cl::sycl::detail::id_range_base<unsigned long, 3, cl::sycl::detail::index_array>::operator[](int) const
  0.00      6.36     0.00    60001     0.00     0.00  std::array<unsigned long, 3ul>::operator[](unsigned long) const
  0.00      6.36     0.00    45000     0.00     0.00  cl::sycl::detail::id_range_base<unsigned long, 1, cl::sycl::id<1> >::operator[](int)
  0.00      6.36     0.00    30003     0.00     0.00  cl::sycl::detail::id_range_base<unsigned long, 1, cl::sycl::range<1> >::operator[](int) const
  0.00      6.36     0.00    30001     0.00     0.00  cl::sycl::range<1>::range()
  0.00      6.36     0.00    30001     0.00     0.00  cl::sycl::range<1>::range(cl::sycl::detail::index_array const&)
  0.00      6.36     0.00    30001     0.00     0.00  cl::sycl::detail::id_range_base<unsigned long, 1, cl::sycl::range<1> >::id_range_base(cl::sycl::detail::id_range_base<unsigned long, 1, cl::sycl::range<1> >::fill_tag, unsigned long)
  0.00      6.36     0.00    30001     0.00     0.00  cl::sycl::detail::id_range_base<unsigned long, 1, cl::sycl::range<1> >::id_range_base<0ul>(unsigned long, std::integer_sequence<unsigned long, 0ul>)
  0.00      6.36     0.00    30001     0.00     0.00  cl::sycl::detail::id_range_base<unsigned long, 1, cl::sycl::range<1> >::operator[](int)
  0.00      6.36     0.00    30000     0.00     0.00  cl::sycl::id<1>::id()
  0.00      6.36     0.00    30000     0.00     0.00  cl::sycl::detail::id_range_base<unsigned long, 1, cl::sycl::id<1> >::id_range_base(cl::sycl::detail::id_range_base<unsigned long, 1, cl::sycl::id<1> >::fill_tag, unsigned long)
  0.00      6.36     0.00    30000     0.00     0.00  cl::sycl::detail::id_range_base<unsigned long, 1, cl::sycl::id<1> >::id_range_base<0ul>(unsigned long, std::integer_sequence<unsigned long, 0ul>)
  0.00      6.36     0.00    30000     0.00     0.00  unsigned long cl::sycl::detail::construct_linear_row_major_index<1>(cl::sycl::id<1> const&, cl::sycl::range<1> const&)
  0.00      6.36     0.00    30000     0.00     0.00  unsigned long cl::sycl::detail::construct_linear_row_major_index<1ul>(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)
  0.00      6.36     0.00    30000     0.00     0.00  cl::sycl::accessor_base::get_store_range() const
  0.00      6.36     0.00    30000     0.00     0.00  cl::sycl::detail::id_range_base<unsigned long, 1, cl::sycl::id<1> >::operator[](int) const
  0.00      6.36     0.00    15002     0.00     0.00  std::_Any_data::_M_access() const
  0.00      6.36     0.00    15000     0.00     0.00  cl::sycl::id<1>::id(cl::sycl::detail::index_array const&)
  0.00      6.36     0.00    15000     0.00     0.00  cl::sycl::id<1>::id(cl::sycl::detail::item_base const&)
  0.00      6.36     0.00    15000     0.00     0.00  cl::sycl::accessor_base::get_host_data() const
  0.00      6.36     0.00    15000     0.00     0.00  cl::sycl::detail::accessor_common<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::get_offset() const
  0.00      6.36     0.00    15000     0.00     0.00  cl::sycl::detail::accessor_common<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::get_device_ptr() const
  0.00      6.36     0.00    15000     0.00     0.00  cl::sycl::detail::accessor_buffer_interface<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::check_bounds(unsigned long) const
  0.00      6.36     0.00    15000     0.00     0.00  unsigned long cl::sycl::detail::accessor_buffer_interface<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::get_linear_index<1>(cl::sycl::id<1> const&) const
  0.00      6.36     0.00    15000     0.00     0.00  cl::sycl::detail::accessor_buffer_interface<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::linear_offset_from_buffer() const
  0.00      6.36     0.00    15000     0.00     0.00  int& cl::sycl::detail::accessor_buffer_interface<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::operator[]<int, void>(cl::sycl::id<1>) const
  0.00      6.36     0.00    15000     0.00     0.00  cl::sycl::detail::item_base::get_id(int) const
  0.00      6.36     0.00    15000     0.00     0.00  cl::sycl::detail::item_base::operator[](int) const
  0.00      6.36     0.00    15000     0.00     0.00  void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}* const& std::_Any_data::_M_access<void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}*>() const
  0.00      6.36     0.00    15000     0.00     0.00  std::_Function_base::_Base_manager<void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}>::_M_get_pointer(std::_Any_data const&)
  0.00      6.36     0.00    15000     0.00     0.00  std::vector<int, std::allocator<int> >::operator[](unsigned long)
  0.00      6.36     0.00    15000     0.00     0.00  cl::sycl::detail::item_base& std::forward<cl::sycl::detail::item_base&>(std::remove_reference<cl::sycl::detail::item_base&>::type&)
  0.00      6.36     0.00    15000     0.00   422.73  _ZZN2cl4sycl7handler17parallel_for_implI7TotientIiEZZ4mainENKUlRS1_E_clES5_EUlNS0_2idILi1EEEE_Li1EEEvRKNS0_6detail11index_arrayESD_T0_ENUlRNSA_9item_baseEE_clESG_
  0.00      6.36     0.00       22     0.00     0.00  __gthread_active_p()
  0.00      6.36     0.00       21     0.00     0.00  __gnu_cxx::__exchange_and_add(int volatile*, int)
  0.00      6.36     0.00       21     0.00     0.00  __gnu_cxx::__exchange_and_add_dispatch(int*, int)
  0.00      6.36     0.00       19     0.00     0.00  std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count()
  0.00      6.36     0.00       18     0.00     0.00  std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release()
  0.00      6.36     0.00        8     0.00     0.00  cl::sycl::accessor_base::~accessor_base()
  0.00      6.36     0.00        8     0.00     0.00  cl::sycl::detail::accessor_common<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::~accessor_common()
  0.00      6.36     0.00        8     0.00     0.00  cl::sycl::detail::host_arg_container::~host_arg_container()
  0.00      6.36     0.00        8     0.00     0.00  cl::sycl::detail::accessor_buffer_interface<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::~accessor_buffer_interface()
  0.00      6.36     0.00        8     0.00     0.00  cl::sycl::accessor<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::~accessor()
  0.00      6.36     0.00        8     0.00     0.00  std::shared_ptr<cl::sycl::detail::accessor>::~shared_ptr()
  0.00      6.36     0.00        8     0.00     0.00  std::__shared_ptr<cl::sycl::detail::accessor, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr()
  0.00      6.36     0.00        7     0.00     0.00  std::remove_reference<cl::sycl::detail::NullDeleter&>::type&& std::move<cl::sycl::detail::NullDeleter&>(cl::sycl::detail::NullDeleter&)
  0.00      6.36     0.00        7     0.00     0.00  main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}::~id()
  0.00      6.36     0.00        6     0.00     0.00  cl::sycl::detail::id_range_base<unsigned long, 3, cl::sycl::detail::index_array>::operator[](int)
  0.00      6.36     0.00        6     0.00     0.00  cl::sycl::detail::accessor_common<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::accessor_common(cl::sycl::detail::accessor_common<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0> const&)
  0.00      6.36     0.00        6     0.00     0.00  cl::sycl::detail::accessor_buffer_interface<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::accessor_buffer_interface(cl::sycl::detail::accessor_buffer_interface<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0> const&)
  0.00      6.36     0.00        6     0.00     0.00  cl::sycl::accessor<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::accessor(cl::sycl::accessor<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0> const&)
  0.00      6.36     0.00        6     0.00     0.00  std::array<unsigned long, 3ul>::operator[](unsigned long)
  0.00      6.36     0.00        6     0.00     0.00  std::_Any_data::_M_access()
  0.00      6.36     0.00        6     0.00     0.00  void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}*& std::_Any_data::_M_access<void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}*>()
  0.00      6.36     0.00        6     0.00     0.00  unsigned long const& std::min<unsigned long>(unsigned long const&, unsigned long const&)
  0.00      6.36     0.00        6     0.00     0.00  std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >&& std::forward<std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >(std::remove_reference<std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::type&)
  0.00      6.36     0.00        5     0.00     0.00  cl::sycl::detail::base_allocator::~base_allocator()
  0.00      6.36     0.00        5     0.00     0.00  __gnu_cxx::new_allocator<std::shared_ptr<cl::sycl::detail::property_base> >::max_size() const
  0.00      6.36     0.00        5     0.00     0.00  std::_Vector_base<std::shared_ptr<cl::sycl::detail::property_base>, std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > >::_M_get_Tp_allocator() const
  0.00      6.36     0.00        5     0.00     0.00  std::vector<std::shared_ptr<cl::sycl::detail::property_base>, std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > >::capacity() const
  0.00      6.36     0.00        5     0.00     0.00  std::vector<std::shared_ptr<cl::sycl::detail::property_base>, std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > >::max_size() const
  0.00      6.36     0.00        5     0.00     0.00  std::allocator_traits<std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > >::max_size(std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > const&)
  0.00      6.36     0.00        5     0.00     0.00  std::vector<std::shared_ptr<cl::sycl::detail::property_base>, std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > >::_S_max_size(std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > const&)
  0.00      6.36     0.00        5     0.00     0.00  void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}::~item_base()
  0.00      6.36     0.00        5     0.00     0.00  main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}::id(cl::sycl::id<1> const&)
  0.00      6.36     0.00        4     0.00     0.00  cl::sycl::property_list::property_list<, void, void>()
  0.00      6.36     0.00        4     0.00     0.00  cl::sycl::property_list::~property_list()
  0.00      6.36     0.00        4     0.00     0.00  cl::sycl::detail::aligned_mem::aligned_allocator::~aligned_allocator()
  0.00      6.36     0.00        4     0.00     0.00  cl::sycl::detail::add_properties<>::apply(std::vector<std::shared_ptr<cl::sycl::detail::property_base>, std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > >&)
  0.00      6.36     0.00        4     0.00     0.00  __gnu_cxx::new_allocator<std::shared_ptr<cl::sycl::detail::property_base> >::new_allocator()
  0.00      6.36     0.00        4     0.00     0.00  __gnu_cxx::new_allocator<std::shared_ptr<cl::sycl::detail::property_base> >::~new_allocator()
  0.00      6.36     0.00        4     0.00     0.00  std::allocator<std::shared_ptr<cl::sycl::detail::property_base> >::allocator()
  0.00      6.36     0.00        4     0.00     0.00  std::allocator<std::shared_ptr<cl::sycl::detail::property_base> >::~allocator()
  0.00      6.36     0.00        4     0.00     0.00  std::shared_ptr<cl::sycl::detail::queue>::~shared_ptr()
  0.00      6.36     0.00        4     0.00     0.00  void std::_Destroy_aux<false>::__destroy<std::shared_ptr<cl::sycl::detail::property_base>*>(std::shared_ptr<cl::sycl::detail::property_base>*, std::shared_ptr<cl::sycl::detail::property_base>*)
  0.00      6.36     0.00        4     0.00     0.00  std::_Vector_base<std::shared_ptr<cl::sycl::detail::property_base>, std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > >::_Vector_impl::_Vector_impl()
  0.00      6.36     0.00        4     0.00     0.00  std::_Vector_base<std::shared_ptr<cl::sycl::detail::property_base>, std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > >::_Vector_impl::~_Vector_impl()
  0.00      6.36     0.00        4     0.00     0.00  std::_Vector_base<std::shared_ptr<cl::sycl::detail::property_base>, std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > >::_M_deallocate(std::shared_ptr<cl::sycl::detail::property_base>*, unsigned long)
  0.00      6.36     0.00        4     0.00     0.00  std::_Vector_base<std::shared_ptr<cl::sycl::detail::property_base>, std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > >::_Vector_impl_data::_Vector_impl_data()
  0.00      6.36     0.00        4     0.00     0.00  std::_Vector_base<std::shared_ptr<cl::sycl::detail::property_base>, std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > >::_M_get_Tp_allocator()
  0.00      6.36     0.00        4     0.00     0.00  std::_Vector_base<std::shared_ptr<cl::sycl::detail::property_base>, std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > >::_Vector_base()
  0.00      6.36     0.00        4     0.00     0.00  std::_Vector_base<std::shared_ptr<cl::sycl::detail::property_base>, std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > >::~_Vector_base()
  0.00      6.36     0.00        4     0.00     0.00  std::__shared_ptr<cl::sycl::detail::queue, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr()
  0.00      6.36     0.00        4     0.00     0.00  std::vector<std::shared_ptr<cl::sycl::detail::property_base>, std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > >::reserve(unsigned long)
  0.00      6.36     0.00        4     0.00     0.00  std::vector<std::shared_ptr<cl::sycl::detail::property_base>, std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > >::vector()
  0.00      6.36     0.00        4     0.00     0.00  std::vector<std::shared_ptr<cl::sycl::detail::property_base>, std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > >::~vector()
  0.00      6.36     0.00        4     0.00     0.00  void std::_Destroy<std::shared_ptr<cl::sycl::detail::property_base>*>(std::shared_ptr<cl::sycl::detail::property_base>*, std::shared_ptr<cl::sycl::detail::property_base>*)
  0.00      6.36     0.00        4     0.00     0.00  void std::_Destroy<std::shared_ptr<cl::sycl::detail::property_base>*, std::shared_ptr<cl::sycl::detail::property_base> >(std::shared_ptr<cl::sycl::detail::property_base>*, std::shared_ptr<cl::sycl::detail::property_base>*, std::allocator<std::shared_ptr<cl::sycl::detail::property_base> >&)
  0.00      6.36     0.00        3     0.00     0.00  cl::sycl::detail::aligned_mem::aligned_allocator::aligned_allocator(cl::sycl::detail::aligned_mem::aligned_allocator const&)
  0.00      6.36     0.00        3     0.00     0.00  cl::sycl::detail::index_array::index_array(unsigned long, unsigned long, unsigned long)
  0.00      6.36     0.00        3     0.00     0.00  cl::sycl::detail::id_range_base<unsigned long, 3, cl::sycl::detail::index_array>::id_range_base<unsigned long, unsigned long, unsigned long>(cl::sycl::detail::id_range_base<unsigned long, 3, cl::sycl::detail::index_array>::values_tag, unsigned long, unsigned long, unsigned long)
  0.00      6.36     0.00        3     0.00     0.00  cl::sycl::detail::base_allocator::base_allocator(cl::sycl::detail::base_allocator const&)
  0.00      6.36     0.00        3     0.00     0.00  __gnu_cxx::new_allocator<int>::~new_allocator()
  0.00      6.36     0.00        3     0.00     0.00  cl::sycl::range<1>::operator cl::sycl::detail::index_array() const
  0.00      6.36     0.00        3     0.00     0.00  cl::sycl::detail::id_range_base<unsigned long, 1, cl::sycl::range<1> >::get(int) const
  0.00      6.36     0.00        3     0.00     0.00  std::chrono::duration<long, std::ratio<1l, 1000000000l> >::count() const
  0.00      6.36     0.00        3     0.00     0.00  std::allocator<int>::~allocator()
  0.00      6.36     0.00        3     0.00     0.00  std::_Head_base<0ul, cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, false>::_M_head(std::_Head_base<0ul, cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, false>&)
  0.00      6.36     0.00        3     0.00     0.00  std::_Tuple_impl<0ul, cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::_M_head(std::_Tuple_impl<0ul, cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >&)
  0.00      6.36     0.00        3     0.00     0.00  std::_Function_base::_Base_manager<void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>)
  0.00      6.36     0.00        3     0.00     0.00  std::__uniq_ptr_impl<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::_M_ptr()
  0.00      6.36     0.00        3     0.00     0.00  cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*& std::__get_helper<0ul, cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >(std::_Tuple_impl<0ul, cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >&)
  0.00      6.36     0.00        3     0.00     0.00  std::tuple_element<0ul, std::tuple<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > > >::type& std::get<0ul, cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >(std::tuple<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >&)
  0.00      6.36     0.00        3     0.00     0.00  std::remove_reference<void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}&>::type&& std::move<void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}&>(void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}&&)
  0.00      6.36     0.00        3     0.00     0.00  cl::sycl::detail::base_allocator*& std::forward<cl::sycl::detail::base_allocator*&>(std::remove_reference<cl::sycl::detail::base_allocator*&>::type&)
  0.00      6.36     0.00        3     0.00     0.00  void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}::item_base({lambda(cl::sycl::id<1>)#1}::item_base const&)
  0.00      6.36     0.00        2     0.00     0.00  cl::sycl::detail::base_allocator::base_allocator()
  0.00      6.36     0.00        2     0.00     0.00  cl::sycl::context::~context()
  0.00      6.36     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> >::new_allocator()
  0.00      6.36     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> >::~new_allocator()
  0.00      6.36     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
  0.00      6.36     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<int>::max_size() const
  0.00      6.36     0.00        2     0.00     0.00  std::unique_ptr<cl::sycl::handler, std::default_delete<cl::sycl::handler> >::get() const
  0.00      6.36     0.00        2     0.00     0.00  std::__uniq_ptr_impl<cl::sycl::handler, std::default_delete<cl::sycl::handler> >::_M_ptr() const
  0.00      6.36     0.00        2     0.00     0.00  std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::time_since_epoch() const
  0.00      6.36     0.00        2     0.00     0.00  void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1} const* const& std::_Any_data::_M_access<void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1} const*>() const
  0.00      6.36     0.00        2     0.00     0.00  std::allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> >::allocator<void>(std::allocator<void> const&)
  0.00      6.36     0.00        2     0.00     0.00  std::allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> >::~allocator()
  0.00      6.36     0.00        2     0.00     0.00  std::allocator<int>::allocator(std::allocator<int> const&)
  0.00      6.36     0.00        2     0.00     0.00  std::_Head_base<0ul, cl::sycl::handler*, false>::_M_head(std::_Head_base<0ul, cl::sycl::handler*, false> const&)
  0.00      6.36     0.00        2     0.00     0.00  std::shared_ptr<cl::sycl::detail::event>::~shared_ptr()
  0.00      6.36     0.00        2     0.00     0.00  std::shared_ptr<cl::sycl::detail::context>::~shared_ptr()
  0.00      6.36     0.00        2     0.00     0.00  std::_Tuple_impl<0ul, cl::sycl::handler*, std::default_delete<cl::sycl::handler> >::_M_head(std::_Tuple_impl<0ul, cl::sycl::handler*, std::default_delete<cl::sycl::handler> > const&)
  0.00      6.36     0.00        2     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
  0.00      6.36     0.00        2     0.00     0.00  std::__shared_ptr<cl::sycl::detail::event, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr()
  0.00      6.36     0.00        2     0.00     0.00  std::__shared_ptr<cl::sycl::detail::context, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr()
  0.00      6.36     0.00        2     0.00     0.00  std::_Function_base::_Base_manager<void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}>::_M_clone(std::_Any_data&, {lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1} const&, std::integral_constant<bool, false>)
  0.00      6.36     0.00        2     0.00     0.00  std::_Function_base::_Function_base()
  0.00      6.36     0.00        2     0.00     0.00  std::_Function_base::~_Function_base()
  0.00      6.36     0.00        2     0.00     0.00  std::__allocated_ptr<std::allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> > >::__allocated_ptr(std::allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> >&, std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>*)
  0.00      6.36     0.00        2     0.00     0.00  std::__allocated_ptr<std::allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> > >::~__allocated_ptr()
  0.00      6.36     0.00        2     0.00     0.00  std::allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> >* std::__addressof<std::allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> >&)
  0.00      6.36     0.00        2     0.00     0.00  cl::sycl::handler* const& std::__get_helper<0ul, cl::sycl::handler*, std::default_delete<cl::sycl::handler> >(std::_Tuple_impl<0ul, cl::sycl::handler*, std::default_delete<cl::sycl::handler> > const&)
  0.00      6.36     0.00        2     0.00     0.00  std::tuple_element<0ul, std::tuple<cl::sycl::handler*, std::default_delete<cl::sycl::handler> > >::type const& std::get<0ul, cl::sycl::handler*, std::default_delete<cl::sycl::handler> >(std::tuple<cl::sycl::handler*, std::default_delete<cl::sycl::handler> > const&)
  0.00      6.36     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z3hcfjj
  0.00      6.36     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      6.36     0.00        1     0.00     0.00  cl::sycl::buffer_mem::~buffer_mem()
  0.00      6.36     0.00        1     0.00     0.00  cl::sycl::amd_selector::amd_selector()
  0.00      6.36     0.00        1     0.00     0.00  cl::sycl::cpu_selector::cpu_selector()
  0.00      6.36     0.00        1     0.00     0.00  cl::sycl::gpu_selector::gpu_selector()
  0.00      6.36     0.00        1     0.00     0.00  cl::sycl::host_selector::host_selector()
  0.00      6.36     0.00        1     0.00     0.00  cl::sycl::intel_selector::intel_selector()
  0.00      6.36     0.00        1     0.00     0.00  cl::sycl::default_selector::default_selector()
  0.00      6.36     0.00        1     0.00     0.00  cl::sycl::accelerator_selector::accelerator_selector()
  0.00      6.36     0.00        1     0.00     0.00  cl::sycl::event::~event()
  0.00      6.36     0.00        1     0.00     0.00  cl::sycl::event cl::sycl::queue::submit<main::{lambda(cl::sycl::handler&)#1}>(main::{lambda(cl::sycl::handler&)#1})
  0.00      6.36     0.00        1     0.00     0.00  cl::sycl::queue::queue(cl::sycl::property_list const&)
  0.00      6.36     0.00        1     0.00     0.00  cl::sycl::queue::~queue()
  0.00      6.36     0.00        1     0.00     0.00  cl::sycl::range<1>::range<>(unsigned long)
  0.00      6.36     0.00        1     0.00     0.00  cl::sycl::accessor<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0> cl::sycl::buffer<int, 1, cl::sycl::detail::aligned_mem::aligned_allocator>::get_access<(cl::sycl::access::mode)1, (cl::sycl::access::target)1>(cl::sycl::handler&)
  0.00      6.36     0.00        1     0.00     0.00  cl::sycl::buffer<int, 1, cl::sycl::detail::aligned_mem::aligned_allocator>::buffer(int*, cl::sycl::range<1> const&, cl::sycl::property_list const&)
  0.00      6.36     0.00        1     0.00     0.00  cl::sycl::buffer<int, 1, cl::sycl::detail::aligned_mem::aligned_allocator>::~buffer()
  0.00      6.36     0.00        1     0.00     0.00  cl::sycl::detail::NullDeleter::operator()(void*)
  0.00      6.36     0.00        1     0.00     0.00  cl::sycl::detail::aligned_mem::aligned_allocator::deallocate(void*, unsigned long)
  0.00      6.36     0.00        1     0.00     0.00  cl::sycl::detail::aligned_mem::aligned_allocator::allocate(unsigned long)
  0.00      6.36     0.00        1     0.00     0.00  cl::sycl::detail::aligned_mem::aligned_allocator::aligned_allocator(unsigned long, unsigned long)
  0.00      6.36     0.00        1     0.00     0.00  cl::sycl::detail::access_range::access_range(cl::sycl::detail::index_array, cl::sycl::detail::index_array)
  0.00      6.36     0.00        1     0.00     0.00  cl::sycl::event cl::sycl::detail::command_group::submit_handler<main::{lambda(cl::sycl::handler&)#1}>(main::{lambda(cl::sycl::handler&)#1}, std::shared_ptr<cl::sycl::detail::queue> const&, cl::sycl::detail::standard_handler_tag)
  0.00      6.36     0.00        1     0.00     0.00  cl::sycl::detail::command_group::command_group(std::shared_ptr<cl::sycl::detail::queue> const&)
  0.00      6.36     0.00        1     0.00     0.00  cl::sycl::detail::command_group::~command_group()
  0.00      6.36     0.00        1     0.00     0.00  cl::sycl::detail::id_range_base<unsigned long, 1, cl::sycl::range<1> >::id_range_base<unsigned long>(cl::sycl::detail::id_range_base<unsigned long, 1, cl::sycl::range<1> >::values_tag, unsigned long)
  0.00      6.36     0.00        1     0.00     0.00  cl::sycl::detail::nd_range_base::nd_range_base(cl::sycl::detail::index_array, cl::sycl::detail::index_array)
  0.00      6.36     0.00        1     0.00     0.00  cl::sycl::detail::accessor_common<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::accessor_common(cl::sycl::detail::accessor_common<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>&&)
  0.00      6.36     0.00        1     0.00     0.00  cl::sycl::detail::accessor_common<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::accessor_common(cl::sycl::storage_mem&, cl::sycl::handler&, cl::sycl::detail::access_range, cl::sycl::property_list const&)
  0.00      6.36     0.00        1     0.00     0.00  cl::sycl::detail::access_range cl::sycl::detail::get_access_range<1, 1>(cl::sycl::range<1> const&)
  0.00      6.36     0.00        1     0.00     0.00  cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>::wrapped_allocator(cl::sycl::detail::aligned_mem::aligned_allocator, unsigned long)
  0.00      6.36     0.00        1     0.00     0.00  cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>::~wrapped_allocator()
  0.00      6.36     0.00        1     0.00     0.00  cl::sycl::detail::make_base_allocator<int, cl::sycl::detail::aligned_mem::aligned_allocator>::get_buffer_allocator(cl::sycl::detail::aligned_mem::aligned_allocator)
  0.00      6.36     0.00        1     0.00     0.00  cl::sycl::detail::make_base_allocator<int, cl::sycl::detail::aligned_mem::aligned_allocator>::get_elem_size_multiplier()
  0.00      6.36     0.00        1     0.00     0.00  cl::sycl::detail::make_base_allocator<int, cl::sycl::detail::aligned_mem::aligned_allocator>::get(cl::sycl::detail::aligned_mem::aligned_allocator, unsigned long)
  0.00      6.36     0.00        1     0.00     0.00  cl::sycl::access::mode cl::sycl::detail::mode_from_properties<(cl::sycl::access::mode)1>(cl::sycl::property_list const&)
  0.00      6.36     0.00        1     0.00     0.00  cl::sycl::detail::accessor_buffer_interface<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::accessor_buffer_interface(cl::sycl::detail::accessor_buffer_interface<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>&&)
  0.00      6.36     0.00        1     0.00     0.00  _ZN2cl4sycl6detail25accessor_buffer_interfaceIiLi1ELNS0_6access4modeE1ELNS3_6targetE1ELNS3_11placeholderE0EECI2NS1_15accessor_commonIiLi1ELS4_1ELS5_1ELS6_0EEEERNS0_11storage_memERNS0_7handlerENS1_12access_rangeERKNS0_13property_listE
  0.00      6.36     0.00        1     0.00     0.00  cl::sycl::detail::init_sycl_language_version::init_sycl_language_version()
  0.00      6.36     0.00        1     0.00     0.00  _ZN2cl4sycl6detailL15get_handler_tagIZ4mainEUlRNS0_7handlerEE_EEDTcmclfp_cl7declvalIS4_EEEtlNS1_20standard_handler_tagEEET_NS1_14handler_choiceILj0EEE
  0.00      6.36     0.00        1     0.00     0.00  cl::sycl::kernel::~kernel()
  0.00      6.36     0.00        1     0.00     0.00  void cl::sycl::handler::parallel_for<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::range<1> const&, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1} const&)
  0.00      6.36     0.00        1     0.00     0.00  void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})
  0.00      6.36     0.00        1     0.00     0.00  void cl::sycl::handler::process_functor_arguments<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}>(main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1} const&, cl::sycl::kernel&, cl::sycl::detail::enqueue_device_kernel_command*)
  0.00      6.36     0.00        1     0.00     0.00  cl::sycl::program cl::sycl::program::create_program_for_kernel<Totient<int> >(cl::sycl::context)
  0.00      6.36     0.00        1     0.00     0.00  cl::sycl::program::~program()
  0.00      6.36     0.00        1     0.00     0.00  cl::sycl::accessor<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::accessor(cl::sycl::accessor<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>&&)
  0.00      6.36     0.00        1     0.00     0.00  cl::sycl::accessor<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::accessor<cl::sycl::detail::aligned_mem::aligned_allocator, int, void>(cl::sycl::buffer<int, 1, cl::sycl::detail::aligned_mem::aligned_allocator>&, cl::sycl::handler&, cl::sycl::property_list const&)
  0.00      6.36     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> >::deallocate(std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>*, unsigned long)
  0.00      6.36     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> >::allocate(unsigned long, void const*)
  0.00      6.36     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
  0.00      6.36     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
  0.00      6.36     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<int>::new_allocator()
  0.00      6.36     0.00        1     0.00     0.00  __gnu_cxx::__atomic_add(int volatile*, int)
  0.00      6.36     0.00        1     0.00     0.00  __gnu_cxx::__atomic_add_dispatch(int*, int)
  0.00      6.36     0.00        1     0.00     0.00  bool cl::sycl::property_list::has_property<cl::sycl::property::no_init_impl>() const
  0.00      6.36     0.00        1     0.00     0.00  cl::sycl::buffer<int, 1, cl::sycl::detail::aligned_mem::aligned_allocator>::get_range() const
  0.00      6.36     0.00        1     0.00     0.00  cl::sycl::kernel cl::sycl::program::get_kernel<Totient<int> >() const
  0.00      6.36     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> >::max_size() const
  0.00      6.36     0.00        1     0.00     0.00  std::unique_ptr<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::get() const
  0.00      6.36     0.00        1     0.00     0.00  std::unique_ptr<cl::sycl::handler, std::default_delete<cl::sycl::handler> >::operator*() const
  0.00      6.36     0.00        1     0.00     0.00  std::default_delete<cl::sycl::handler>::operator()(cl::sycl::handler*) const
  0.00      6.36     0.00        1     0.00     0.00  std::__uniq_ptr_impl<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::_M_ptr() const
  0.00      6.36     0.00        1     0.00     0.00  std::chrono::duration<long, std::ratio<1l, 1000l> >::count() const
  0.00      6.36     0.00        1     0.00     0.00  int* std::vector<int, std::allocator<int> >::_M_data_ptr<int>(int*) const
  0.00      6.36     0.00        1     0.00     0.00  std::allocator<int>::allocator()
  0.00      6.36     0.00        1     0.00     0.00  std::_Head_base<0ul, cl::sycl::detail::base_allocator*, false>::_M_head(std::_Head_base<0ul, cl::sycl::detail::base_allocator*, false>&)
  0.00      6.36     0.00        1     0.00     0.00  std::_Head_base<0ul, cl::sycl::detail::base_allocator*, false>::_Head_base<cl::sycl::detail::base_allocator*&>(cl::sycl::detail::base_allocator*&)
  0.00      6.36     0.00        1     0.00     0.00  std::_Head_base<0ul, cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, false>::_M_head(std::_Head_base<0ul, cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, false> const&)
  0.00      6.36     0.00        1     0.00     0.00  std::_Head_base<0ul, cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, false>::_Head_base()
  0.00      6.36     0.00        1     0.00     0.00  std::_Head_base<0ul, cl::sycl::handler*, false>::_M_head(std::_Head_base<0ul, cl::sycl::handler*, false>&)
  0.00      6.36     0.00        1     0.00     0.00  std::_Head_base<1ul, std::default_delete<cl::sycl::detail::base_allocator>, true>::_Head_base<std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >(std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >&&)
  0.00      6.36     0.00        1     0.00     0.00  std::_Head_base<1ul, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >, true>::_M_head(std::_Head_base<1ul, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >, true>&)
  0.00      6.36     0.00        1     0.00     0.00  std::_Head_base<1ul, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >, true>::_Head_base()
  0.00      6.36     0.00        1     0.00     0.00  std::_Head_base<1ul, std::default_delete<cl::sycl::handler>, true>::_M_head(std::_Head_base<1ul, std::default_delete<cl::sycl::handler>, true>&)
  0.00      6.36     0.00        1     0.00     0.00  std::shared_ptr<cl::sycl::detail::queue>::shared_ptr()
  0.00      6.36     0.00        1     0.00     0.00  std::shared_ptr<cl::sycl::detail::queue>::shared_ptr(decltype(nullptr))
  0.00      6.36     0.00        1     0.00     0.00  std::shared_ptr<cl::sycl::detail::queue>::shared_ptr(std::shared_ptr<cl::sycl::detail::queue> const&)
  0.00      6.36     0.00        1     0.00     0.00  std::shared_ptr<cl::sycl::detail::kernel>::~shared_ptr()
  0.00      6.36     0.00        1     0.00     0.00  std::shared_ptr<cl::sycl::detail::program>::~shared_ptr()
  0.00      6.36     0.00        1     0.00     0.00  std::shared_ptr<void>::shared_ptr<void, cl::sycl::detail::NullDeleter, void>(void*, cl::sycl::detail::NullDeleter)
  0.00      6.36     0.00        1     0.00     0.00  std::shared_ptr<void>::~shared_ptr()
  0.00      6.36     0.00        1     0.00     0.00  std::unique_ptr<cl::sycl::detail::base_allocator, std::default_delete<cl::sycl::detail::base_allocator> >::unique_ptr<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >, void>(std::unique_ptr<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >&&)
  0.00      6.36     0.00        1     0.00     0.00  std::unique_ptr<cl::sycl::detail::base_allocator, std::default_delete<cl::sycl::detail::base_allocator> >::~unique_ptr()
  0.00      6.36     0.00        1     0.00     0.00  std::unique_ptr<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::get_deleter()
  0.00      6.36     0.00        1     0.00     0.00  std::unique_ptr<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::release()
  0.00      6.36     0.00        1     0.00     0.00  std::unique_ptr<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::unique_ptr<std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >, void>(cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*)
  0.00      6.36     0.00        1     0.00     0.00  std::unique_ptr<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::~unique_ptr()
  0.00      6.36     0.00        1     0.00     0.00  std::unique_ptr<cl::sycl::handler, std::default_delete<cl::sycl::handler> >::get_deleter()
  0.00      6.36     0.00        1     0.00     0.00  std::unique_ptr<cl::sycl::handler, std::default_delete<cl::sycl::handler> >::~unique_ptr()
  0.00      6.36     0.00        1     0.00     0.00  std::_Tuple_impl<0ul, cl::sycl::detail::base_allocator*, std::default_delete<cl::sycl::detail::base_allocator> >::_M_head(std::_Tuple_impl<0ul, cl::sycl::detail::base_allocator*, std::default_delete<cl::sycl::detail::base_allocator> >&)
  0.00      6.36     0.00        1     0.00     0.00  std::_Tuple_impl<0ul, cl::sycl::detail::base_allocator*, std::default_delete<cl::sycl::detail::base_allocator> >::_Tuple_impl<cl::sycl::detail::base_allocator*&, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >, void>(cl::sycl::detail::base_allocator*&, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >&&)
  0.00      6.36     0.00        1     0.00     0.00  std::_Tuple_impl<0ul, cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::_M_head(std::_Tuple_impl<0ul, cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > > const&)
  0.00      6.36     0.00        1     0.00     0.00  std::_Tuple_impl<0ul, cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::_Tuple_impl()
  0.00      6.36     0.00        1     0.00     0.00  std::_Tuple_impl<0ul, cl::sycl::handler*, std::default_delete<cl::sycl::handler> >::_M_head(std::_Tuple_impl<0ul, cl::sycl::handler*, std::default_delete<cl::sycl::handler> >&)
  0.00      6.36     0.00        1     0.00     0.00  std::_Tuple_impl<1ul, std::default_delete<cl::sycl::detail::base_allocator> >::_Tuple_impl<std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >(std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >&&)
  0.00      6.36     0.00        1     0.00     0.00  std::_Tuple_impl<1ul, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::_M_head(std::_Tuple_impl<1ul, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >&)
  0.00      6.36     0.00        1     0.00     0.00  std::_Tuple_impl<1ul, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::_Tuple_impl()
  0.00      6.36     0.00        1     0.00     0.00  std::_Tuple_impl<1ul, std::default_delete<cl::sycl::handler> >::_M_head(std::_Tuple_impl<1ul, std::default_delete<cl::sycl::handler> >&)
  0.00      6.36     0.00        1     0.00     0.00  void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
  0.00      6.36     0.00        1     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
  0.00      6.36     0.00        1     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
  0.00      6.36     0.00        1     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
  0.00      6.36     0.00        1     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
  0.00      6.36     0.00        1     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
  0.00      6.36     0.00        1     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data()
  0.00      6.36     0.00        1     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
  0.00      6.36     0.00        1     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
  0.00      6.36     0.00        1     0.00     0.00  std::__shared_ptr<cl::sycl::detail::queue, (__gnu_cxx::_Lock_policy)2>::__shared_ptr(std::__shared_ptr<cl::sycl::detail::queue, (__gnu_cxx::_Lock_policy)2> const&)
  0.00      6.36     0.00        1     0.00     0.00  std::__shared_ptr<cl::sycl::detail::queue, (__gnu_cxx::_Lock_policy)2>::__shared_ptr()
  0.00      6.36     0.00        1     0.00     0.00  std::__shared_ptr<cl::sycl::detail::kernel, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr()
  0.00      6.36     0.00        1     0.00     0.00  std::__shared_ptr<cl::sycl::detail::program, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr()
  0.00      6.36     0.00        1     0.00     0.00  std::enable_if<!std::__shared_ptr<void, (__gnu_cxx::_Lock_policy)2>::__has_esft_base<void, void>::value, void>::type std::__shared_ptr<void, (__gnu_cxx::_Lock_policy)2>::_M_enable_shared_from_this_with<void, void>(void*)
  0.00      6.36     0.00        1     0.00     0.00  std::__shared_ptr<void, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<void, cl::sycl::detail::NullDeleter, void>(void*, cl::sycl::detail::NullDeleter)
  0.00      6.36     0.00        1     0.00     0.00  std::__shared_ptr<void, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr()
  0.00      6.36     0.00        1     0.00     0.00  std::_Function_base::_Base_manager<void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}>::_M_manager(std::_Any_data&, {lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1} const&, std::_Manager_operation)
  0.00      6.36     0.00        1     0.00     0.00  std::_Function_base::_Base_manager<void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}>::_M_init_functor(std::_Any_data&, {lambda(cl::sycl::id<1>)#1}::item_base&&)
  0.00      6.36     0.00        1     0.00     0.00  std::_Function_base::_Base_manager<void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}>::_M_init_functor(std::_Any_data&, {lambda(cl::sycl::id<1>)#1}::item_base&&, std::integral_constant<bool, false>)
  0.00      6.36     0.00        1     0.00     0.00  bool std::_Function_base::_Base_manager<void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}>::_M_not_empty_function<{lambda(cl::sycl::id<1>)#1}::item_base>({lambda(cl::sycl::id<1>)#1}::item_base const&)
  0.00      6.36     0.00        1     0.00     0.00  std::_Sp_ebo_helper<0, cl::sycl::detail::NullDeleter, true>::_S_get(std::_Sp_ebo_helper<0, cl::sycl::detail::NullDeleter, true>&)
  0.00      6.36     0.00        1     0.00     0.00  std::_Sp_ebo_helper<0, cl::sycl::detail::NullDeleter, true>::_Sp_ebo_helper(cl::sycl::detail::NullDeleter&&)
  0.00      6.36     0.00        1     0.00     0.00  std::_Sp_ebo_helper<1, std::allocator<void>, true>::_S_get(std::_Sp_ebo_helper<1, std::allocator<void>, true>&)
  0.00      6.36     0.00        1     0.00     0.00  std::_Sp_ebo_helper<1, std::allocator<void>, true>::_Sp_ebo_helper(std::allocator<void> const&)
  0.00      6.36     0.00        1     0.00     0.00  std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count(std::__shared_count<(__gnu_cxx::_Lock_policy)2> const&)
  0.00      6.36     0.00        1     0.00     0.00  std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, void>(void*, cl::sycl::detail::NullDeleter, std::allocator<void>)
  0.00      6.36     0.00        1     0.00     0.00  std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count()
  0.00      6.36     0.00        1     0.00     0.00  std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<void*, cl::sycl::detail::NullDeleter, void>(void*, cl::sycl::detail::NullDeleter)
  0.00      6.36     0.00        1     0.00     0.00  std::default_delete<cl::sycl::detail::base_allocator>::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>, void>(std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > const&)
  0.00      6.36     0.00        1     0.00     0.00  std::__allocated_ptr<std::allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> > >::get()
  0.00      6.36     0.00        1     0.00     0.00  std::__allocated_ptr<std::allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> > >::operator=(decltype(nullptr))
  0.00      6.36     0.00        1     0.00     0.00  std::__uniq_ptr_impl<cl::sycl::detail::base_allocator, std::default_delete<cl::sycl::detail::base_allocator> >::_M_ptr()
  0.00      6.36     0.00        1     0.00     0.00  std::__uniq_ptr_impl<cl::sycl::detail::base_allocator, std::default_delete<cl::sycl::detail::base_allocator> >::__uniq_ptr_impl<std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >(cl::sycl::detail::base_allocator*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >&&)
  0.00      6.36     0.00        1     0.00     0.00  std::__uniq_ptr_impl<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::_M_deleter()
  0.00      6.36     0.00        1     0.00     0.00  std::__uniq_ptr_impl<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::__uniq_ptr_impl(cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*)
  0.00      6.36     0.00        1     0.00     0.00  std::__uniq_ptr_impl<cl::sycl::handler, std::default_delete<cl::sycl::handler> >::_M_deleter()
  0.00      6.36     0.00        1     0.00     0.00  std::__uniq_ptr_impl<cl::sycl::handler, std::default_delete<cl::sycl::handler> >::_M_ptr()
  0.00      6.36     0.00        1     0.00     0.00  std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_add_ref_copy()
  0.00      6.36     0.00        1     0.00     0.00  std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_Sp_counted_base()
  0.00      6.36     0.00        1     0.00     0.00  std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::~_Sp_counted_base()
  0.00      6.36     0.00        1     0.00     0.00  std::allocator_traits<std::allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> > >::deallocate(std::allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> >&, std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>*, unsigned long)
  0.00      6.36     0.00        1     0.00     0.00  std::allocator_traits<std::allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> > >::allocate(std::allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> >&, unsigned long)
  0.00      6.36     0.00        1     0.00     0.00  std::allocator_traits<std::allocator<int> >::deallocate(std::allocator<int>&, int*, unsigned long)
  0.00      6.36     0.00        1     0.00     0.00  std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long)
  0.00      6.36     0.00        1     0.00     0.00  std::allocator_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
  0.00      6.36     0.00        1     0.00     0.00  std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_Impl::_M_del()
  0.00      6.36     0.00        1     0.00     0.00  std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_Impl::_M_alloc()
  0.00      6.36     0.00        1     0.00     0.00  std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_Impl::_Impl(void*, cl::sycl::detail::NullDeleter, std::allocator<void> const&)
  0.00      6.36     0.00        1     0.00     0.00  std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_deleter(void*, cl::sycl::detail::NullDeleter, std::allocator<void> const&)
  0.00      6.36     0.00        1     0.00     0.00  std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_deleter()
  0.00      6.36     0.00        1     0.00     0.00  int* std::__uninitialized_default_n_1<true>::__uninit_default_n<int*, unsigned long>(int*, unsigned long)
  0.00      6.36     0.00        1     0.00     0.00  std::tuple<cl::sycl::detail::base_allocator*, std::default_delete<cl::sycl::detail::base_allocator> >::tuple<cl::sycl::detail::base_allocator*&, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >, true>(cl::sycl::detail::base_allocator*&, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >&&)
  0.00      6.36     0.00        1     0.00     0.00  std::tuple<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::tuple<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >, true>()
  0.00      6.36     0.00        1     0.00     0.00  std::enable_if<std::chrono::__is_duration<std::chrono::duration<long, std::ratio<1l, 1000l> > >::value, std::chrono::duration<long, std::ratio<1l, 1000l> > >::type std::chrono::duration_cast<std::chrono::duration<long, std::ratio<1l, 1000l> >, long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&)
  0.00      6.36     0.00        1     0.00     0.00  std::chrono::duration<long, std::ratio<1l, 1000l> > std::chrono::__duration_cast_impl<std::chrono::duration<long, std::ratio<1l, 1000l> >, std::ratio<1l, 1000000l>, long, true, false>::__cast<long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&)
  0.00      6.36     0.00        1     0.00     0.00  std::chrono::duration<long, std::ratio<1l, 1000000000l> >::duration<long, void>(long const&)
  0.00      6.36     0.00        1     0.00     0.00  std::chrono::duration<long, std::ratio<1l, 1000l> >::duration<long, void>(long const&)
  0.00      6.36     0.00        1     0.00     0.00  std::common_type<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::type std::chrono::operator-<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >(std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&, std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&)
  0.00      6.36     0.00        1     0.00     0.00  std::common_type<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::type std::chrono::operator-<long, std::ratio<1l, 1000000000l>, long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&, std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&)
  0.00      6.36     0.00        1     0.00     0.00  std::vector<int, std::allocator<int> >::_S_max_size(std::allocator<int> const&)
  0.00      6.36     0.00        1     0.00     0.00  std::vector<int, std::allocator<int> >::_S_check_init_len(unsigned long, std::allocator<int> const&)
  0.00      6.36     0.00        1     0.00     0.00  std::vector<int, std::allocator<int> >::_M_default_initialize(unsigned long)
  0.00      6.36     0.00        1     0.00     0.00  std::vector<int, std::allocator<int> >::data()
  0.00      6.36     0.00        1     0.00     0.00  std::vector<int, std::allocator<int> >::vector(unsigned long, std::allocator<int> const&)
  0.00      6.36     0.00        1     0.00     0.00  std::vector<int, std::allocator<int> >::~vector()
  0.00      6.36     0.00        1     0.00     0.00  std::function<void (cl::sycl::exception_list)>::function()
  0.00      6.36     0.00        1     0.00     0.00  std::function<void (cl::sycl::exception_list)>::~function()
  0.00      6.36     0.00        1     0.00     0.00  std::function<void (cl::sycl::detail::item_base&)>::function<void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda(cl::sycl::detail::item_base&)#1}, void, void>(void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda(cl::sycl::detail::item_base&)#1})
  0.00      6.36     0.00        1     0.00     0.00  std::function<void (cl::sycl::detail::item_base&)>::~function()
  0.00      6.36     0.00        1     0.00     0.00  __gnu_cxx::__enable_if<std::__is_scalar<int>::__value, int*>::__type std::__fill_n_a<int*, unsigned long, int>(int*, unsigned long, int const&)
  0.00      6.36     0.00        1     0.00     0.00  cl::sycl::detail::base_allocator*& std::__get_helper<0ul, cl::sycl::detail::base_allocator*, std::default_delete<cl::sycl::detail::base_allocator> >(std::_Tuple_impl<0ul, cl::sycl::detail::base_allocator*, std::default_delete<cl::sycl::detail::base_allocator> >&)
  0.00      6.36     0.00        1     0.00     0.00  cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>* const& std::__get_helper<0ul, cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >(std::_Tuple_impl<0ul, cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > > const&)
  0.00      6.36     0.00        1     0.00     0.00  cl::sycl::handler*& std::__get_helper<0ul, cl::sycl::handler*, std::default_delete<cl::sycl::handler> >(std::_Tuple_impl<0ul, cl::sycl::handler*, std::default_delete<cl::sycl::handler> >&)
  0.00      6.36     0.00        1     0.00     0.00  std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >& std::__get_helper<1ul, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >>(std::_Tuple_impl<1ul, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >>&)
  0.00      6.36     0.00        1     0.00     0.00  std::default_delete<cl::sycl::handler>& std::__get_helper<1ul, std::default_delete<cl::sycl::handler>>(std::_Tuple_impl<1ul, std::default_delete<cl::sycl::handler>>&)
  0.00      6.36     0.00        1     0.00     0.00  int* std::__niter_base<int*>(int*)
  0.00      6.36     0.00        1     0.00     0.00  int* std::__niter_wrap<int*>(int* const&, int*)
  0.00      6.36     0.00        1     0.00     0.00  std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>* std::__to_address<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> >(std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>*)
  0.00      6.36     0.00        1     0.00     0.00  std::__allocated_ptr<std::allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> > > std::__allocate_guarded<std::allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> >&)
  0.00      6.36     0.00        1     0.00     0.00  int* std::__uninitialized_default_n<int*, unsigned long>(int*, unsigned long)
  0.00      6.36     0.00        1     0.00     0.00  int* std::__uninitialized_default_n_a<int*, unsigned long, int>(int*, unsigned long, std::allocator<int>&)
  0.00      6.36     0.00        1     0.00     0.00  std::tuple_element<0ul, std::tuple<cl::sycl::detail::base_allocator*, std::default_delete<cl::sycl::detail::base_allocator> > >::type& std::get<0ul, cl::sycl::detail::base_allocator*, std::default_delete<cl::sycl::detail::base_allocator> >(std::tuple<cl::sycl::detail::base_allocator*, std::default_delete<cl::sycl::detail::base_allocator> >&)
  0.00      6.36     0.00        1     0.00     0.00  std::tuple_element<0ul, std::tuple<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > > >::type const& std::get<0ul, cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >(std::tuple<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > > const&)
  0.00      6.36     0.00        1     0.00     0.00  std::tuple_element<0ul, std::tuple<cl::sycl::handler*, std::default_delete<cl::sycl::handler> > >::type& std::get<0ul, cl::sycl::handler*, std::default_delete<cl::sycl::handler> >(std::tuple<cl::sycl::handler*, std::default_delete<cl::sycl::handler> >&)
  0.00      6.36     0.00        1     0.00     0.00  std::tuple_element<1ul, std::tuple<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > > >::type& std::get<1ul, cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >(std::tuple<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >&)
  0.00      6.36     0.00        1     0.00     0.00  std::tuple_element<1ul, std::tuple<cl::sycl::handler*, std::default_delete<cl::sycl::handler> > >::type& std::get<1ul, cl::sycl::handler*, std::default_delete<cl::sycl::handler> >(std::tuple<cl::sycl::handler*, std::default_delete<cl::sycl::handler> >&)
  0.00      6.36     0.00        1     0.00     0.00  std::remove_reference<cl::sycl::detail::accessor_common<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>&>::type&& std::move<cl::sycl::detail::accessor_common<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>&>(cl::sycl::detail::accessor_common<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>&)
  0.00      6.36     0.00        1     0.00     0.00  std::remove_reference<cl::sycl::handler*&>::type&& std::move<cl::sycl::handler*&>(cl::sycl::handler*&)
  0.00      6.36     0.00        1     0.00     0.00  std::remove_reference<std::allocator<void>&>::type&& std::move<std::allocator<void>&>(std::allocator<void>&)
  0.00      6.36     0.00        1     0.00     0.00  std::remove_reference<std::shared_ptr<void> >::type&& std::move<std::shared_ptr<void> >(std::shared_ptr<void>&&)
  0.00      6.36     0.00        1     0.00     0.00  int* std::fill_n<int*, unsigned long, int>(int*, unsigned long, int const&)
  0.00      6.36     0.00        1     0.00     0.00  void std::_Destroy<int*>(int*, int*)
  0.00      6.36     0.00        1     0.00     0.00  void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
  0.00      6.36     0.00        1     0.00     0.00  main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const
  0.00      6.36     0.00        1     0.00     0.00  void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}::item_base({lambda(cl::sycl::id<1>)#1}::item_base&&)
  0.00      6.36     0.00        1     0.00     0.00  main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}::id(cl::sycl::id<1>&&)
  0.00      6.36     0.00        1     0.00     0.00  operator new(unsigned long, void*)

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.

 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012-2016 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 2 byte(s) for 0.16% of 6.36 seconds

index % time    self  children    called     name
                0.00    6.34   15000/15000       std::_Function_handler<void (cl::sycl::detail::item_base&), void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda(cl::sycl::detail::item_base&)#1}>::_M_invoke(std::_Any_data const&, cl::sycl::detail::item_base&) [3]
[1]     99.7    0.00    6.34   15000         _ZZN2cl4sycl7handler17parallel_for_implI7TotientIiEZZ4mainENKUlRS1_E_clES5_EUlNS0_2idILi1EEEE_Li1EEEvRKNS0_6detail11index_arrayESD_T0_ENUlRNSA_9item_baseEE_clESG_ [1]
                0.43    5.91   15000/15000       main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}::operator()(cl::sycl::id) const [2]
                0.00    0.00   15000/15000       cl::sycl::id<1>::id(cl::sycl::detail::item_base const&) [37]
-----------------------------------------------
                0.43    5.91   15000/15000       _ZZN2cl4sycl7handler17parallel_for_implI7TotientIiEZZ4mainENKUlRS1_E_clES5_EUlNS0_2idILi1EEEE_Li1EEEvRKNS0_6detail11index_arrayESD_T0_ENUlRNSA_9item_baseEE_clESG_ [1]
[2]     99.7    0.43    5.91   15000         main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}::operator()(cl::sycl::id) const [2]
                0.27    5.65 112507500/112507500     main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}::operator()(cl::sycl::id) const::{lambda(unsigned int, unsigned int)#2}::operator()(unsigned int, unsigned int) const [4]
                0.00    0.00   15000/45000       cl::sycl::detail::id_range_base<unsigned long, 1, cl::sycl::id<1> >::operator[](int) [21]
                0.00    0.00   15000/15000       int& cl::sycl::detail::accessor_buffer_interface<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::operator[]<int, void>(cl::sycl::id<1>) const [44]
-----------------------------------------------
                                                 <spontaneous>
[3]     99.7    0.00    6.34                 std::_Function_handler<void (cl::sycl::detail::item_base&), void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda(cl::sycl::detail::item_base&)#1}>::_M_invoke(std::_Any_data const&, cl::sycl::detail::item_base&) [3]
                0.00    6.34   15000/15000       _ZZN2cl4sycl7handler17parallel_for_implI7TotientIiEZZ4mainENKUlRS1_E_clES5_EUlNS0_2idILi1EEEE_Li1EEEvRKNS0_6detail11index_arrayESD_T0_ENUlRNSA_9item_baseEE_clESG_ [1]
                0.00    0.00   15000/15000       std::_Function_base::_Base_manager<void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}>::_M_get_pointer(std::_Any_data const&) [48]
                0.00    0.00   15000/15000       cl::sycl::detail::item_base& std::forward<cl::sycl::detail::item_base&>(std::remove_reference<cl::sycl::detail::item_base&>::type&) [50]
-----------------------------------------------
                0.27    5.65 112507500/112507500     main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}::operator()(cl::sycl::id) const [2]
[4]     92.9    0.27    5.65 112507500         main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}::operator()(cl::sycl::id) const::{lambda(unsigned int, unsigned int)#2}::operator()(unsigned int, unsigned int) const [4]
                5.65    0.00 112507500/112507500     main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}::operator()(cl::sycl::id) const::{lambda(unsigned int, unsigned int)#1}::operator()(unsigned int, unsigned int) const [5]
-----------------------------------------------
                5.65    0.00 112507500/112507500     main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}::operator()(cl::sycl::id) const::{lambda(unsigned int, unsigned int)#2}::operator()(unsigned int, unsigned int) const [4]
[5]     88.8    5.65    0.00 112507500         main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}::operator()(cl::sycl::id) const::{lambda(unsigned int, unsigned int)#1}::operator()(unsigned int, unsigned int) const [5]
-----------------------------------------------
                                                 <spontaneous>
[6]      0.3    0.02    0.00                 sumTotient(unsigned int, unsigned int) [6]
-----------------------------------------------
                0.00    0.00   60003/135004      std::array<unsigned long, 1ul>::operator[](unsigned long) const [17]
                0.00    0.00   75001/135004      std::array<unsigned long, 1ul>::operator[](unsigned long) [15]
[14]     0.0    0.00    0.00  135004         std::__array_traits<unsigned long, 1ul>::_S_ref(unsigned long const (&) [1], unsigned long) [14]
-----------------------------------------------
                0.00    0.00   30001/75001       cl::sycl::detail::id_range_base<unsigned long, 1, cl::sycl::range<1> >::operator[](int) [27]
                0.00    0.00   45000/75001       cl::sycl::detail::id_range_base<unsigned long, 1, cl::sycl::id<1> >::operator[](int) [21]
[15]     0.0    0.00    0.00   75001         std::array<unsigned long, 1ul>::operator[](unsigned long) [15]
                0.00    0.00   75001/135004      std::__array_traits<unsigned long, 1ul>::_S_ref(unsigned long const (&) [1], unsigned long) [14]
-----------------------------------------------
                0.00    0.00       6/60007       std::array<unsigned long, 3ul>::operator[](unsigned long) [69]
                0.00    0.00   60001/60007       std::array<unsigned long, 3ul>::operator[](unsigned long) const [20]
[16]     0.0    0.00    0.00   60007         std::__array_traits<unsigned long, 3ul>::_S_ref(unsigned long const (&) [3], unsigned long) [16]
-----------------------------------------------
                0.00    0.00   30000/60003       cl::sycl::detail::id_range_base<unsigned long, 1, cl::sycl::id<1> >::operator[](int) const [34]
                0.00    0.00   30003/60003       cl::sycl::detail::id_range_base<unsigned long, 1, cl::sycl::range<1> >::operator[](int) const [22]
[17]     0.0    0.00    0.00   60003         std::array<unsigned long, 1ul>::operator[](unsigned long) const [17]
                0.00    0.00   60003/135004      std::__array_traits<unsigned long, 1ul>::_S_ref(unsigned long const (&) [1], unsigned long) [14]
-----------------------------------------------
                0.00    0.00   30000/60001       cl::sycl::detail::id_range_base<unsigned long, 1, cl::sycl::id<1> >::id_range_base<0ul>(unsigned long, std::integer_sequence<unsigned long, 0ul>) [30]
                0.00    0.00   30001/60001       cl::sycl::detail::id_range_base<unsigned long, 1, cl::sycl::range<1> >::id_range_base<0ul>(unsigned long, std::integer_sequence<unsigned long, 0ul>) [26]
[18]     0.0    0.00    0.00   60001         cl::sycl::detail::fill_helper<unsigned long>::operator()(unsigned long) const [18]
-----------------------------------------------
                0.00    0.00   15000/60001       cl::sycl::detail::item_base::get_id(int) const [45]
                0.00    0.00   15000/60001       cl::sycl::id<1>::id(cl::sycl::detail::index_array const&) [36]
                0.00    0.00   30001/60001       cl::sycl::range<1>::range(cl::sycl::detail::index_array const&) [24]
[19]     0.0    0.00    0.00   60001         cl::sycl::detail::id_range_base<unsigned long, 3, cl::sycl::detail::index_array>::operator[](int) const [19]
                0.00    0.00   60001/60001       std::array<unsigned long, 3ul>::operator[](unsigned long) const [20]
-----------------------------------------------
                0.00    0.00   60001/60001       cl::sycl::detail::id_range_base<unsigned long, 3, cl::sycl::detail::index_array>::operator[](int) const [19]
[20]     0.0    0.00    0.00   60001         std::array<unsigned long, 3ul>::operator[](unsigned long) const [20]
                0.00    0.00   60001/60007       std::__array_traits<unsigned long, 3ul>::_S_ref(unsigned long const (&) [3], unsigned long) [16]
-----------------------------------------------
                0.00    0.00   15000/45000       main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}::operator()(cl::sycl::id) const [2]
                0.00    0.00   15000/45000       cl::sycl::id<1>::id(cl::sycl::detail::item_base const&) [37]
                0.00    0.00   15000/45000       cl::sycl::id<1>::id(cl::sycl::detail::index_array const&) [36]
[21]     0.0    0.00    0.00   45000         cl::sycl::detail::id_range_base<unsigned long, 1, cl::sycl::id<1> >::operator[](int) [21]
                0.00    0.00   45000/75001       std::array<unsigned long, 1ul>::operator[](unsigned long) [15]
-----------------------------------------------
                0.00    0.00       3/30003       cl::sycl::detail::id_range_base<unsigned long, 1, cl::sycl::range<1> >::get(int) const [112]
                0.00    0.00   30000/30003       unsigned long cl::sycl::detail::construct_linear_row_major_index<1>(cl::sycl::id<1> const&, cl::sycl::range<1> const&) [31]
[22]     0.0    0.00    0.00   30003         cl::sycl::detail::id_range_base<unsigned long, 1, cl::sycl::range<1> >::operator[](int) const [22]
                0.00    0.00   30003/60003       std::array<unsigned long, 1ul>::operator[](unsigned long) const [17]
-----------------------------------------------
                0.00    0.00   30001/30001       cl::sycl::range<1>::range(cl::sycl::detail::index_array const&) [24]
[23]     0.0    0.00    0.00   30001         cl::sycl::range<1>::range() [23]
                0.00    0.00   30001/30001       cl::sycl::detail::id_range_base<unsigned long, 1, cl::sycl::range<1> >::id_range_base(cl::sycl::detail::id_range_base<unsigned long, 1, cl::sycl::range<1> >::fill_tag, unsigned long) [25]
-----------------------------------------------
                0.00    0.00       1/30001       cl::sycl::buffer<int, 1, cl::sycl::detail::aligned_mem::aligned_allocator>::get_range() const [209]
                0.00    0.00   15000/30001       unsigned long cl::sycl::detail::accessor_buffer_interface<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::get_linear_index<1>(cl::sycl::id<1> const&) const [42]
                0.00    0.00   15000/30001       cl::sycl::detail::accessor_buffer_interface<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::linear_offset_from_buffer() const [43]
[24]     0.0    0.00    0.00   30001         cl::sycl::range<1>::range(cl::sycl::detail::index_array const&) [24]
                0.00    0.00   30001/30001       cl::sycl::range<1>::range() [23]
                0.00    0.00   30001/60001       cl::sycl::detail::id_range_base<unsigned long, 3, cl::sycl::detail::index_array>::operator[](int) const [19]
                0.00    0.00   30001/30001       cl::sycl::detail::id_range_base<unsigned long, 1, cl::sycl::range<1> >::operator[](int) [27]
-----------------------------------------------
                0.00    0.00   30001/30001       cl::sycl::range<1>::range() [23]
[25]     0.0    0.00    0.00   30001         cl::sycl::detail::id_range_base<unsigned long, 1, cl::sycl::range<1> >::id_range_base(cl::sycl::detail::id_range_base<unsigned long, 1, cl::sycl::range<1> >::fill_tag, unsigned long) [25]
                0.00    0.00   30001/30001       cl::sycl::detail::id_range_base<unsigned long, 1, cl::sycl::range<1> >::id_range_base<0ul>(unsigned long, std::integer_sequence<unsigned long, 0ul>) [26]
-----------------------------------------------
                0.00    0.00   30001/30001       cl::sycl::detail::id_range_base<unsigned long, 1, cl::sycl::range<1> >::id_range_base(cl::sycl::detail::id_range_base<unsigned long, 1, cl::sycl::range<1> >::fill_tag, unsigned long) [25]
[26]     0.0    0.00    0.00   30001         cl::sycl::detail::id_range_base<unsigned long, 1, cl::sycl::range<1> >::id_range_base<0ul>(unsigned long, std::integer_sequence<unsigned long, 0ul>) [26]
                0.00    0.00   30001/60001       cl::sycl::detail::fill_helper<unsigned long>::operator()(unsigned long) const [18]
-----------------------------------------------
                0.00    0.00   30001/30001       cl::sycl::range<1>::range(cl::sycl::detail::index_array const&) [24]
[27]     0.0    0.00    0.00   30001         cl::sycl::detail::id_range_base<unsigned long, 1, cl::sycl::range<1> >::operator[](int) [27]
                0.00    0.00   30001/75001       std::array<unsigned long, 1ul>::operator[](unsigned long) [15]
-----------------------------------------------
                0.00    0.00   15000/30000       cl::sycl::id<1>::id(cl::sycl::detail::item_base const&) [37]
                0.00    0.00   15000/30000       cl::sycl::id<1>::id(cl::sycl::detail::index_array const&) [36]
[28]     0.0    0.00    0.00   30000         cl::sycl::id<1>::id() [28]
                0.00    0.00   30000/30000       cl::sycl::detail::id_range_base<unsigned long, 1, cl::sycl::id<1> >::id_range_base(cl::sycl::detail::id_range_base<unsigned long, 1, cl::sycl::id<1> >::fill_tag, unsigned long) [29]
-----------------------------------------------
                0.00    0.00   30000/30000       cl::sycl::id<1>::id() [28]
[29]     0.0    0.00    0.00   30000         cl::sycl::detail::id_range_base<unsigned long, 1, cl::sycl::id<1> >::id_range_base(cl::sycl::detail::id_range_base<unsigned long, 1, cl::sycl::id<1> >::fill_tag, unsigned long) [29]
                0.00    0.00   30000/30000       cl::sycl::detail::id_range_base<unsigned long, 1, cl::sycl::id<1> >::id_range_base<0ul>(unsigned long, std::integer_sequence<unsigned long, 0ul>) [30]
-----------------------------------------------
                0.00    0.00   30000/30000       cl::sycl::detail::id_range_base<unsigned long, 1, cl::sycl::id<1> >::id_range_base(cl::sycl::detail::id_range_base<unsigned long, 1, cl::sycl::id<1> >::fill_tag, unsigned long) [29]
[30]     0.0    0.00    0.00   30000         cl::sycl::detail::id_range_base<unsigned long, 1, cl::sycl::id<1> >::id_range_base<0ul>(unsigned long, std::integer_sequence<unsigned long, 0ul>) [30]
                0.00    0.00   30000/60001       cl::sycl::detail::fill_helper<unsigned long>::operator()(unsigned long) const [18]
-----------------------------------------------
                0.00    0.00   15000/30000       unsigned long cl::sycl::detail::accessor_buffer_interface<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::get_linear_index<1>(cl::sycl::id<1> const&) const [42]
                0.00    0.00   15000/30000       cl::sycl::detail::accessor_buffer_interface<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::linear_offset_from_buffer() const [43]
[31]     0.0    0.00    0.00   30000         unsigned long cl::sycl::detail::construct_linear_row_major_index<1>(cl::sycl::id<1> const&, cl::sycl::range<1> const&) [31]
                0.00    0.00   30000/30003       cl::sycl::detail::id_range_base<unsigned long, 1, cl::sycl::range<1> >::operator[](int) const [22]
                0.00    0.00   30000/30000       cl::sycl::detail::id_range_base<unsigned long, 1, cl::sycl::id<1> >::operator[](int) const [34]
                0.00    0.00   30000/30000       unsigned long cl::sycl::detail::construct_linear_row_major_index<1ul>(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long) [32]
-----------------------------------------------
                0.00    0.00   30000/30000       unsigned long cl::sycl::detail::construct_linear_row_major_index<1>(cl::sycl::id<1> const&, cl::sycl::range<1> const&) [31]
[32]     0.0    0.00    0.00   30000         unsigned long cl::sycl::detail::construct_linear_row_major_index<1ul>(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long) [32]
-----------------------------------------------
                0.00    0.00   15000/30000       unsigned long cl::sycl::detail::accessor_buffer_interface<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::get_linear_index<1>(cl::sycl::id<1> const&) const [42]
                0.00    0.00   15000/30000       cl::sycl::detail::accessor_buffer_interface<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::linear_offset_from_buffer() const [43]
[33]     0.0    0.00    0.00   30000         cl::sycl::accessor_base::get_store_range() const [33]
-----------------------------------------------
                0.00    0.00   30000/30000       unsigned long cl::sycl::detail::construct_linear_row_major_index<1>(cl::sycl::id<1> const&, cl::sycl::range<1> const&) [31]
[34]     0.0    0.00    0.00   30000         cl::sycl::detail::id_range_base<unsigned long, 1, cl::sycl::id<1> >::operator[](int) const [34]
                0.00    0.00   30000/60003       std::array<unsigned long, 1ul>::operator[](unsigned long) const [17]
-----------------------------------------------
                0.00    0.00       2/15002       void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1} const* const& std::_Any_data::_M_access<void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1} const*>() const [133]
                0.00    0.00   15000/15002       void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}* const& std::_Any_data::_M_access<void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}*>() const [47]
[35]     0.0    0.00    0.00   15002         std::_Any_data::_M_access() const [35]
-----------------------------------------------
                0.00    0.00   15000/15000       cl::sycl::detail::accessor_common<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::get_offset() const [39]
[36]     0.0    0.00    0.00   15000         cl::sycl::id<1>::id(cl::sycl::detail::index_array const&) [36]
                0.00    0.00   15000/30000       cl::sycl::id<1>::id() [28]
                0.00    0.00   15000/60001       cl::sycl::detail::id_range_base<unsigned long, 3, cl::sycl::detail::index_array>::operator[](int) const [19]
                0.00    0.00   15000/45000       cl::sycl::detail::id_range_base<unsigned long, 1, cl::sycl::id<1> >::operator[](int) [21]
-----------------------------------------------
                0.00    0.00   15000/15000       _ZZN2cl4sycl7handler17parallel_for_implI7TotientIiEZZ4mainENKUlRS1_E_clES5_EUlNS0_2idILi1EEEE_Li1EEEvRKNS0_6detail11index_arrayESD_T0_ENUlRNSA_9item_baseEE_clESG_ [1]
[37]     0.0    0.00    0.00   15000         cl::sycl::id<1>::id(cl::sycl::detail::item_base const&) [37]
                0.00    0.00   15000/30000       cl::sycl::id<1>::id() [28]
                0.00    0.00   15000/15000       cl::sycl::detail::item_base::operator[](int) const [46]
                0.00    0.00   15000/45000       cl::sycl::detail::id_range_base<unsigned long, 1, cl::sycl::id<1> >::operator[](int) [21]
-----------------------------------------------
                0.00    0.00   15000/15000       cl::sycl::detail::accessor_common<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::get_device_ptr() const [40]
[38]     0.0    0.00    0.00   15000         cl::sycl::accessor_base::get_host_data() const [38]
-----------------------------------------------
                0.00    0.00   15000/15000       cl::sycl::detail::accessor_buffer_interface<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::linear_offset_from_buffer() const [43]
[39]     0.0    0.00    0.00   15000         cl::sycl::detail::accessor_common<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::get_offset() const [39]
                0.00    0.00   15000/15000       cl::sycl::id<1>::id(cl::sycl::detail::index_array const&) [36]
-----------------------------------------------
                0.00    0.00   15000/15000       int& cl::sycl::detail::accessor_buffer_interface<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::operator[]<int, void>(cl::sycl::id<1>) const [44]
[40]     0.0    0.00    0.00   15000         cl::sycl::detail::accessor_common<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::get_device_ptr() const [40]
                0.00    0.00   15000/15000       cl::sycl::accessor_base::get_host_data() const [38]
-----------------------------------------------
                0.00    0.00   15000/15000       int& cl::sycl::detail::accessor_buffer_interface<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::operator[]<int, void>(cl::sycl::id<1>) const [44]
[41]     0.0    0.00    0.00   15000         cl::sycl::detail::accessor_buffer_interface<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::check_bounds(unsigned long) const [41]
-----------------------------------------------
                0.00    0.00   15000/15000       int& cl::sycl::detail::accessor_buffer_interface<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::operator[]<int, void>(cl::sycl::id<1>) const [44]
[42]     0.0    0.00    0.00   15000         unsigned long cl::sycl::detail::accessor_buffer_interface<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::get_linear_index<1>(cl::sycl::id<1> const&) const [42]
                0.00    0.00   15000/30000       cl::sycl::accessor_base::get_store_range() const [33]
                0.00    0.00   15000/30001       cl::sycl::range<1>::range(cl::sycl::detail::index_array const&) [24]
                0.00    0.00   15000/30000       unsigned long cl::sycl::detail::construct_linear_row_major_index<1>(cl::sycl::id<1> const&, cl::sycl::range<1> const&) [31]
-----------------------------------------------
                0.00    0.00   15000/15000       int& cl::sycl::detail::accessor_buffer_interface<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::operator[]<int, void>(cl::sycl::id<1>) const [44]
[43]     0.0    0.00    0.00   15000         cl::sycl::detail::accessor_buffer_interface<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::linear_offset_from_buffer() const [43]
                0.00    0.00   15000/15000       cl::sycl::detail::accessor_common<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::get_offset() const [39]
                0.00    0.00   15000/30000       cl::sycl::accessor_base::get_store_range() const [33]
                0.00    0.00   15000/30001       cl::sycl::range<1>::range(cl::sycl::detail::index_array const&) [24]
                0.00    0.00   15000/30000       unsigned long cl::sycl::detail::construct_linear_row_major_index<1>(cl::sycl::id<1> const&, cl::sycl::range<1> const&) [31]
-----------------------------------------------
                0.00    0.00   15000/15000       main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}::operator()(cl::sycl::id) const [2]
[44]     0.0    0.00    0.00   15000         int& cl::sycl::detail::accessor_buffer_interface<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::operator[]<int, void>(cl::sycl::id<1>) const [44]
                0.00    0.00   15000/15000       unsigned long cl::sycl::detail::accessor_buffer_interface<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::get_linear_index<1>(cl::sycl::id<1> const&) const [42]
                0.00    0.00   15000/15000       cl::sycl::detail::accessor_buffer_interface<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::linear_offset_from_buffer() const [43]
                0.00    0.00   15000/15000       cl::sycl::detail::accessor_buffer_interface<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::check_bounds(unsigned long) const [41]
                0.00    0.00   15000/15000       cl::sycl::detail::accessor_common<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::get_device_ptr() const [40]
-----------------------------------------------
                0.00    0.00   15000/15000       cl::sycl::detail::item_base::operator[](int) const [46]
[45]     0.0    0.00    0.00   15000         cl::sycl::detail::item_base::get_id(int) const [45]
                0.00    0.00   15000/60001       cl::sycl::detail::id_range_base<unsigned long, 3, cl::sycl::detail::index_array>::operator[](int) const [19]
-----------------------------------------------
                0.00    0.00   15000/15000       cl::sycl::id<1>::id(cl::sycl::detail::item_base const&) [37]
[46]     0.0    0.00    0.00   15000         cl::sycl::detail::item_base::operator[](int) const [46]
                0.00    0.00   15000/15000       cl::sycl::detail::item_base::get_id(int) const [45]
-----------------------------------------------
                0.00    0.00   15000/15000       std::_Function_base::_Base_manager<void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}>::_M_get_pointer(std::_Any_data const&) [48]
[47]     0.0    0.00    0.00   15000         void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}* const& std::_Any_data::_M_access<void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}*>() const [47]
                0.00    0.00   15000/15002       std::_Any_data::_M_access() const [35]
-----------------------------------------------
                0.00    0.00   15000/15000       std::_Function_handler<void (cl::sycl::detail::item_base&), void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda(cl::sycl::detail::item_base&)#1}>::_M_invoke(std::_Any_data const&, cl::sycl::detail::item_base&) [3]
[48]     0.0    0.00    0.00   15000         std::_Function_base::_Base_manager<void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}>::_M_get_pointer(std::_Any_data const&) [48]
                0.00    0.00   15000/15000       void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}* const& std::_Any_data::_M_access<void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}*>() const [47]
-----------------------------------------------
                0.00    0.00   15000/15000       main [12]
[49]     0.0    0.00    0.00   15000         std::vector<int, std::allocator<int> >::operator[](unsigned long) [49]
-----------------------------------------------
                0.00    0.00   15000/15000       std::_Function_handler<void (cl::sycl::detail::item_base&), void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda(cl::sycl::detail::item_base&)#1}>::_M_invoke(std::_Any_data const&, cl::sycl::detail::item_base&) [3]
[50]     0.0    0.00    0.00   15000         cl::sycl::detail::item_base& std::forward<cl::sycl::detail::item_base&>(std::remove_reference<cl::sycl::detail::item_base&>::type&) [50]
-----------------------------------------------
                0.00    0.00       1/22          __gnu_cxx::__atomic_add_dispatch(int*, int) [207]
                0.00    0.00      21/22          __gnu_cxx::__exchange_and_add_dispatch(int*, int) [53]
[51]     0.0    0.00    0.00      22         __gthread_active_p() [51]
-----------------------------------------------
                0.00    0.00      21/21          __gnu_cxx::__exchange_and_add_dispatch(int*, int) [53]
[52]     0.0    0.00    0.00      21         __gnu_cxx::__exchange_and_add(int volatile*, int) [52]
-----------------------------------------------
                0.00    0.00      21/21          std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() [55]
[53]     0.0    0.00    0.00      21         __gnu_cxx::__exchange_and_add_dispatch(int*, int) [53]
                0.00    0.00      21/22          __gthread_active_p() [51]
                0.00    0.00      21/21          __gnu_cxx::__exchange_and_add(int volatile*, int) [52]
-----------------------------------------------
                0.00    0.00       1/19          std::__shared_ptr<cl::sycl::detail::kernel, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() [263]
                0.00    0.00       1/19          std::__shared_ptr<cl::sycl::detail::program, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() [264]
                0.00    0.00       1/19          std::__shared_ptr<void, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() [267]
                0.00    0.00       2/19          std::__shared_ptr<cl::sycl::detail::context, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() [143]
                0.00    0.00       2/19          std::__shared_ptr<cl::sycl::detail::event, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() [142]
                0.00    0.00       4/19          std::__shared_ptr<cl::sycl::detail::queue, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() [100]
                0.00    0.00       8/19          std::__shared_ptr<cl::sycl::detail::accessor, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() [62]
[54]     0.0    0.00    0.00      19         std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count() [54]
                0.00    0.00      18/18          std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() [55]
-----------------------------------------------
                0.00    0.00      18/18          std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count() [54]
[55]     0.0    0.00    0.00      18         std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() [55]
                0.00    0.00      21/21          __gnu_cxx::__exchange_and_add_dispatch(int*, int) [53]
-----------------------------------------------
                0.00    0.00       8/8           cl::sycl::detail::accessor_common<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::~accessor_common() [57]
[56]     0.0    0.00    0.00       8         cl::sycl::accessor_base::~accessor_base() [56]
                0.00    0.00       8/8           cl::sycl::detail::host_arg_container::~host_arg_container() [58]
-----------------------------------------------
                0.00    0.00       8/8           cl::sycl::detail::accessor_buffer_interface<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::~accessor_buffer_interface() [59]
[57]     0.0    0.00    0.00       8         cl::sycl::detail::accessor_common<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::~accessor_common() [57]
                0.00    0.00       8/8           cl::sycl::accessor_base::~accessor_base() [56]
-----------------------------------------------
                0.00    0.00       8/8           cl::sycl::accessor_base::~accessor_base() [56]
[58]     0.0    0.00    0.00       8         cl::sycl::detail::host_arg_container::~host_arg_container() [58]
                0.00    0.00       8/8           std::shared_ptr<cl::sycl::detail::accessor>::~shared_ptr() [61]
-----------------------------------------------
                0.00    0.00       8/8           cl::sycl::accessor<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::~accessor() [60]
[59]     0.0    0.00    0.00       8         cl::sycl::detail::accessor_buffer_interface<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::~accessor_buffer_interface() [59]
                0.00    0.00       8/8           cl::sycl::detail::accessor_common<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::~accessor_common() [57]
-----------------------------------------------
                0.00    0.00       1/8           main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const [345]
                0.00    0.00       7/8           main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}::~id() [64]
[60]     0.0    0.00    0.00       8         cl::sycl::accessor<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::~accessor() [60]
                0.00    0.00       8/8           cl::sycl::detail::accessor_buffer_interface<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::~accessor_buffer_interface() [59]
-----------------------------------------------
                0.00    0.00       8/8           cl::sycl::detail::host_arg_container::~host_arg_container() [58]
[61]     0.0    0.00    0.00       8         std::shared_ptr<cl::sycl::detail::accessor>::~shared_ptr() [61]
                0.00    0.00       8/8           std::__shared_ptr<cl::sycl::detail::accessor, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() [62]
-----------------------------------------------
                0.00    0.00       8/8           std::shared_ptr<cl::sycl::detail::accessor>::~shared_ptr() [61]
[62]     0.0    0.00    0.00       8         std::__shared_ptr<cl::sycl::detail::accessor, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() [62]
                0.00    0.00       8/19          std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count() [54]
-----------------------------------------------
                0.00    0.00       1/7           std::shared_ptr<void>::shared_ptr<void, cl::sycl::detail::NullDeleter, void>(void*, cl::sycl::detail::NullDeleter) [233]
                0.00    0.00       1/7           std::__shared_ptr<void, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<void, cl::sycl::detail::NullDeleter, void>(void*, cl::sycl::detail::NullDeleter) [266]
                0.00    0.00       1/7           std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<void*, cl::sycl::detail::NullDeleter, void>(void*, cl::sycl::detail::NullDeleter) [279]
                0.00    0.00       1/7           std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, void>(void*, cl::sycl::detail::NullDeleter, std::allocator<void>) [277]
                0.00    0.00       1/7           std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_deleter(void*, cl::sycl::detail::NullDeleter, std::allocator<void> const&) [300]
                0.00    0.00       1/7           std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_Impl::_Impl(void*, cl::sycl::detail::NullDeleter, std::allocator<void> const&) [299]
                0.00    0.00       1/7           std::_Sp_ebo_helper<0, cl::sycl::detail::NullDeleter, true>::_Sp_ebo_helper(cl::sycl::detail::NullDeleter&&) [273]
[63]     0.0    0.00    0.00       7         std::remove_reference<cl::sycl::detail::NullDeleter&>::type&& std::move<cl::sycl::detail::NullDeleter&>(cl::sycl::detail::NullDeleter&) [63]
-----------------------------------------------
                0.00    0.00       1/7           main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const [345]
                0.00    0.00       1/7           void cl::sycl::handler::parallel_for<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::range<1> const&, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1} const&) [194]
                0.00    0.00       5/7           void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}::~item_base() [81]
[64]     0.0    0.00    0.00       7         main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}::~id() [64]
                0.00    0.00       7/8           cl::sycl::accessor<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::~accessor() [60]
-----------------------------------------------
                0.00    0.00       3/6           cl::sycl::detail::nd_range_base::nd_range_base(cl::sycl::detail::index_array, cl::sycl::detail::index_array) [179]
                0.00    0.00       3/6           cl::sycl::range<1>::operator cl::sycl::detail::index_array() const [111]
[65]     0.0    0.00    0.00       6         cl::sycl::detail::id_range_base<unsigned long, 3, cl::sycl::detail::index_array>::operator[](int) [65]
                0.00    0.00       6/6           std::array<unsigned long, 3ul>::operator[](unsigned long) [69]
-----------------------------------------------
                0.00    0.00       6/6           cl::sycl::detail::accessor_buffer_interface<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::accessor_buffer_interface(cl::sycl::detail::accessor_buffer_interface<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0> const&) [67]
[66]     0.0    0.00    0.00       6         cl::sycl::detail::accessor_common<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::accessor_common(cl::sycl::detail::accessor_common<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0> const&) [66]
-----------------------------------------------
                0.00    0.00       6/6           cl::sycl::accessor<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::accessor(cl::sycl::accessor<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0> const&) [68]
[67]     0.0    0.00    0.00       6         cl::sycl::detail::accessor_buffer_interface<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::accessor_buffer_interface(cl::sycl::detail::accessor_buffer_interface<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0> const&) [67]
                0.00    0.00       6/6           cl::sycl::detail::accessor_common<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::accessor_common(cl::sycl::detail::accessor_common<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0> const&) [66]
-----------------------------------------------
                0.00    0.00       1/6           main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const [345]
                0.00    0.00       5/6           main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}::id(cl::sycl::id<1> const&) [82]
[68]     0.0    0.00    0.00       6         cl::sycl::accessor<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::accessor(cl::sycl::accessor<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0> const&) [68]
                0.00    0.00       6/6           cl::sycl::detail::accessor_buffer_interface<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::accessor_buffer_interface(cl::sycl::detail::accessor_buffer_interface<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0> const&) [67]
-----------------------------------------------
                0.00    0.00       6/6           cl::sycl::detail::id_range_base<unsigned long, 3, cl::sycl::detail::index_array>::operator[](int) [65]
[69]     0.0    0.00    0.00       6         std::array<unsigned long, 3ul>::operator[](unsigned long) [69]
                0.00    0.00       6/60007       std::__array_traits<unsigned long, 3ul>::_S_ref(unsigned long const (&) [3], unsigned long) [16]
-----------------------------------------------
                0.00    0.00       6/6           void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}*& std::_Any_data::_M_access<void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}*>() [71]
[70]     0.0    0.00    0.00       6         std::_Any_data::_M_access() [70]
-----------------------------------------------
                0.00    0.00       1/6           std::_Function_base::_Base_manager<void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}>::_M_init_functor(std::_Any_data&, {lambda(cl::sycl::id<1>)#1}::item_base&&, std::integral_constant<bool, false>) [270]
                0.00    0.00       2/6           std::_Function_base::_Base_manager<void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}>::_M_clone(std::_Any_data&, {lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1} const&, std::integral_constant<bool, false>) [144]
                0.00    0.00       3/6           std::_Function_base::_Base_manager<void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) [117]
[71]     0.0    0.00    0.00       6         void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}*& std::_Any_data::_M_access<void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}*>() [71]
                0.00    0.00       6/6           std::_Any_data::_M_access() [70]
-----------------------------------------------
                0.00    0.00       1/6           std::vector<int, std::allocator<int> >::_S_max_size(std::allocator<int> const&) [311]
                0.00    0.00       5/6           std::vector<std::shared_ptr<cl::sycl::detail::property_base>, std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > >::_S_max_size(std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > const&) [80]
[72]     0.0    0.00    0.00       6         unsigned long const& std::min<unsigned long>(unsigned long const&, unsigned long const&) [72]
-----------------------------------------------
                0.00    0.00       1/6           std::unique_ptr<cl::sycl::detail::base_allocator, std::default_delete<cl::sycl::detail::base_allocator> >::unique_ptr<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >, void>(std::unique_ptr<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >&&) [235]
                0.00    0.00       1/6           std::__uniq_ptr_impl<cl::sycl::detail::base_allocator, std::default_delete<cl::sycl::detail::base_allocator> >::__uniq_ptr_impl<std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >(cl::sycl::detail::base_allocator*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >&&) [284]
                0.00    0.00       1/6           std::tuple<cl::sycl::detail::base_allocator*, std::default_delete<cl::sycl::detail::base_allocator> >::tuple<cl::sycl::detail::base_allocator*&, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >, true>(cl::sycl::detail::base_allocator*&, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >&&) [303]
                0.00    0.00       1/6           std::_Tuple_impl<0ul, cl::sycl::detail::base_allocator*, std::default_delete<cl::sycl::detail::base_allocator> >::_Tuple_impl<cl::sycl::detail::base_allocator*&, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >, void>(cl::sycl::detail::base_allocator*&, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >&&) [244]
                0.00    0.00       1/6           std::_Tuple_impl<1ul, std::default_delete<cl::sycl::detail::base_allocator> >::_Tuple_impl<std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >(std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >&&) [248]
                0.00    0.00       1/6           std::_Head_base<1ul, std::default_delete<cl::sycl::detail::base_allocator>, true>::_Head_base<std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >(std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >&&) [224]
[73]     0.0    0.00    0.00       6         std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >&& std::forward<std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >(std::remove_reference<std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::type&) [73]
-----------------------------------------------
                0.00    0.00       1/5           cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>::~wrapped_allocator() [184]
                0.00    0.00       4/5           cl::sycl::detail::aligned_mem::aligned_allocator::~aligned_allocator() [85]
[74]     0.0    0.00    0.00       5         cl::sycl::detail::base_allocator::~base_allocator() [74]
-----------------------------------------------
                0.00    0.00       5/5           std::allocator_traits<std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > >::max_size(std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > const&) [79]
[75]     0.0    0.00    0.00       5         __gnu_cxx::new_allocator<std::shared_ptr<cl::sycl::detail::property_base> >::max_size() const [75]
-----------------------------------------------
                0.00    0.00       5/5           std::vector<std::shared_ptr<cl::sycl::detail::property_base>, std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > >::max_size() const [78]
[76]     0.0    0.00    0.00       5         std::_Vector_base<std::shared_ptr<cl::sycl::detail::property_base>, std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > >::_M_get_Tp_allocator() const [76]
-----------------------------------------------
                0.00    0.00       5/5           std::vector<std::shared_ptr<cl::sycl::detail::property_base>, std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > >::reserve(unsigned long) [101]
[77]     0.0    0.00    0.00       5         std::vector<std::shared_ptr<cl::sycl::detail::property_base>, std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > >::capacity() const [77]
-----------------------------------------------
                0.00    0.00       5/5           std::vector<std::shared_ptr<cl::sycl::detail::property_base>, std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > >::reserve(unsigned long) [101]
[78]     0.0    0.00    0.00       5         std::vector<std::shared_ptr<cl::sycl::detail::property_base>, std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > >::max_size() const [78]
                0.00    0.00       5/5           std::vector<std::shared_ptr<cl::sycl::detail::property_base>, std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > >::_S_max_size(std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > const&) [80]
                0.00    0.00       5/5           std::_Vector_base<std::shared_ptr<cl::sycl::detail::property_base>, std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > >::_M_get_Tp_allocator() const [76]
-----------------------------------------------
                0.00    0.00       5/5           std::vector<std::shared_ptr<cl::sycl::detail::property_base>, std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > >::_S_max_size(std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > const&) [80]
[79]     0.0    0.00    0.00       5         std::allocator_traits<std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > >::max_size(std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > const&) [79]
                0.00    0.00       5/5           __gnu_cxx::new_allocator<std::shared_ptr<cl::sycl::detail::property_base> >::max_size() const [75]
-----------------------------------------------
                0.00    0.00       5/5           std::vector<std::shared_ptr<cl::sycl::detail::property_base>, std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > >::max_size() const [78]
[80]     0.0    0.00    0.00       5         std::vector<std::shared_ptr<cl::sycl::detail::property_base>, std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > >::_S_max_size(std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > const&) [80]
                0.00    0.00       5/5           std::allocator_traits<std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > >::max_size(std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > const&) [79]
                0.00    0.00       5/6           unsigned long const& std::min<unsigned long>(unsigned long const&, unsigned long const&) [72]
-----------------------------------------------
                0.00    0.00       2/5           void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}) [195]
                0.00    0.00       3/5           std::_Function_base::_Base_manager<void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) [117]
[81]     0.0    0.00    0.00       5         void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}::~item_base() [81]
                0.00    0.00       5/7           main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}::~id() [64]
-----------------------------------------------
                0.00    0.00       1/5           void cl::sycl::handler::parallel_for<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::range<1> const&, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1} const&) [194]
                0.00    0.00       1/5           void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}) [195]
                0.00    0.00       3/5           void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}::item_base({lambda(cl::sycl::id<1>)#1}::item_base const&) [123]
[82]     0.0    0.00    0.00       5         main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}::id(cl::sycl::id<1> const&) [82]
                0.00    0.00       5/6           cl::sycl::accessor<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::accessor(cl::sycl::accessor<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0> const&) [68]
-----------------------------------------------
                0.00    0.00       1/4           cl::sycl::accessor<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0> cl::sycl::buffer<int, 1, cl::sycl::detail::aligned_mem::aligned_allocator>::get_access<(cl::sycl::access::mode)1, (cl::sycl::access::target)1>(cl::sycl::handler&) [167]
                0.00    0.00       1/4           cl::sycl::program cl::sycl::program::create_program_for_kernel<Totient<int> >(cl::sycl::context) [197]
                0.00    0.00       2/4           main [12]
[83]     0.0    0.00    0.00       4         cl::sycl::property_list::property_list<, void, void>() [83]
                0.00    0.00       4/4           std::vector<std::shared_ptr<cl::sycl::detail::property_base>, std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > >::vector() [102]
                0.00    0.00       4/4           std::vector<std::shared_ptr<cl::sycl::detail::property_base>, std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > >::reserve(unsigned long) [101]
                0.00    0.00       4/4           cl::sycl::detail::add_properties<>::apply(std::vector<std::shared_ptr<cl::sycl::detail::property_base>, std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > >&) [86]
-----------------------------------------------
                0.00    0.00       1/4           cl::sycl::accessor<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0> cl::sycl::buffer<int, 1, cl::sycl::detail::aligned_mem::aligned_allocator>::get_access<(cl::sycl::access::mode)1, (cl::sycl::access::target)1>(cl::sycl::handler&) [167]
                0.00    0.00       1/4           cl::sycl::program cl::sycl::program::create_program_for_kernel<Totient<int> >(cl::sycl::context) [197]
                0.00    0.00       2/4           main [12]
[84]     0.0    0.00    0.00       4         cl::sycl::property_list::~property_list() [84]
                0.00    0.00       4/4           std::vector<std::shared_ptr<cl::sycl::detail::property_base>, std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > >::~vector() [103]
-----------------------------------------------
                0.00    0.00       1/4           cl::sycl::buffer<int, 1, cl::sycl::detail::aligned_mem::aligned_allocator>::buffer(int*, cl::sycl::range<1> const&, cl::sycl::property_list const&) [168]
                0.00    0.00       1/4           cl::sycl::detail::make_base_allocator<int, cl::sycl::detail::aligned_mem::aligned_allocator>::get_buffer_allocator(cl::sycl::detail::aligned_mem::aligned_allocator) [185]
                0.00    0.00       1/4           cl::sycl::detail::make_base_allocator<int, cl::sycl::detail::aligned_mem::aligned_allocator>::get(cl::sycl::detail::aligned_mem::aligned_allocator, unsigned long) [187]
                0.00    0.00       1/4           cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>::~wrapped_allocator() [184]
[85]     0.0    0.00    0.00       4         cl::sycl::detail::aligned_mem::aligned_allocator::~aligned_allocator() [85]
                0.00    0.00       4/5           cl::sycl::detail::base_allocator::~base_allocator() [74]
-----------------------------------------------
                0.00    0.00       4/4           cl::sycl::property_list::property_list<, void, void>() [83]
[86]     0.0    0.00    0.00       4         cl::sycl::detail::add_properties<>::apply(std::vector<std::shared_ptr<cl::sycl::detail::property_base>, std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > >&) [86]
-----------------------------------------------
                0.00    0.00       4/4           std::allocator<std::shared_ptr<cl::sycl::detail::property_base> >::allocator() [89]
[87]     0.0    0.00    0.00       4         __gnu_cxx::new_allocator<std::shared_ptr<cl::sycl::detail::property_base> >::new_allocator() [87]
-----------------------------------------------
                0.00    0.00       4/4           std::allocator<std::shared_ptr<cl::sycl::detail::property_base> >::~allocator() [90]
[88]     0.0    0.00    0.00       4         __gnu_cxx::new_allocator<std::shared_ptr<cl::sycl::detail::property_base> >::~new_allocator() [88]
-----------------------------------------------
                0.00    0.00       4/4           std::_Vector_base<std::shared_ptr<cl::sycl::detail::property_base>, std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > >::_Vector_impl::_Vector_impl() [93]
[89]     0.0    0.00    0.00       4         std::allocator<std::shared_ptr<cl::sycl::detail::property_base> >::allocator() [89]
                0.00    0.00       4/4           __gnu_cxx::new_allocator<std::shared_ptr<cl::sycl::detail::property_base> >::new_allocator() [87]
-----------------------------------------------
                0.00    0.00       4/4           std::_Vector_base<std::shared_ptr<cl::sycl::detail::property_base>, std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > >::_Vector_impl::~_Vector_impl() [94]
[90]     0.0    0.00    0.00       4         std::allocator<std::shared_ptr<cl::sycl::detail::property_base> >::~allocator() [90]
                0.00    0.00       4/4           __gnu_cxx::new_allocator<std::shared_ptr<cl::sycl::detail::property_base> >::~new_allocator() [88]
-----------------------------------------------
                0.00    0.00       1/4           cl::sycl::queue::~queue() [165]
                0.00    0.00       1/4           cl::sycl::detail::command_group::~command_group() [177]
                0.00    0.00       2/4           cl::sycl::event cl::sycl::queue::submit<main::{lambda(cl::sycl::handler&)#1}>(main::{lambda(cl::sycl::handler&)#1}) [163]
[91]     0.0    0.00    0.00       4         std::shared_ptr<cl::sycl::detail::queue>::~shared_ptr() [91]
                0.00    0.00       4/4           std::__shared_ptr<cl::sycl::detail::queue, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() [100]
-----------------------------------------------
                0.00    0.00       4/4           void std::_Destroy<std::shared_ptr<cl::sycl::detail::property_base>*>(std::shared_ptr<cl::sycl::detail::property_base>*, std::shared_ptr<cl::sycl::detail::property_base>*) [104]
[92]     0.0    0.00    0.00       4         void std::_Destroy_aux<false>::__destroy<std::shared_ptr<cl::sycl::detail::property_base>*>(std::shared_ptr<cl::sycl::detail::property_base>*, std::shared_ptr<cl::sycl::detail::property_base>*) [92]
-----------------------------------------------
                0.00    0.00       4/4           std::_Vector_base<std::shared_ptr<cl::sycl::detail::property_base>, std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > >::_Vector_base() [98]
[93]     0.0    0.00    0.00       4         std::_Vector_base<std::shared_ptr<cl::sycl::detail::property_base>, std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > >::_Vector_impl::_Vector_impl() [93]
                0.00    0.00       4/4           std::_Vector_base<std::shared_ptr<cl::sycl::detail::property_base>, std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > >::_Vector_impl_data::_Vector_impl_data() [96]
                0.00    0.00       4/4           std::allocator<std::shared_ptr<cl::sycl::detail::property_base> >::allocator() [89]
-----------------------------------------------
                0.00    0.00       4/4           std::_Vector_base<std::shared_ptr<cl::sycl::detail::property_base>, std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > >::~_Vector_base() [99]
[94]     0.0    0.00    0.00       4         std::_Vector_base<std::shared_ptr<cl::sycl::detail::property_base>, std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > >::_Vector_impl::~_Vector_impl() [94]
                0.00    0.00       4/4           std::allocator<std::shared_ptr<cl::sycl::detail::property_base> >::~allocator() [90]
-----------------------------------------------
                0.00    0.00       4/4           std::_Vector_base<std::shared_ptr<cl::sycl::detail::property_base>, std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > >::~_Vector_base() [99]
[95]     0.0    0.00    0.00       4         std::_Vector_base<std::shared_ptr<cl::sycl::detail::property_base>, std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > >::_M_deallocate(std::shared_ptr<cl::sycl::detail::property_base>*, unsigned long) [95]
-----------------------------------------------
                0.00    0.00       4/4           std::_Vector_base<std::shared_ptr<cl::sycl::detail::property_base>, std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > >::_Vector_impl::_Vector_impl() [93]
[96]     0.0    0.00    0.00       4         std::_Vector_base<std::shared_ptr<cl::sycl::detail::property_base>, std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > >::_Vector_impl_data::_Vector_impl_data() [96]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::shared_ptr<cl::sycl::detail::property_base>, std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > >::~vector() [103]
[97]     0.0    0.00    0.00       4         std::_Vector_base<std::shared_ptr<cl::sycl::detail::property_base>, std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > >::_M_get_Tp_allocator() [97]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::shared_ptr<cl::sycl::detail::property_base>, std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > >::vector() [102]
[98]     0.0    0.00    0.00       4         std::_Vector_base<std::shared_ptr<cl::sycl::detail::property_base>, std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > >::_Vector_base() [98]
                0.00    0.00       4/4           std::_Vector_base<std::shared_ptr<cl::sycl::detail::property_base>, std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > >::_Vector_impl::_Vector_impl() [93]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::shared_ptr<cl::sycl::detail::property_base>, std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > >::~vector() [103]
[99]     0.0    0.00    0.00       4         std::_Vector_base<std::shared_ptr<cl::sycl::detail::property_base>, std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > >::~_Vector_base() [99]
                0.00    0.00       4/4           std::_Vector_base<std::shared_ptr<cl::sycl::detail::property_base>, std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > >::_Vector_impl::~_Vector_impl() [94]
                0.00    0.00       4/4           std::_Vector_base<std::shared_ptr<cl::sycl::detail::property_base>, std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > >::_M_deallocate(std::shared_ptr<cl::sycl::detail::property_base>*, unsigned long) [95]
-----------------------------------------------
                0.00    0.00       4/4           std::shared_ptr<cl::sycl::detail::queue>::~shared_ptr() [91]
[100]    0.0    0.00    0.00       4         std::__shared_ptr<cl::sycl::detail::queue, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() [100]
                0.00    0.00       4/19          std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count() [54]
-----------------------------------------------
                0.00    0.00       4/4           cl::sycl::property_list::property_list<, void, void>() [83]
[101]    0.0    0.00    0.00       4         std::vector<std::shared_ptr<cl::sycl::detail::property_base>, std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > >::reserve(unsigned long) [101]
                0.00    0.00       5/5           std::vector<std::shared_ptr<cl::sycl::detail::property_base>, std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > >::max_size() const [78]
                0.00    0.00       5/5           std::vector<std::shared_ptr<cl::sycl::detail::property_base>, std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > >::capacity() const [77]
-----------------------------------------------
                0.00    0.00       4/4           cl::sycl::property_list::property_list<, void, void>() [83]
[102]    0.0    0.00    0.00       4         std::vector<std::shared_ptr<cl::sycl::detail::property_base>, std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > >::vector() [102]
                0.00    0.00       4/4           std::_Vector_base<std::shared_ptr<cl::sycl::detail::property_base>, std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > >::_Vector_base() [98]
-----------------------------------------------
                0.00    0.00       4/4           cl::sycl::property_list::~property_list() [84]
[103]    0.0    0.00    0.00       4         std::vector<std::shared_ptr<cl::sycl::detail::property_base>, std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > >::~vector() [103]
                0.00    0.00       4/4           std::_Vector_base<std::shared_ptr<cl::sycl::detail::property_base>, std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > >::_M_get_Tp_allocator() [97]
                0.00    0.00       4/4           void std::_Destroy<std::shared_ptr<cl::sycl::detail::property_base>*, std::shared_ptr<cl::sycl::detail::property_base> >(std::shared_ptr<cl::sycl::detail::property_base>*, std::shared_ptr<cl::sycl::detail::property_base>*, std::allocator<std::shared_ptr<cl::sycl::detail::property_base> >&) [105]
                0.00    0.00       4/4           std::_Vector_base<std::shared_ptr<cl::sycl::detail::property_base>, std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > >::~_Vector_base() [99]
-----------------------------------------------
                0.00    0.00       4/4           void std::_Destroy<std::shared_ptr<cl::sycl::detail::property_base>*, std::shared_ptr<cl::sycl::detail::property_base> >(std::shared_ptr<cl::sycl::detail::property_base>*, std::shared_ptr<cl::sycl::detail::property_base>*, std::allocator<std::shared_ptr<cl::sycl::detail::property_base> >&) [105]
[104]    0.0    0.00    0.00       4         void std::_Destroy<std::shared_ptr<cl::sycl::detail::property_base>*>(std::shared_ptr<cl::sycl::detail::property_base>*, std::shared_ptr<cl::sycl::detail::property_base>*) [104]
                0.00    0.00       4/4           void std::_Destroy_aux<false>::__destroy<std::shared_ptr<cl::sycl::detail::property_base>*>(std::shared_ptr<cl::sycl::detail::property_base>*, std::shared_ptr<cl::sycl::detail::property_base>*) [92]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::shared_ptr<cl::sycl::detail::property_base>, std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > >::~vector() [103]
[105]    0.0    0.00    0.00       4         void std::_Destroy<std::shared_ptr<cl::sycl::detail::property_base>*, std::shared_ptr<cl::sycl::detail::property_base> >(std::shared_ptr<cl::sycl::detail::property_base>*, std::shared_ptr<cl::sycl::detail::property_base>*, std::allocator<std::shared_ptr<cl::sycl::detail::property_base> >&) [105]
                0.00    0.00       4/4           void std::_Destroy<std::shared_ptr<cl::sycl::detail::property_base>*>(std::shared_ptr<cl::sycl::detail::property_base>*, std::shared_ptr<cl::sycl::detail::property_base>*) [104]
-----------------------------------------------
                0.00    0.00       1/3           cl::sycl::detail::make_base_allocator<int, cl::sycl::detail::aligned_mem::aligned_allocator>::get_buffer_allocator(cl::sycl::detail::aligned_mem::aligned_allocator) [185]
                0.00    0.00       1/3           cl::sycl::detail::make_base_allocator<int, cl::sycl::detail::aligned_mem::aligned_allocator>::get(cl::sycl::detail::aligned_mem::aligned_allocator, unsigned long) [187]
                0.00    0.00       1/3           cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>::wrapped_allocator(cl::sycl::detail::aligned_mem::aligned_allocator, unsigned long) [183]
[106]    0.0    0.00    0.00       3         cl::sycl::detail::aligned_mem::aligned_allocator::aligned_allocator(cl::sycl::detail::aligned_mem::aligned_allocator const&) [106]
                0.00    0.00       3/3           cl::sycl::detail::base_allocator::base_allocator(cl::sycl::detail::base_allocator const&) [109]
-----------------------------------------------
                0.00    0.00       1/3           void cl::sycl::handler::parallel_for<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::range<1> const&, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1} const&) [194]
                0.00    0.00       1/3           cl::sycl::detail::nd_range_base::nd_range_base(cl::sycl::detail::index_array, cl::sycl::detail::index_array) [179]
                0.00    0.00       1/3           cl::sycl::detail::access_range cl::sycl::detail::get_access_range<1, 1>(cl::sycl::range<1> const&) [182]
[107]    0.0    0.00    0.00       3         cl::sycl::detail::index_array::index_array(unsigned long, unsigned long, unsigned long) [107]
                0.00    0.00       3/3           cl::sycl::detail::id_range_base<unsigned long, 3, cl::sycl::detail::index_array>::id_range_base<unsigned long, unsigned long, unsigned long>(cl::sycl::detail::id_range_base<unsigned long, 3, cl::sycl::detail::index_array>::values_tag, unsigned long, unsigned long, unsigned long) [108]
-----------------------------------------------
                0.00    0.00       3/3           cl::sycl::detail::index_array::index_array(unsigned long, unsigned long, unsigned long) [107]
[108]    0.0    0.00    0.00       3         cl::sycl::detail::id_range_base<unsigned long, 3, cl::sycl::detail::index_array>::id_range_base<unsigned long, unsigned long, unsigned long>(cl::sycl::detail::id_range_base<unsigned long, 3, cl::sycl::detail::index_array>::values_tag, unsigned long, unsigned long, unsigned long) [108]
-----------------------------------------------
                0.00    0.00       3/3           cl::sycl::detail::aligned_mem::aligned_allocator::aligned_allocator(cl::sycl::detail::aligned_mem::aligned_allocator const&) [106]
[109]    0.0    0.00    0.00       3         cl::sycl::detail::base_allocator::base_allocator(cl::sycl::detail::base_allocator const&) [109]
-----------------------------------------------
                0.00    0.00       3/3           std::allocator<int>::~allocator() [114]
[110]    0.0    0.00    0.00       3         __gnu_cxx::new_allocator<int>::~new_allocator() [110]
-----------------------------------------------
                0.00    0.00       1/3           void cl::sycl::handler::parallel_for<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::range<1> const&, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1} const&) [194]
                0.00    0.00       1/3           cl::sycl::buffer<int, 1, cl::sycl::detail::aligned_mem::aligned_allocator>::buffer(int*, cl::sycl::range<1> const&, cl::sycl::property_list const&) [168]
                0.00    0.00       1/3           cl::sycl::detail::access_range cl::sycl::detail::get_access_range<1, 1>(cl::sycl::range<1> const&) [182]
[111]    0.0    0.00    0.00       3         cl::sycl::range<1>::operator cl::sycl::detail::index_array() const [111]
                0.00    0.00       3/3           cl::sycl::detail::id_range_base<unsigned long, 1, cl::sycl::range<1> >::get(int) const [112]
                0.00    0.00       3/6           cl::sycl::detail::id_range_base<unsigned long, 3, cl::sycl::detail::index_array>::operator[](int) [65]
-----------------------------------------------
                0.00    0.00       3/3           cl::sycl::range<1>::operator cl::sycl::detail::index_array() const [111]
[112]    0.0    0.00    0.00       3         cl::sycl::detail::id_range_base<unsigned long, 1, cl::sycl::range<1> >::get(int) const [112]
                0.00    0.00       3/30003       cl::sycl::detail::id_range_base<unsigned long, 1, cl::sycl::range<1> >::operator[](int) const [22]
-----------------------------------------------
                0.00    0.00       1/3           std::chrono::duration<long, std::ratio<1l, 1000l> > std::chrono::__duration_cast_impl<std::chrono::duration<long, std::ratio<1l, 1000l> >, std::ratio<1l, 1000000l>, long, true, false>::__cast<long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [306]
                0.00    0.00       2/3           std::common_type<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::type std::chrono::operator-<long, std::ratio<1l, 1000000000l>, long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&, std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [310]
[113]    0.0    0.00    0.00       3         std::chrono::duration<long, std::ratio<1l, 1000000000l> >::count() const [113]
-----------------------------------------------
                0.00    0.00       1/3           main [12]
                0.00    0.00       1/3           std::vector<int, std::allocator<int> >::_S_check_init_len(unsigned long, std::allocator<int> const&) [312]
                0.00    0.00       1/3           std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl() [255]
[114]    0.0    0.00    0.00       3         std::allocator<int>::~allocator() [114]
                0.00    0.00       3/3           __gnu_cxx::new_allocator<int>::~new_allocator() [110]
-----------------------------------------------
                0.00    0.00       3/3           std::_Tuple_impl<0ul, cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::_M_head(std::_Tuple_impl<0ul, cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >&) [116]
[115]    0.0    0.00    0.00       3         std::_Head_base<0ul, cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, false>::_M_head(std::_Head_base<0ul, cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, false>&) [115]
-----------------------------------------------
                0.00    0.00       3/3           cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*& std::__get_helper<0ul, cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >(std::_Tuple_impl<0ul, cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >&) [119]
[116]    0.0    0.00    0.00       3         std::_Tuple_impl<0ul, cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::_M_head(std::_Tuple_impl<0ul, cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >&) [116]
                0.00    0.00       3/3           std::_Head_base<0ul, cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, false>::_M_head(std::_Head_base<0ul, cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, false>&) [115]
-----------------------------------------------
                0.00    0.00       3/3           std::_Function_base::_Base_manager<void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}>::_M_manager(std::_Any_data&, {lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1} const&, std::_Manager_operation) [268]
[117]    0.0    0.00    0.00       3         std::_Function_base::_Base_manager<void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) [117]
                0.00    0.00       3/6           void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}*& std::_Any_data::_M_access<void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}*>() [71]
                0.00    0.00       3/5           void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}::~item_base() [81]
-----------------------------------------------
                0.00    0.00       1/3           std::unique_ptr<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::~unique_ptr() [240]
                0.00    0.00       1/3           std::__uniq_ptr_impl<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::__uniq_ptr_impl(cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*) [286]
                0.00    0.00       1/3           std::unique_ptr<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::release() [238]
[118]    0.0    0.00    0.00       3         std::__uniq_ptr_impl<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::_M_ptr() [118]
                0.00    0.00       3/3           std::tuple_element<0ul, std::tuple<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > > >::type& std::get<0ul, cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >(std::tuple<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >&) [120]
-----------------------------------------------
                0.00    0.00       3/3           std::tuple_element<0ul, std::tuple<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > > >::type& std::get<0ul, cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >(std::tuple<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >&) [120]
[119]    0.0    0.00    0.00       3         cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*& std::__get_helper<0ul, cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >(std::_Tuple_impl<0ul, cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >&) [119]
                0.00    0.00       3/3           std::_Tuple_impl<0ul, cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::_M_head(std::_Tuple_impl<0ul, cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >&) [116]
-----------------------------------------------
                0.00    0.00       3/3           std::__uniq_ptr_impl<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::_M_ptr() [118]
[120]    0.0    0.00    0.00       3         std::tuple_element<0ul, std::tuple<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > > >::type& std::get<0ul, cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >(std::tuple<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >&) [120]
                0.00    0.00       3/3           cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*& std::__get_helper<0ul, cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >(std::_Tuple_impl<0ul, cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >&) [119]
-----------------------------------------------
                0.00    0.00       1/3           std::function<void (cl::sycl::detail::item_base&)>::function<void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda(cl::sycl::detail::item_base&)#1}, void, void>(void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda(cl::sycl::detail::item_base&)#1}) [319]
                0.00    0.00       1/3           std::_Function_base::_Base_manager<void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}>::_M_init_functor(std::_Any_data&, {lambda(cl::sycl::id<1>)#1}::item_base&&) [269]
                0.00    0.00       1/3           std::_Function_base::_Base_manager<void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}>::_M_init_functor(std::_Any_data&, {lambda(cl::sycl::id<1>)#1}::item_base&&, std::integral_constant<bool, false>) [270]
[121]    0.0    0.00    0.00       3         std::remove_reference<void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}&>::type&& std::move<void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}&>(void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}&&) [121]
-----------------------------------------------
                0.00    0.00       1/3           std::tuple<cl::sycl::detail::base_allocator*, std::default_delete<cl::sycl::detail::base_allocator> >::tuple<cl::sycl::detail::base_allocator*&, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >, true>(cl::sycl::detail::base_allocator*&, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >&&) [303]
                0.00    0.00       1/3           std::_Tuple_impl<0ul, cl::sycl::detail::base_allocator*, std::default_delete<cl::sycl::detail::base_allocator> >::_Tuple_impl<cl::sycl::detail::base_allocator*&, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >, void>(cl::sycl::detail::base_allocator*&, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >&&) [244]
                0.00    0.00       1/3           std::_Head_base<0ul, cl::sycl::detail::base_allocator*, false>::_Head_base<cl::sycl::detail::base_allocator*&>(cl::sycl::detail::base_allocator*&) [220]
[122]    0.0    0.00    0.00       3         cl::sycl::detail::base_allocator*& std::forward<cl::sycl::detail::base_allocator*&>(std::remove_reference<cl::sycl::detail::base_allocator*&>::type&) [122]
-----------------------------------------------
                0.00    0.00       1/3           void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}) [195]
                0.00    0.00       2/3           std::_Function_base::_Base_manager<void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}>::_M_clone(std::_Any_data&, {lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1} const&, std::integral_constant<bool, false>) [144]
[123]    0.0    0.00    0.00       3         void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}::item_base({lambda(cl::sycl::id<1>)#1}::item_base const&) [123]
                0.00    0.00       3/5           main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}::id(cl::sycl::id<1> const&) [82]
-----------------------------------------------
                0.00    0.00       1/2           cl::sycl::detail::aligned_mem::aligned_allocator::aligned_allocator(unsigned long, unsigned long) [173]
                0.00    0.00       1/2           cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>::wrapped_allocator(cl::sycl::detail::aligned_mem::aligned_allocator, unsigned long) [183]
[124]    0.0    0.00    0.00       2         cl::sycl::detail::base_allocator::base_allocator() [124]
-----------------------------------------------
                0.00    0.00       1/2           void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}) [195]
                0.00    0.00       1/2           void cl::sycl::handler::process_functor_arguments<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}>(main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1} const&, cl::sycl::kernel&, cl::sycl::detail::enqueue_device_kernel_command*) [196]
[125]    0.0    0.00    0.00       2         cl::sycl::context::~context() [125]
                0.00    0.00       2/2           std::shared_ptr<cl::sycl::detail::context>::~shared_ptr() [139]
-----------------------------------------------
                0.00    0.00       2/2           std::allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> >::allocator<void>(std::allocator<void> const&) [134]
[126]    0.0    0.00    0.00       2         __gnu_cxx::new_allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> >::new_allocator() [126]
-----------------------------------------------
                0.00    0.00       2/2           std::allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> >::~allocator() [135]
[127]    0.0    0.00    0.00       2         __gnu_cxx::new_allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> >::~new_allocator() [127]
-----------------------------------------------
                0.00    0.00       2/2           std::allocator<int>::allocator(std::allocator<int> const&) [136]
[128]    0.0    0.00    0.00       2         __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&) [128]
-----------------------------------------------
                0.00    0.00       1/2           std::allocator_traits<std::allocator<int> >::max_size(std::allocator<int> const&) [296]
                0.00    0.00       1/2           __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) [204]
[129]    0.0    0.00    0.00       2         __gnu_cxx::new_allocator<int>::max_size() const [129]
-----------------------------------------------
                0.00    0.00       1/2           cl::sycl::event cl::sycl::detail::command_group::submit_handler<main::{lambda(cl::sycl::handler&)#1}>(main::{lambda(cl::sycl::handler&)#1}, std::shared_ptr<cl::sycl::detail::queue> const&, cl::sycl::detail::standard_handler_tag) [175]
                0.00    0.00       1/2           std::unique_ptr<cl::sycl::handler, std::default_delete<cl::sycl::handler> >::operator*() const [213]
[130]    0.0    0.00    0.00       2         std::unique_ptr<cl::sycl::handler, std::default_delete<cl::sycl::handler> >::get() const [130]
                0.00    0.00       2/2           std::__uniq_ptr_impl<cl::sycl::handler, std::default_delete<cl::sycl::handler> >::_M_ptr() const [131]
-----------------------------------------------
                0.00    0.00       2/2           std::unique_ptr<cl::sycl::handler, std::default_delete<cl::sycl::handler> >::get() const [130]
[131]    0.0    0.00    0.00       2         std::__uniq_ptr_impl<cl::sycl::handler, std::default_delete<cl::sycl::handler> >::_M_ptr() const [131]
                0.00    0.00       2/2           std::tuple_element<0ul, std::tuple<cl::sycl::handler*, std::default_delete<cl::sycl::handler> > >::type const& std::get<0ul, cl::sycl::handler*, std::default_delete<cl::sycl::handler> >(std::tuple<cl::sycl::handler*, std::default_delete<cl::sycl::handler> > const&) [151]
-----------------------------------------------
                0.00    0.00       2/2           std::common_type<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::type std::chrono::operator-<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >(std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&, std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&) [309]
[132]    0.0    0.00    0.00       2         std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::time_since_epoch() const [132]
-----------------------------------------------
                0.00    0.00       2/2           std::_Function_base::_Base_manager<void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}>::_M_clone(std::_Any_data&, {lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1} const&, std::integral_constant<bool, false>) [144]
[133]    0.0    0.00    0.00       2         void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1} const* const& std::_Any_data::_M_access<void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1} const*>() const [133]
                0.00    0.00       2/15002       std::_Any_data::_M_access() const [35]
-----------------------------------------------
                0.00    0.00       1/2           std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, void>(void*, cl::sycl::detail::NullDeleter, std::allocator<void>) [277]
                0.00    0.00       1/2           std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [629]
[134]    0.0    0.00    0.00       2         std::allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> >::allocator<void>(std::allocator<void> const&) [134]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> >::new_allocator() [126]
-----------------------------------------------
                0.00    0.00       1/2           std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, void>(void*, cl::sycl::detail::NullDeleter, std::allocator<void>) [277]
                0.00    0.00       1/2           std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [629]
[135]    0.0    0.00    0.00       2         std::allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> >::~allocator() [135]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> >::~new_allocator() [127]
-----------------------------------------------
                0.00    0.00       1/2           std::vector<int, std::allocator<int> >::_S_check_init_len(unsigned long, std::allocator<int> const&) [312]
                0.00    0.00       1/2           std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&) [254]
[136]    0.0    0.00    0.00       2         std::allocator<int>::allocator(std::allocator<int> const&) [136]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&) [128]
-----------------------------------------------
                0.00    0.00       2/2           std::_Tuple_impl<0ul, cl::sycl::handler*, std::default_delete<cl::sycl::handler> >::_M_head(std::_Tuple_impl<0ul, cl::sycl::handler*, std::default_delete<cl::sycl::handler> > const&) [140]
[137]    0.0    0.00    0.00       2         std::_Head_base<0ul, cl::sycl::handler*, false>::_M_head(std::_Head_base<0ul, cl::sycl::handler*, false> const&) [137]
-----------------------------------------------
                0.00    0.00       1/2           cl::sycl::event cl::sycl::detail::command_group::submit_handler<main::{lambda(cl::sycl::handler&)#1}>(main::{lambda(cl::sycl::handler&)#1}, std::shared_ptr<cl::sycl::detail::queue> const&, cl::sycl::detail::standard_handler_tag) [175]
                0.00    0.00       1/2           cl::sycl::event::~event() [162]
[138]    0.0    0.00    0.00       2         std::shared_ptr<cl::sycl::detail::event>::~shared_ptr() [138]
                0.00    0.00       2/2           std::__shared_ptr<cl::sycl::detail::event, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() [142]
-----------------------------------------------
                0.00    0.00       2/2           cl::sycl::context::~context() [125]
[139]    0.0    0.00    0.00       2         std::shared_ptr<cl::sycl::detail::context>::~shared_ptr() [139]
                0.00    0.00       2/2           std::__shared_ptr<cl::sycl::detail::context, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() [143]
-----------------------------------------------
                0.00    0.00       2/2           cl::sycl::handler* const& std::__get_helper<0ul, cl::sycl::handler*, std::default_delete<cl::sycl::handler> >(std::_Tuple_impl<0ul, cl::sycl::handler*, std::default_delete<cl::sycl::handler> > const&) [150]
[140]    0.0    0.00    0.00       2         std::_Tuple_impl<0ul, cl::sycl::handler*, std::default_delete<cl::sycl::handler> >::_M_head(std::_Tuple_impl<0ul, cl::sycl::handler*, std::default_delete<cl::sycl::handler> > const&) [140]
                0.00    0.00       2/2           std::_Head_base<0ul, cl::sycl::handler*, false>::_M_head(std::_Head_base<0ul, cl::sycl::handler*, false> const&) [137]
-----------------------------------------------
                0.00    0.00       1/2           std::vector<int, std::allocator<int> >::~vector() [316]
                0.00    0.00       1/2           std::vector<int, std::allocator<int> >::_M_default_initialize(unsigned long) [313]
[141]    0.0    0.00    0.00       2         std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() [141]
-----------------------------------------------
                0.00    0.00       2/2           std::shared_ptr<cl::sycl::detail::event>::~shared_ptr() [138]
[142]    0.0    0.00    0.00       2         std::__shared_ptr<cl::sycl::detail::event, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() [142]
                0.00    0.00       2/19          std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count() [54]
-----------------------------------------------
                0.00    0.00       2/2           std::shared_ptr<cl::sycl::detail::context>::~shared_ptr() [139]
[143]    0.0    0.00    0.00       2         std::__shared_ptr<cl::sycl::detail::context, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() [143]
                0.00    0.00       2/19          std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count() [54]
-----------------------------------------------
                0.00    0.00       2/2           std::_Function_base::_Base_manager<void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}>::_M_manager(std::_Any_data&, {lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1} const&, std::_Manager_operation) [268]
[144]    0.0    0.00    0.00       2         std::_Function_base::_Base_manager<void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}>::_M_clone(std::_Any_data&, {lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1} const&, std::integral_constant<bool, false>) [144]
                0.00    0.00       2/2           void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1} const* const& std::_Any_data::_M_access<void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1} const*>() const [133]
                0.00    0.00       2/6           void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}*& std::_Any_data::_M_access<void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}*>() [71]
                0.00    0.00       2/3           void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}::item_base({lambda(cl::sycl::id<1>)#1}::item_base const&) [123]
-----------------------------------------------
                0.00    0.00       1/2           std::function<void (cl::sycl::detail::item_base&)>::function<void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda(cl::sycl::detail::item_base&)#1}, void, void>(void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda(cl::sycl::detail::item_base&)#1}) [319]
                0.00    0.00       1/2           std::function<void (cl::sycl::exception_list)>::function() [317]
[145]    0.0    0.00    0.00       2         std::_Function_base::_Function_base() [145]
-----------------------------------------------
                0.00    0.00       1/2           std::function<void (cl::sycl::exception_list)>::~function() [318]
                0.00    0.00       1/2           std::function<void (cl::sycl::detail::item_base&)>::~function() [320]
[146]    0.0    0.00    0.00       2         std::_Function_base::~_Function_base() [146]
                0.00    0.00       1/1           std::_Function_base::_Base_manager<void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}>::_M_manager(std::_Any_data&, {lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1} const&, std::_Manager_operation) [268]
-----------------------------------------------
                0.00    0.00       1/2           std::__allocated_ptr<std::allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> > > std::__allocate_guarded<std::allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> >&) [330]
                0.00    0.00       1/2           std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [629]
[147]    0.0    0.00    0.00       2         std::__allocated_ptr<std::allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> > >::__allocated_ptr(std::allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> >&, std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>*) [147]
                0.00    0.00       2/2           std::allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> >* std::__addressof<std::allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> >&) [149]
-----------------------------------------------
                0.00    0.00       1/2           std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, void>(void*, cl::sycl::detail::NullDeleter, std::allocator<void>) [277]
                0.00    0.00       1/2           std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [629]
[148]    0.0    0.00    0.00       2         std::__allocated_ptr<std::allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> > >::~__allocated_ptr() [148]
                0.00    0.00       1/1           std::allocator_traits<std::allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> > >::deallocate(std::allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> >&, std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>*, unsigned long) [292]
-----------------------------------------------
                0.00    0.00       2/2           std::__allocated_ptr<std::allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> > >::__allocated_ptr(std::allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> >&, std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>*) [147]
[149]    0.0    0.00    0.00       2         std::allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> >* std::__addressof<std::allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> >&) [149]
-----------------------------------------------
                0.00    0.00       2/2           std::tuple_element<0ul, std::tuple<cl::sycl::handler*, std::default_delete<cl::sycl::handler> > >::type const& std::get<0ul, cl::sycl::handler*, std::default_delete<cl::sycl::handler> >(std::tuple<cl::sycl::handler*, std::default_delete<cl::sycl::handler> > const&) [151]
[150]    0.0    0.00    0.00       2         cl::sycl::handler* const& std::__get_helper<0ul, cl::sycl::handler*, std::default_delete<cl::sycl::handler> >(std::_Tuple_impl<0ul, cl::sycl::handler*, std::default_delete<cl::sycl::handler> > const&) [150]
                0.00    0.00       2/2           std::_Tuple_impl<0ul, cl::sycl::handler*, std::default_delete<cl::sycl::handler> >::_M_head(std::_Tuple_impl<0ul, cl::sycl::handler*, std::default_delete<cl::sycl::handler> > const&) [140]
-----------------------------------------------
                0.00    0.00       2/2           std::__uniq_ptr_impl<cl::sycl::handler, std::default_delete<cl::sycl::handler> >::_M_ptr() const [131]
[151]    0.0    0.00    0.00       2         std::tuple_element<0ul, std::tuple<cl::sycl::handler*, std::default_delete<cl::sycl::handler> > >::type const& std::get<0ul, cl::sycl::handler*, std::default_delete<cl::sycl::handler> >(std::tuple<cl::sycl::handler*, std::default_delete<cl::sycl::handler> > const&) [151]
                0.00    0.00       2/2           cl::sycl::handler* const& std::__get_helper<0ul, cl::sycl::handler*, std::default_delete<cl::sycl::handler> >(std::_Tuple_impl<0ul, cl::sycl::handler*, std::default_delete<cl::sycl::handler> > const&) [150]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [851]
[152]    0.0    0.00    0.00       1         _GLOBAL__sub_I__Z3hcfjj [152]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [153]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__Z3hcfjj [152]
[153]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [153]
                0.00    0.00       1/1           cl::sycl::default_selector::default_selector() [160]
                0.00    0.00       1/1           cl::sycl::host_selector::host_selector() [158]
                0.00    0.00       1/1           cl::sycl::cpu_selector::cpu_selector() [156]
                0.00    0.00       1/1           cl::sycl::gpu_selector::gpu_selector() [157]
                0.00    0.00       1/1           cl::sycl::accelerator_selector::accelerator_selector() [161]
                0.00    0.00       1/1           cl::sycl::intel_selector::intel_selector() [159]
                0.00    0.00       1/1           cl::sycl::amd_selector::amd_selector() [155]
                0.00    0.00       1/1           cl::sycl::detail::init_sycl_language_version::init_sycl_language_version() [191]
-----------------------------------------------
                0.00    0.00       1/1           cl::sycl::buffer<int, 1, cl::sycl::detail::aligned_mem::aligned_allocator>::~buffer() [169]
[154]    0.0    0.00    0.00       1         cl::sycl::buffer_mem::~buffer_mem() [154]
-----------------------------------------------
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [153]
[155]    0.0    0.00    0.00       1         cl::sycl::amd_selector::amd_selector() [155]
-----------------------------------------------
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [153]
[156]    0.0    0.00    0.00       1         cl::sycl::cpu_selector::cpu_selector() [156]
-----------------------------------------------
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [153]
[157]    0.0    0.00    0.00       1         cl::sycl::gpu_selector::gpu_selector() [157]
-----------------------------------------------
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [153]
[158]    0.0    0.00    0.00       1         cl::sycl::host_selector::host_selector() [158]
-----------------------------------------------
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [153]
[159]    0.0    0.00    0.00       1         cl::sycl::intel_selector::intel_selector() [159]
-----------------------------------------------
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [153]
[160]    0.0    0.00    0.00       1         cl::sycl::default_selector::default_selector() [160]
-----------------------------------------------
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [153]
[161]    0.0    0.00    0.00       1         cl::sycl::accelerator_selector::accelerator_selector() [161]
-----------------------------------------------
                0.00    0.00       1/1           main [12]
[162]    0.0    0.00    0.00       1         cl::sycl::event::~event() [162]
                0.00    0.00       1/2           std::shared_ptr<cl::sycl::detail::event>::~shared_ptr() [138]
-----------------------------------------------
                0.00    0.00       1/1           main [12]
[163]    0.0    0.00    0.00       1         cl::sycl::event cl::sycl::queue::submit<main::{lambda(cl::sycl::handler&)#1}>(main::{lambda(cl::sycl::handler&)#1}) [163]
                0.00    0.00       2/4           std::shared_ptr<cl::sycl::detail::queue>::~shared_ptr() [91]
                0.00    0.00       1/1           cl::sycl::detail::command_group::command_group(std::shared_ptr<cl::sycl::detail::queue> const&) [176]
                0.00    0.00       1/1           _ZN2cl4sycl6detailL15get_handler_tagIZ4mainEUlRNS0_7handlerEE_EEDTcmclfp_cl7declvalIS4_EEEtlNS1_20standard_handler_tagEEET_NS1_14handler_choiceILj0EEE [192]
                0.00    0.00       1/1           std::shared_ptr<cl::sycl::detail::queue>::shared_ptr(decltype(nullptr)) [229]
                0.00    0.00       1/1           cl::sycl::event cl::sycl::detail::command_group::submit_handler<main::{lambda(cl::sycl::handler&)#1}>(main::{lambda(cl::sycl::handler&)#1}, std::shared_ptr<cl::sycl::detail::queue> const&, cl::sycl::detail::standard_handler_tag) [175]
                0.00    0.00       1/1           cl::sycl::detail::command_group::~command_group() [177]
-----------------------------------------------
                0.00    0.00       1/1           main [12]
[164]    0.0    0.00    0.00       1         cl::sycl::queue::queue(cl::sycl::property_list const&) [164]
                0.00    0.00       1/1           std::function<void (cl::sycl::exception_list)>::function() [317]
                0.00    0.00       1/1           std::function<void (cl::sycl::exception_list)>::~function() [318]
-----------------------------------------------
                0.00    0.00       1/1           main [12]
[165]    0.0    0.00    0.00       1         cl::sycl::queue::~queue() [165]
                0.00    0.00       1/4           std::shared_ptr<cl::sycl::detail::queue>::~shared_ptr() [91]
-----------------------------------------------
                0.00    0.00       1/1           main [12]
[166]    0.0    0.00    0.00       1         cl::sycl::range<1>::range<>(unsigned long) [166]
                0.00    0.00       1/1           cl::sycl::detail::id_range_base<unsigned long, 1, cl::sycl::range<1> >::id_range_base<unsigned long>(cl::sycl::detail::id_range_base<unsigned long, 1, cl::sycl::range<1> >::values_tag, unsigned long) [178]
-----------------------------------------------
                0.00    0.00       1/1           main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const [345]
[167]    0.0    0.00    0.00       1         cl::sycl::accessor<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0> cl::sycl::buffer<int, 1, cl::sycl::detail::aligned_mem::aligned_allocator>::get_access<(cl::sycl::access::mode)1, (cl::sycl::access::target)1>(cl::sycl::handler&) [167]
                0.00    0.00       1/4           cl::sycl::property_list::property_list<, void, void>() [83]
                0.00    0.00       1/1           cl::sycl::accessor<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::accessor<cl::sycl::detail::aligned_mem::aligned_allocator, int, void>(cl::sycl::buffer<int, 1, cl::sycl::detail::aligned_mem::aligned_allocator>&, cl::sycl::handler&, cl::sycl::property_list const&) [200]
                0.00    0.00       1/4           cl::sycl::property_list::~property_list() [84]
-----------------------------------------------
                0.00    0.00       1/1           main [12]
[168]    0.0    0.00    0.00       1         cl::sycl::buffer<int, 1, cl::sycl::detail::aligned_mem::aligned_allocator>::buffer(int*, cl::sycl::range<1> const&, cl::sycl::property_list const&) [168]
                0.00    0.00       1/1           cl::sycl::detail::aligned_mem::aligned_allocator::aligned_allocator(unsigned long, unsigned long) [173]
                0.00    0.00       1/1           cl::sycl::detail::make_base_allocator<int, cl::sycl::detail::aligned_mem::aligned_allocator>::get_buffer_allocator(cl::sycl::detail::aligned_mem::aligned_allocator) [185]
                0.00    0.00       1/3           cl::sycl::range<1>::operator cl::sycl::detail::index_array() const [111]
                0.00    0.00       1/1           std::remove_reference<std::shared_ptr<void> >::type&& std::move<std::shared_ptr<void> >(std::shared_ptr<void>&&) [341]
                0.00    0.00       1/1           std::shared_ptr<void>::shared_ptr<void, cl::sycl::detail::NullDeleter, void>(void*, cl::sycl::detail::NullDeleter) [233]
                0.00    0.00       1/1           std::shared_ptr<void>::~shared_ptr() [234]
                0.00    0.00       1/1           std::unique_ptr<cl::sycl::detail::base_allocator, std::default_delete<cl::sycl::detail::base_allocator> >::~unique_ptr() [236]
                0.00    0.00       1/4           cl::sycl::detail::aligned_mem::aligned_allocator::~aligned_allocator() [85]
-----------------------------------------------
                0.00    0.00       1/1           main [12]
[169]    0.0    0.00    0.00       1         cl::sycl::buffer<int, 1, cl::sycl::detail::aligned_mem::aligned_allocator>::~buffer() [169]
                0.00    0.00       1/1           cl::sycl::buffer_mem::~buffer_mem() [154]
-----------------------------------------------
                0.00    0.00       1/1           std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_dispose() [630]
[170]    0.0    0.00    0.00       1         cl::sycl::detail::NullDeleter::operator()(void*) [170]
-----------------------------------------------
                0.00    0.00       1/1           cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>::deallocate(void*, unsigned long) [380]
[171]    0.0    0.00    0.00       1         cl::sycl::detail::aligned_mem::aligned_allocator::deallocate(void*, unsigned long) [171]
-----------------------------------------------
                0.00    0.00       1/1           cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>::allocate(unsigned long) [381]
[172]    0.0    0.00    0.00       1         cl::sycl::detail::aligned_mem::aligned_allocator::allocate(unsigned long) [172]
-----------------------------------------------
                0.00    0.00       1/1           cl::sycl::buffer<int, 1, cl::sycl::detail::aligned_mem::aligned_allocator>::buffer(int*, cl::sycl::range<1> const&, cl::sycl::property_list const&) [168]
[173]    0.0    0.00    0.00       1         cl::sycl::detail::aligned_mem::aligned_allocator::aligned_allocator(unsigned long, unsigned long) [173]
                0.00    0.00       1/2           cl::sycl::detail::base_allocator::base_allocator() [124]
-----------------------------------------------
                0.00    0.00       1/1           cl::sycl::detail::access_range cl::sycl::detail::get_access_range<1, 1>(cl::sycl::range<1> const&) [182]
[174]    0.0    0.00    0.00       1         cl::sycl::detail::access_range::access_range(cl::sycl::detail::index_array, cl::sycl::detail::index_array) [174]
-----------------------------------------------
                0.00    0.00       1/1           cl::sycl::event cl::sycl::queue::submit<main::{lambda(cl::sycl::handler&)#1}>(main::{lambda(cl::sycl::handler&)#1}) [163]
[175]    0.0    0.00    0.00       1         cl::sycl::event cl::sycl::detail::command_group::submit_handler<main::{lambda(cl::sycl::handler&)#1}>(main::{lambda(cl::sycl::handler&)#1}, std::shared_ptr<cl::sycl::detail::queue> const&, cl::sycl::detail::standard_handler_tag) [175]
                0.00    0.00       1/1           std::unique_ptr<cl::sycl::handler, std::default_delete<cl::sycl::handler> >::operator*() const [213]
                0.00    0.00       1/1           main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const [345]
                0.00    0.00       1/2           std::unique_ptr<cl::sycl::handler, std::default_delete<cl::sycl::handler> >::get() const [130]
                0.00    0.00       1/2           std::shared_ptr<cl::sycl::detail::event>::~shared_ptr() [138]
                0.00    0.00       1/1           std::unique_ptr<cl::sycl::handler, std::default_delete<cl::sycl::handler> >::~unique_ptr() [242]
-----------------------------------------------
                0.00    0.00       1/1           cl::sycl::event cl::sycl::queue::submit<main::{lambda(cl::sycl::handler&)#1}>(main::{lambda(cl::sycl::handler&)#1}) [163]
[176]    0.0    0.00    0.00       1         cl::sycl::detail::command_group::command_group(std::shared_ptr<cl::sycl::detail::queue> const&) [176]
                0.00    0.00       1/1           std::shared_ptr<cl::sycl::detail::queue>::shared_ptr(std::shared_ptr<cl::sycl::detail::queue> const&) [230]
-----------------------------------------------
                0.00    0.00       1/1           cl::sycl::event cl::sycl::queue::submit<main::{lambda(cl::sycl::handler&)#1}>(main::{lambda(cl::sycl::handler&)#1}) [163]
[177]    0.0    0.00    0.00       1         cl::sycl::detail::command_group::~command_group() [177]
                0.00    0.00       1/4           std::shared_ptr<cl::sycl::detail::queue>::~shared_ptr() [91]
-----------------------------------------------
                0.00    0.00       1/1           cl::sycl::range<1>::range<>(unsigned long) [166]
[178]    0.0    0.00    0.00       1         cl::sycl::detail::id_range_base<unsigned long, 1, cl::sycl::range<1> >::id_range_base<unsigned long>(cl::sycl::detail::id_range_base<unsigned long, 1, cl::sycl::range<1> >::values_tag, unsigned long) [178]
-----------------------------------------------
                0.00    0.00       1/1           void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}) [195]
[179]    0.0    0.00    0.00       1         cl::sycl::detail::nd_range_base::nd_range_base(cl::sycl::detail::index_array, cl::sycl::detail::index_array) [179]
                0.00    0.00       3/6           cl::sycl::detail::id_range_base<unsigned long, 3, cl::sycl::detail::index_array>::operator[](int) [65]
                0.00    0.00       1/3           cl::sycl::detail::index_array::index_array(unsigned long, unsigned long, unsigned long) [107]
-----------------------------------------------
                0.00    0.00       1/1           cl::sycl::detail::accessor_buffer_interface<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::accessor_buffer_interface(cl::sycl::detail::accessor_buffer_interface<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>&&) [189]
[180]    0.0    0.00    0.00       1         cl::sycl::detail::accessor_common<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::accessor_common(cl::sycl::detail::accessor_common<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>&&) [180]
                0.00    0.00       1/1           std::remove_reference<cl::sycl::detail::accessor_common<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>&>::type&& std::move<cl::sycl::detail::accessor_common<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>&>(cl::sycl::detail::accessor_common<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>&) [338]
-----------------------------------------------
                0.00    0.00       1/1           _ZN2cl4sycl6detail25accessor_buffer_interfaceIiLi1ELNS0_6access4modeE1ELNS3_6targetE1ELNS3_11placeholderE0EECI2NS1_15accessor_commonIiLi1ELS4_1ELS5_1ELS6_0EEEERNS0_11storage_memERNS0_7handlerENS1_12access_rangeERKNS0_13property_listE [190]
[181]    0.0    0.00    0.00       1         cl::sycl::detail::accessor_common<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::accessor_common(cl::sycl::storage_mem&, cl::sycl::handler&, cl::sycl::detail::access_range, cl::sycl::property_list const&) [181]
                0.00    0.00       1/1           cl::sycl::access::mode cl::sycl::detail::mode_from_properties<(cl::sycl::access::mode)1>(cl::sycl::property_list const&) [188]
-----------------------------------------------
                0.00    0.00       1/1           cl::sycl::accessor<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::accessor<cl::sycl::detail::aligned_mem::aligned_allocator, int, void>(cl::sycl::buffer<int, 1, cl::sycl::detail::aligned_mem::aligned_allocator>&, cl::sycl::handler&, cl::sycl::property_list const&) [200]
[182]    0.0    0.00    0.00       1         cl::sycl::detail::access_range cl::sycl::detail::get_access_range<1, 1>(cl::sycl::range<1> const&) [182]
                0.00    0.00       1/3           cl::sycl::detail::index_array::index_array(unsigned long, unsigned long, unsigned long) [107]
                0.00    0.00       1/3           cl::sycl::range<1>::operator cl::sycl::detail::index_array() const [111]
                0.00    0.00       1/1           cl::sycl::detail::access_range::access_range(cl::sycl::detail::index_array, cl::sycl::detail::index_array) [174]
-----------------------------------------------
                0.00    0.00       1/1           cl::sycl::detail::make_base_allocator<int, cl::sycl::detail::aligned_mem::aligned_allocator>::get(cl::sycl::detail::aligned_mem::aligned_allocator, unsigned long) [187]
[183]    0.0    0.00    0.00       1         cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>::wrapped_allocator(cl::sycl::detail::aligned_mem::aligned_allocator, unsigned long) [183]
                0.00    0.00       1/2           cl::sycl::detail::base_allocator::base_allocator() [124]
                0.00    0.00       1/3           cl::sycl::detail::aligned_mem::aligned_allocator::aligned_allocator(cl::sycl::detail::aligned_mem::aligned_allocator const&) [106]
-----------------------------------------------
                0.00    0.00       1/1           cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>::~wrapped_allocator() [382]
[184]    0.0    0.00    0.00       1         cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>::~wrapped_allocator() [184]
                0.00    0.00       1/4           cl::sycl::detail::aligned_mem::aligned_allocator::~aligned_allocator() [85]
                0.00    0.00       1/5           cl::sycl::detail::base_allocator::~base_allocator() [74]
-----------------------------------------------
                0.00    0.00       1/1           cl::sycl::buffer<int, 1, cl::sycl::detail::aligned_mem::aligned_allocator>::buffer(int*, cl::sycl::range<1> const&, cl::sycl::property_list const&) [168]
[185]    0.0    0.00    0.00       1         cl::sycl::detail::make_base_allocator<int, cl::sycl::detail::aligned_mem::aligned_allocator>::get_buffer_allocator(cl::sycl::detail::aligned_mem::aligned_allocator) [185]
                0.00    0.00       1/1           cl::sycl::detail::make_base_allocator<int, cl::sycl::detail::aligned_mem::aligned_allocator>::get_elem_size_multiplier() [186]
                0.00    0.00       1/3           cl::sycl::detail::aligned_mem::aligned_allocator::aligned_allocator(cl::sycl::detail::aligned_mem::aligned_allocator const&) [106]
                0.00    0.00       1/4           cl::sycl::detail::aligned_mem::aligned_allocator::~aligned_allocator() [85]
                0.00    0.00       1/1           cl::sycl::detail::make_base_allocator<int, cl::sycl::detail::aligned_mem::aligned_allocator>::get(cl::sycl::detail::aligned_mem::aligned_allocator, unsigned long) [187]
-----------------------------------------------
                0.00    0.00       1/1           cl::sycl::detail::make_base_allocator<int, cl::sycl::detail::aligned_mem::aligned_allocator>::get_buffer_allocator(cl::sycl::detail::aligned_mem::aligned_allocator) [185]
[186]    0.0    0.00    0.00       1         cl::sycl::detail::make_base_allocator<int, cl::sycl::detail::aligned_mem::aligned_allocator>::get_elem_size_multiplier() [186]
-----------------------------------------------
                0.00    0.00       1/1           cl::sycl::detail::make_base_allocator<int, cl::sycl::detail::aligned_mem::aligned_allocator>::get_buffer_allocator(cl::sycl::detail::aligned_mem::aligned_allocator) [185]
[187]    0.0    0.00    0.00       1         cl::sycl::detail::make_base_allocator<int, cl::sycl::detail::aligned_mem::aligned_allocator>::get(cl::sycl::detail::aligned_mem::aligned_allocator, unsigned long) [187]
                0.00    0.00       1/3           cl::sycl::detail::aligned_mem::aligned_allocator::aligned_allocator(cl::sycl::detail::aligned_mem::aligned_allocator const&) [106]
                0.00    0.00       1/1           cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>::wrapped_allocator(cl::sycl::detail::aligned_mem::aligned_allocator, unsigned long) [183]
                0.00    0.00       1/1           std::unique_ptr<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::unique_ptr<std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >, void>(cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*) [239]
                0.00    0.00       1/1           std::unique_ptr<cl::sycl::detail::base_allocator, std::default_delete<cl::sycl::detail::base_allocator> >::unique_ptr<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >, void>(std::unique_ptr<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >&&) [235]
                0.00    0.00       1/1           std::unique_ptr<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::~unique_ptr() [240]
                0.00    0.00       1/4           cl::sycl::detail::aligned_mem::aligned_allocator::~aligned_allocator() [85]
-----------------------------------------------
                0.00    0.00       1/1           cl::sycl::detail::accessor_common<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::accessor_common(cl::sycl::storage_mem&, cl::sycl::handler&, cl::sycl::detail::access_range, cl::sycl::property_list const&) [181]
[188]    0.0    0.00    0.00       1         cl::sycl::access::mode cl::sycl::detail::mode_from_properties<(cl::sycl::access::mode)1>(cl::sycl::property_list const&) [188]
                0.00    0.00       1/1           bool cl::sycl::property_list::has_property<cl::sycl::property::no_init_impl>() const [208]
-----------------------------------------------
                0.00    0.00       1/1           cl::sycl::accessor<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::accessor(cl::sycl::accessor<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>&&) [199]
[189]    0.0    0.00    0.00       1         cl::sycl::detail::accessor_buffer_interface<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::accessor_buffer_interface(cl::sycl::detail::accessor_buffer_interface<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>&&) [189]
                0.00    0.00       1/1           cl::sycl::detail::accessor_common<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::accessor_common(cl::sycl::detail::accessor_common<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>&&) [180]
-----------------------------------------------
                0.00    0.00       1/1           cl::sycl::accessor<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::accessor<cl::sycl::detail::aligned_mem::aligned_allocator, int, void>(cl::sycl::buffer<int, 1, cl::sycl::detail::aligned_mem::aligned_allocator>&, cl::sycl::handler&, cl::sycl::property_list const&) [200]
[190]    0.0    0.00    0.00       1         _ZN2cl4sycl6detail25accessor_buffer_interfaceIiLi1ELNS0_6access4modeE1ELNS3_6targetE1ELNS3_11placeholderE0EECI2NS1_15accessor_commonIiLi1ELS4_1ELS5_1ELS6_0EEEERNS0_11storage_memERNS0_7handlerENS1_12access_rangeERKNS0_13property_listE [190]
                0.00    0.00       1/1           cl::sycl::detail::accessor_common<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::accessor_common(cl::sycl::storage_mem&, cl::sycl::handler&, cl::sycl::detail::access_range, cl::sycl::property_list const&) [181]
-----------------------------------------------
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [153]
[191]    0.0    0.00    0.00       1         cl::sycl::detail::init_sycl_language_version::init_sycl_language_version() [191]
-----------------------------------------------
                0.00    0.00       1/1           cl::sycl::event cl::sycl::queue::submit<main::{lambda(cl::sycl::handler&)#1}>(main::{lambda(cl::sycl::handler&)#1}) [163]
[192]    0.0    0.00    0.00       1         _ZN2cl4sycl6detailL15get_handler_tagIZ4mainEUlRNS0_7handlerEE_EEDTcmclfp_cl7declvalIS4_EEEtlNS1_20standard_handler_tagEEET_NS1_14handler_choiceILj0EEE [192]
-----------------------------------------------
                0.00    0.00       1/1           void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}) [195]
[193]    0.0    0.00    0.00       1         cl::sycl::kernel::~kernel() [193]
                0.00    0.00       1/1           std::shared_ptr<cl::sycl::detail::kernel>::~shared_ptr() [231]
-----------------------------------------------
                0.00    0.00       1/1           main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const [345]
[194]    0.0    0.00    0.00       1         void cl::sycl::handler::parallel_for<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::range<1> const&, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1} const&) [194]
                0.00    0.00       1/5           main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}::id(cl::sycl::id<1> const&) [82]
                0.00    0.00       1/3           cl::sycl::detail::index_array::index_array(unsigned long, unsigned long, unsigned long) [107]
                0.00    0.00       1/3           cl::sycl::range<1>::operator cl::sycl::detail::index_array() const [111]
                0.00    0.00       1/1           void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}) [195]
                0.00    0.00       1/7           main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}::~id() [64]
-----------------------------------------------
                0.00    0.00       1/1           void cl::sycl::handler::parallel_for<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::range<1> const&, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1} const&) [194]
[195]    0.0    0.00    0.00       1         void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}) [195]
                0.00    0.00       2/5           void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}::~item_base() [81]
                0.00    0.00       1/1           cl::sycl::program cl::sycl::program::create_program_for_kernel<Totient<int> >(cl::sycl::context) [197]
                0.00    0.00       1/2           cl::sycl::context::~context() [125]
                0.00    0.00       1/1           cl::sycl::kernel cl::sycl::program::get_kernel<Totient<int> >() const [210]
                0.00    0.00       1/1           void cl::sycl::handler::process_functor_arguments<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}>(main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1} const&, cl::sycl::kernel&, cl::sycl::detail::enqueue_device_kernel_command*) [196]
                0.00    0.00       1/1           cl::sycl::detail::nd_range_base::nd_range_base(cl::sycl::detail::index_array, cl::sycl::detail::index_array) [179]
                0.00    0.00       1/5           main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}::id(cl::sycl::id<1> const&) [82]
                0.00    0.00       1/3           void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}::item_base({lambda(cl::sycl::id<1>)#1}::item_base const&) [123]
                0.00    0.00       1/1           std::function<void (cl::sycl::detail::item_base&)>::function<void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda(cl::sycl::detail::item_base&)#1}, void, void>(void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda(cl::sycl::detail::item_base&)#1}) [319]
                0.00    0.00       1/1           std::function<void (cl::sycl::detail::item_base&)>::~function() [320]
                0.00    0.00       1/1           cl::sycl::kernel::~kernel() [193]
                0.00    0.00       1/1           cl::sycl::program::~program() [198]
-----------------------------------------------
                0.00    0.00       1/1           void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}) [195]
[196]    0.0    0.00    0.00       1         void cl::sycl::handler::process_functor_arguments<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}>(main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1} const&, cl::sycl::kernel&, cl::sycl::detail::enqueue_device_kernel_command*) [196]
                0.00    0.00       1/2           cl::sycl::context::~context() [125]
-----------------------------------------------
                0.00    0.00       1/1           void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}) [195]
[197]    0.0    0.00    0.00       1         cl::sycl::program cl::sycl::program::create_program_for_kernel<Totient<int> >(cl::sycl::context) [197]
                0.00    0.00       1/4           cl::sycl::property_list::property_list<, void, void>() [83]
                0.00    0.00       1/4           cl::sycl::property_list::~property_list() [84]
-----------------------------------------------
                0.00    0.00       1/1           void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}) [195]
[198]    0.0    0.00    0.00       1         cl::sycl::program::~program() [198]
                0.00    0.00       1/1           std::shared_ptr<cl::sycl::detail::program>::~shared_ptr() [232]
-----------------------------------------------
                0.00    0.00       1/1           main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}::id(cl::sycl::id<1>&&) [347]
[199]    0.0    0.00    0.00       1         cl::sycl::accessor<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::accessor(cl::sycl::accessor<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>&&) [199]
                0.00    0.00       1/1           cl::sycl::detail::accessor_buffer_interface<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::accessor_buffer_interface(cl::sycl::detail::accessor_buffer_interface<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>&&) [189]
-----------------------------------------------
                0.00    0.00       1/1           cl::sycl::accessor<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0> cl::sycl::buffer<int, 1, cl::sycl::detail::aligned_mem::aligned_allocator>::get_access<(cl::sycl::access::mode)1, (cl::sycl::access::target)1>(cl::sycl::handler&) [167]
[200]    0.0    0.00    0.00       1         cl::sycl::accessor<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::accessor<cl::sycl::detail::aligned_mem::aligned_allocator, int, void>(cl::sycl::buffer<int, 1, cl::sycl::detail::aligned_mem::aligned_allocator>&, cl::sycl::handler&, cl::sycl::property_list const&) [200]
                0.00    0.00       1/1           cl::sycl::buffer<int, 1, cl::sycl::detail::aligned_mem::aligned_allocator>::get_range() const [209]
                0.00    0.00       1/1           cl::sycl::detail::access_range cl::sycl::detail::get_access_range<1, 1>(cl::sycl::range<1> const&) [182]
                0.00    0.00       1/1           _ZN2cl4sycl6detail25accessor_buffer_interfaceIiLi1ELNS0_6access4modeE1ELNS3_6targetE1ELNS3_11placeholderE0EECI2NS1_15accessor_commonIiLi1ELS4_1ELS5_1ELS6_0EEEERNS0_11storage_memERNS0_7handlerENS1_12access_rangeERKNS0_13property_listE [190]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator_traits<std::allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> > >::deallocate(std::allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> >&, std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>*, unsigned long) [292]
[201]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> >::deallocate(std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>*, unsigned long) [201]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator_traits<std::allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> > >::allocate(std::allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> >&, unsigned long) [293]
[202]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> >::allocate(unsigned long, void const*) [202]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> >::max_size() const [211]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator_traits<std::allocator<int> >::deallocate(std::allocator<int>&, int*, unsigned long) [294]
[203]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long) [203]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long) [295]
[204]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) [204]
                0.00    0.00       1/2           __gnu_cxx::new_allocator<int>::max_size() const [129]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<int>::allocator() [218]
[205]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<int>::new_allocator() [205]
-----------------------------------------------
                0.00    0.00       1/1           __gnu_cxx::__atomic_add_dispatch(int*, int) [207]
[206]    0.0    0.00    0.00       1         __gnu_cxx::__atomic_add(int volatile*, int) [206]
-----------------------------------------------
                0.00    0.00       1/1           std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_add_ref_copy() [289]
[207]    0.0    0.00    0.00       1         __gnu_cxx::__atomic_add_dispatch(int*, int) [207]
                0.00    0.00       1/22          __gthread_active_p() [51]
                0.00    0.00       1/1           __gnu_cxx::__atomic_add(int volatile*, int) [206]
-----------------------------------------------
                0.00    0.00       1/1           cl::sycl::access::mode cl::sycl::detail::mode_from_properties<(cl::sycl::access::mode)1>(cl::sycl::property_list const&) [188]
[208]    0.0    0.00    0.00       1         bool cl::sycl::property_list::has_property<cl::sycl::property::no_init_impl>() const [208]
-----------------------------------------------
                0.00    0.00       1/1           cl::sycl::accessor<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::accessor<cl::sycl::detail::aligned_mem::aligned_allocator, int, void>(cl::sycl::buffer<int, 1, cl::sycl::detail::aligned_mem::aligned_allocator>&, cl::sycl::handler&, cl::sycl::property_list const&) [200]
[209]    0.0    0.00    0.00       1         cl::sycl::buffer<int, 1, cl::sycl::detail::aligned_mem::aligned_allocator>::get_range() const [209]
                0.00    0.00       1/30001       cl::sycl::range<1>::range(cl::sycl::detail::index_array const&) [24]
-----------------------------------------------
                0.00    0.00       1/1           void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}) [195]
[210]    0.0    0.00    0.00       1         cl::sycl::kernel cl::sycl::program::get_kernel<Totient<int> >() const [210]
-----------------------------------------------
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> >::allocate(unsigned long, void const*) [202]
[211]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> >::max_size() const [211]
-----------------------------------------------
                0.00    0.00       1/1           std::unique_ptr<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::release() [238]
[212]    0.0    0.00    0.00       1         std::unique_ptr<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::get() const [212]
                0.00    0.00       1/1           std::__uniq_ptr_impl<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::_M_ptr() const [215]
-----------------------------------------------
                0.00    0.00       1/1           cl::sycl::event cl::sycl::detail::command_group::submit_handler<main::{lambda(cl::sycl::handler&)#1}>(main::{lambda(cl::sycl::handler&)#1}, std::shared_ptr<cl::sycl::detail::queue> const&, cl::sycl::detail::standard_handler_tag) [175]
[213]    0.0    0.00    0.00       1         std::unique_ptr<cl::sycl::handler, std::default_delete<cl::sycl::handler> >::operator*() const [213]
                0.00    0.00       1/2           std::unique_ptr<cl::sycl::handler, std::default_delete<cl::sycl::handler> >::get() const [130]
-----------------------------------------------
                0.00    0.00       1/1           std::unique_ptr<cl::sycl::handler, std::default_delete<cl::sycl::handler> >::~unique_ptr() [242]
[214]    0.0    0.00    0.00       1         std::default_delete<cl::sycl::handler>::operator()(cl::sycl::handler*) const [214]
-----------------------------------------------
                0.00    0.00       1/1           std::unique_ptr<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::get() const [212]
[215]    0.0    0.00    0.00       1         std::__uniq_ptr_impl<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::_M_ptr() const [215]
                0.00    0.00       1/1           std::tuple_element<0ul, std::tuple<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > > >::type const& std::get<0ul, cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >(std::tuple<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > > const&) [334]
-----------------------------------------------
                0.00    0.00       1/1           main [12]
[216]    0.0    0.00    0.00       1         std::chrono::duration<long, std::ratio<1l, 1000l> >::count() const [216]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<int, std::allocator<int> >::data() [314]
[217]    0.0    0.00    0.00       1         int* std::vector<int, std::allocator<int> >::_M_data_ptr<int>(int*) const [217]
-----------------------------------------------
                0.00    0.00       1/1           main [12]
[218]    0.0    0.00    0.00       1         std::allocator<int>::allocator() [218]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<int>::new_allocator() [205]
-----------------------------------------------
                0.00    0.00       1/1           std::_Tuple_impl<0ul, cl::sycl::detail::base_allocator*, std::default_delete<cl::sycl::detail::base_allocator> >::_M_head(std::_Tuple_impl<0ul, cl::sycl::detail::base_allocator*, std::default_delete<cl::sycl::detail::base_allocator> >&) [243]
[219]    0.0    0.00    0.00       1         std::_Head_base<0ul, cl::sycl::detail::base_allocator*, false>::_M_head(std::_Head_base<0ul, cl::sycl::detail::base_allocator*, false>&) [219]
-----------------------------------------------
                0.00    0.00       1/1           std::_Tuple_impl<0ul, cl::sycl::detail::base_allocator*, std::default_delete<cl::sycl::detail::base_allocator> >::_Tuple_impl<cl::sycl::detail::base_allocator*&, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >, void>(cl::sycl::detail::base_allocator*&, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >&&) [244]
[220]    0.0    0.00    0.00       1         std::_Head_base<0ul, cl::sycl::detail::base_allocator*, false>::_Head_base<cl::sycl::detail::base_allocator*&>(cl::sycl::detail::base_allocator*&) [220]
                0.00    0.00       1/3           cl::sycl::detail::base_allocator*& std::forward<cl::sycl::detail::base_allocator*&>(std::remove_reference<cl::sycl::detail::base_allocator*&>::type&) [122]
-----------------------------------------------
                0.00    0.00       1/1           std::_Tuple_impl<0ul, cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::_M_head(std::_Tuple_impl<0ul, cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > > const&) [245]
[221]    0.0    0.00    0.00       1         std::_Head_base<0ul, cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, false>::_M_head(std::_Head_base<0ul, cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, false> const&) [221]
-----------------------------------------------
                0.00    0.00       1/1           std::_Tuple_impl<0ul, cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::_Tuple_impl() [246]
[222]    0.0    0.00    0.00       1         std::_Head_base<0ul, cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, false>::_Head_base() [222]
-----------------------------------------------
                0.00    0.00       1/1           std::_Tuple_impl<0ul, cl::sycl::handler*, std::default_delete<cl::sycl::handler> >::_M_head(std::_Tuple_impl<0ul, cl::sycl::handler*, std::default_delete<cl::sycl::handler> >&) [247]
[223]    0.0    0.00    0.00       1         std::_Head_base<0ul, cl::sycl::handler*, false>::_M_head(std::_Head_base<0ul, cl::sycl::handler*, false>&) [223]
-----------------------------------------------
                0.00    0.00       1/1           std::_Tuple_impl<1ul, std::default_delete<cl::sycl::detail::base_allocator> >::_Tuple_impl<std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >(std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >&&) [248]
[224]    0.0    0.00    0.00       1         std::_Head_base<1ul, std::default_delete<cl::sycl::detail::base_allocator>, true>::_Head_base<std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >(std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >&&) [224]
                0.00    0.00       1/6           std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >&& std::forward<std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >(std::remove_reference<std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::type&) [73]
                0.00    0.00       1/1           std::default_delete<cl::sycl::detail::base_allocator>::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>, void>(std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > const&) [280]
-----------------------------------------------
                0.00    0.00       1/1           std::_Tuple_impl<1ul, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::_M_head(std::_Tuple_impl<1ul, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >&) [249]
[225]    0.0    0.00    0.00       1         std::_Head_base<1ul, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >, true>::_M_head(std::_Head_base<1ul, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >, true>&) [225]
-----------------------------------------------
                0.00    0.00       1/1           std::_Tuple_impl<1ul, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::_Tuple_impl() [250]
[226]    0.0    0.00    0.00       1         std::_Head_base<1ul, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >, true>::_Head_base() [226]
-----------------------------------------------
                0.00    0.00       1/1           std::_Tuple_impl<1ul, std::default_delete<cl::sycl::handler> >::_M_head(std::_Tuple_impl<1ul, std::default_delete<cl::sycl::handler> >&) [251]
[227]    0.0    0.00    0.00       1         std::_Head_base<1ul, std::default_delete<cl::sycl::handler>, true>::_M_head(std::_Head_base<1ul, std::default_delete<cl::sycl::handler>, true>&) [227]
-----------------------------------------------
                0.00    0.00       1/1           std::shared_ptr<cl::sycl::detail::queue>::shared_ptr(decltype(nullptr)) [229]
[228]    0.0    0.00    0.00       1         std::shared_ptr<cl::sycl::detail::queue>::shared_ptr() [228]
                0.00    0.00       1/1           std::__shared_ptr<cl::sycl::detail::queue, (__gnu_cxx::_Lock_policy)2>::__shared_ptr() [262]
-----------------------------------------------
                0.00    0.00       1/1           cl::sycl::event cl::sycl::queue::submit<main::{lambda(cl::sycl::handler&)#1}>(main::{lambda(cl::sycl::handler&)#1}) [163]
[229]    0.0    0.00    0.00       1         std::shared_ptr<cl::sycl::detail::queue>::shared_ptr(decltype(nullptr)) [229]
                0.00    0.00       1/1           std::shared_ptr<cl::sycl::detail::queue>::shared_ptr() [228]
-----------------------------------------------
                0.00    0.00       1/1           cl::sycl::detail::command_group::command_group(std::shared_ptr<cl::sycl::detail::queue> const&) [176]
[230]    0.0    0.00    0.00       1         std::shared_ptr<cl::sycl::detail::queue>::shared_ptr(std::shared_ptr<cl::sycl::detail::queue> const&) [230]
                0.00    0.00       1/1           std::__shared_ptr<cl::sycl::detail::queue, (__gnu_cxx::_Lock_policy)2>::__shared_ptr(std::__shared_ptr<cl::sycl::detail::queue, (__gnu_cxx::_Lock_policy)2> const&) [261]
-----------------------------------------------
                0.00    0.00       1/1           cl::sycl::kernel::~kernel() [193]
[231]    0.0    0.00    0.00       1         std::shared_ptr<cl::sycl::detail::kernel>::~shared_ptr() [231]
                0.00    0.00       1/1           std::__shared_ptr<cl::sycl::detail::kernel, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() [263]
-----------------------------------------------
                0.00    0.00       1/1           cl::sycl::program::~program() [198]
[232]    0.0    0.00    0.00       1         std::shared_ptr<cl::sycl::detail::program>::~shared_ptr() [232]
                0.00    0.00       1/1           std::__shared_ptr<cl::sycl::detail::program, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() [264]
-----------------------------------------------
                0.00    0.00       1/1           cl::sycl::buffer<int, 1, cl::sycl::detail::aligned_mem::aligned_allocator>::buffer(int*, cl::sycl::range<1> const&, cl::sycl::property_list const&) [168]
[233]    0.0    0.00    0.00       1         std::shared_ptr<void>::shared_ptr<void, cl::sycl::detail::NullDeleter, void>(void*, cl::sycl::detail::NullDeleter) [233]
                0.00    0.00       1/1           std::__shared_ptr<void, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<void, cl::sycl::detail::NullDeleter, void>(void*, cl::sycl::detail::NullDeleter) [266]
                0.00    0.00       1/7           std::remove_reference<cl::sycl::detail::NullDeleter&>::type&& std::move<cl::sycl::detail::NullDeleter&>(cl::sycl::detail::NullDeleter&) [63]
-----------------------------------------------
                0.00    0.00       1/1           cl::sycl::buffer<int, 1, cl::sycl::detail::aligned_mem::aligned_allocator>::buffer(int*, cl::sycl::range<1> const&, cl::sycl::property_list const&) [168]
[234]    0.0    0.00    0.00       1         std::shared_ptr<void>::~shared_ptr() [234]
                0.00    0.00       1/1           std::__shared_ptr<void, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() [267]
-----------------------------------------------
                0.00    0.00       1/1           cl::sycl::detail::make_base_allocator<int, cl::sycl::detail::aligned_mem::aligned_allocator>::get(cl::sycl::detail::aligned_mem::aligned_allocator, unsigned long) [187]
[235]    0.0    0.00    0.00       1         std::unique_ptr<cl::sycl::detail::base_allocator, std::default_delete<cl::sycl::detail::base_allocator> >::unique_ptr<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >, void>(std::unique_ptr<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >&&) [235]
                0.00    0.00       1/6           std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >&& std::forward<std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >(std::remove_reference<std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::type&) [73]
                0.00    0.00       1/1           std::unique_ptr<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::get_deleter() [237]
                0.00    0.00       1/1           std::unique_ptr<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::release() [238]
                0.00    0.00       1/1           std::__uniq_ptr_impl<cl::sycl::detail::base_allocator, std::default_delete<cl::sycl::detail::base_allocator> >::__uniq_ptr_impl<std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >(cl::sycl::detail::base_allocator*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >&&) [284]
-----------------------------------------------
                0.00    0.00       1/1           cl::sycl::buffer<int, 1, cl::sycl::detail::aligned_mem::aligned_allocator>::buffer(int*, cl::sycl::range<1> const&, cl::sycl::property_list const&) [168]
[236]    0.0    0.00    0.00       1         std::unique_ptr<cl::sycl::detail::base_allocator, std::default_delete<cl::sycl::detail::base_allocator> >::~unique_ptr() [236]
                0.00    0.00       1/1           std::__uniq_ptr_impl<cl::sycl::detail::base_allocator, std::default_delete<cl::sycl::detail::base_allocator> >::_M_ptr() [283]
-----------------------------------------------
                0.00    0.00       1/1           std::unique_ptr<cl::sycl::detail::base_allocator, std::default_delete<cl::sycl::detail::base_allocator> >::unique_ptr<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >, void>(std::unique_ptr<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >&&) [235]
[237]    0.0    0.00    0.00       1         std::unique_ptr<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::get_deleter() [237]
                0.00    0.00       1/1           std::__uniq_ptr_impl<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::_M_deleter() [285]
-----------------------------------------------
                0.00    0.00       1/1           std::unique_ptr<cl::sycl::detail::base_allocator, std::default_delete<cl::sycl::detail::base_allocator> >::unique_ptr<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >, void>(std::unique_ptr<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >&&) [235]
[238]    0.0    0.00    0.00       1         std::unique_ptr<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::release() [238]
                0.00    0.00       1/1           std::unique_ptr<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::get() const [212]
                0.00    0.00       1/3           std::__uniq_ptr_impl<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::_M_ptr() [118]
-----------------------------------------------
                0.00    0.00       1/1           cl::sycl::detail::make_base_allocator<int, cl::sycl::detail::aligned_mem::aligned_allocator>::get(cl::sycl::detail::aligned_mem::aligned_allocator, unsigned long) [187]
[239]    0.0    0.00    0.00       1         std::unique_ptr<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::unique_ptr<std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >, void>(cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*) [239]
                0.00    0.00       1/1           std::__uniq_ptr_impl<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::__uniq_ptr_impl(cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*) [286]
-----------------------------------------------
                0.00    0.00       1/1           cl::sycl::detail::make_base_allocator<int, cl::sycl::detail::aligned_mem::aligned_allocator>::get(cl::sycl::detail::aligned_mem::aligned_allocator, unsigned long) [187]
[240]    0.0    0.00    0.00       1         std::unique_ptr<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::~unique_ptr() [240]
                0.00    0.00       1/3           std::__uniq_ptr_impl<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::_M_ptr() [118]
-----------------------------------------------
                0.00    0.00       1/1           std::unique_ptr<cl::sycl::handler, std::default_delete<cl::sycl::handler> >::~unique_ptr() [242]
[241]    0.0    0.00    0.00       1         std::unique_ptr<cl::sycl::handler, std::default_delete<cl::sycl::handler> >::get_deleter() [241]
                0.00    0.00       1/1           std::__uniq_ptr_impl<cl::sycl::handler, std::default_delete<cl::sycl::handler> >::_M_deleter() [287]
-----------------------------------------------
                0.00    0.00       1/1           cl::sycl::event cl::sycl::detail::command_group::submit_handler<main::{lambda(cl::sycl::handler&)#1}>(main::{lambda(cl::sycl::handler&)#1}, std::shared_ptr<cl::sycl::detail::queue> const&, cl::sycl::detail::standard_handler_tag) [175]
[242]    0.0    0.00    0.00       1         std::unique_ptr<cl::sycl::handler, std::default_delete<cl::sycl::handler> >::~unique_ptr() [242]
                0.00    0.00       1/1           std::__uniq_ptr_impl<cl::sycl::handler, std::default_delete<cl::sycl::handler> >::_M_ptr() [288]
                0.00    0.00       1/1           std::remove_reference<cl::sycl::handler*&>::type&& std::move<cl::sycl::handler*&>(cl::sycl::handler*&) [339]
                0.00    0.00       1/1           std::unique_ptr<cl::sycl::handler, std::default_delete<cl::sycl::handler> >::get_deleter() [241]
                0.00    0.00       1/1           std::default_delete<cl::sycl::handler>::operator()(cl::sycl::handler*) const [214]
-----------------------------------------------
                0.00    0.00       1/1           cl::sycl::detail::base_allocator*& std::__get_helper<0ul, cl::sycl::detail::base_allocator*, std::default_delete<cl::sycl::detail::base_allocator> >(std::_Tuple_impl<0ul, cl::sycl::detail::base_allocator*, std::default_delete<cl::sycl::detail::base_allocator> >&) [322]
[243]    0.0    0.00    0.00       1         std::_Tuple_impl<0ul, cl::sycl::detail::base_allocator*, std::default_delete<cl::sycl::detail::base_allocator> >::_M_head(std::_Tuple_impl<0ul, cl::sycl::detail::base_allocator*, std::default_delete<cl::sycl::detail::base_allocator> >&) [243]
                0.00    0.00       1/1           std::_Head_base<0ul, cl::sycl::detail::base_allocator*, false>::_M_head(std::_Head_base<0ul, cl::sycl::detail::base_allocator*, false>&) [219]
-----------------------------------------------
                0.00    0.00       1/1           std::tuple<cl::sycl::detail::base_allocator*, std::default_delete<cl::sycl::detail::base_allocator> >::tuple<cl::sycl::detail::base_allocator*&, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >, true>(cl::sycl::detail::base_allocator*&, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >&&) [303]
[244]    0.0    0.00    0.00       1         std::_Tuple_impl<0ul, cl::sycl::detail::base_allocator*, std::default_delete<cl::sycl::detail::base_allocator> >::_Tuple_impl<cl::sycl::detail::base_allocator*&, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >, void>(cl::sycl::detail::base_allocator*&, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >&&) [244]
                0.00    0.00       1/6           std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >&& std::forward<std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >(std::remove_reference<std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::type&) [73]
                0.00    0.00       1/1           std::_Tuple_impl<1ul, std::default_delete<cl::sycl::detail::base_allocator> >::_Tuple_impl<std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >(std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >&&) [248]
                0.00    0.00       1/3           cl::sycl::detail::base_allocator*& std::forward<cl::sycl::detail::base_allocator*&>(std::remove_reference<cl::sycl::detail::base_allocator*&>::type&) [122]
                0.00    0.00       1/1           std::_Head_base<0ul, cl::sycl::detail::base_allocator*, false>::_Head_base<cl::sycl::detail::base_allocator*&>(cl::sycl::detail::base_allocator*&) [220]
-----------------------------------------------
                0.00    0.00       1/1           cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>* const& std::__get_helper<0ul, cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >(std::_Tuple_impl<0ul, cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > > const&) [323]
[245]    0.0    0.00    0.00       1         std::_Tuple_impl<0ul, cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::_M_head(std::_Tuple_impl<0ul, cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > > const&) [245]
                0.00    0.00       1/1           std::_Head_base<0ul, cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, false>::_M_head(std::_Head_base<0ul, cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, false> const&) [221]
-----------------------------------------------
                0.00    0.00       1/1           std::tuple<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::tuple<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >, true>() [304]
[246]    0.0    0.00    0.00       1         std::_Tuple_impl<0ul, cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::_Tuple_impl() [246]
                0.00    0.00       1/1           std::_Tuple_impl<1ul, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::_Tuple_impl() [250]
                0.00    0.00       1/1           std::_Head_base<0ul, cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, false>::_Head_base() [222]
-----------------------------------------------
                0.00    0.00       1/1           cl::sycl::handler*& std::__get_helper<0ul, cl::sycl::handler*, std::default_delete<cl::sycl::handler> >(std::_Tuple_impl<0ul, cl::sycl::handler*, std::default_delete<cl::sycl::handler> >&) [324]
[247]    0.0    0.00    0.00       1         std::_Tuple_impl<0ul, cl::sycl::handler*, std::default_delete<cl::sycl::handler> >::_M_head(std::_Tuple_impl<0ul, cl::sycl::handler*, std::default_delete<cl::sycl::handler> >&) [247]
                0.00    0.00       1/1           std::_Head_base<0ul, cl::sycl::handler*, false>::_M_head(std::_Head_base<0ul, cl::sycl::handler*, false>&) [223]
-----------------------------------------------
                0.00    0.00       1/1           std::_Tuple_impl<0ul, cl::sycl::detail::base_allocator*, std::default_delete<cl::sycl::detail::base_allocator> >::_Tuple_impl<cl::sycl::detail::base_allocator*&, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >, void>(cl::sycl::detail::base_allocator*&, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >&&) [244]
[248]    0.0    0.00    0.00       1         std::_Tuple_impl<1ul, std::default_delete<cl::sycl::detail::base_allocator> >::_Tuple_impl<std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >(std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >&&) [248]
                0.00    0.00       1/6           std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >&& std::forward<std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >(std::remove_reference<std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::type&) [73]
                0.00    0.00       1/1           std::_Head_base<1ul, std::default_delete<cl::sycl::detail::base_allocator>, true>::_Head_base<std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >(std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >&&) [224]
-----------------------------------------------
                0.00    0.00       1/1           std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >& std::__get_helper<1ul, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >>(std::_Tuple_impl<1ul, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >>&) [325]
[249]    0.0    0.00    0.00       1         std::_Tuple_impl<1ul, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::_M_head(std::_Tuple_impl<1ul, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >&) [249]
                0.00    0.00       1/1           std::_Head_base<1ul, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >, true>::_M_head(std::_Head_base<1ul, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >, true>&) [225]
-----------------------------------------------
                0.00    0.00       1/1           std::_Tuple_impl<0ul, cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::_Tuple_impl() [246]
[250]    0.0    0.00    0.00       1         std::_Tuple_impl<1ul, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::_Tuple_impl() [250]
                0.00    0.00       1/1           std::_Head_base<1ul, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >, true>::_Head_base() [226]
-----------------------------------------------
                0.00    0.00       1/1           std::default_delete<cl::sycl::handler>& std::__get_helper<1ul, std::default_delete<cl::sycl::handler>>(std::_Tuple_impl<1ul, std::default_delete<cl::sycl::handler>>&) [326]
[251]    0.0    0.00    0.00       1         std::_Tuple_impl<1ul, std::default_delete<cl::sycl::handler> >::_M_head(std::_Tuple_impl<1ul, std::default_delete<cl::sycl::handler> >&) [251]
                0.00    0.00       1/1           std::_Head_base<1ul, std::default_delete<cl::sycl::handler>, true>::_M_head(std::_Head_base<1ul, std::default_delete<cl::sycl::handler>, true>&) [227]
-----------------------------------------------
                0.00    0.00       1/1           void std::_Destroy<int*>(int*, int*) [343]
[252]    0.0    0.00    0.00       1         void std::_Destroy_aux<true>::__destroy<int*>(int*, int*) [252]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long) [257]
[253]    0.0    0.00    0.00       1         std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) [253]
                0.00    0.00       1/1           std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long) [295]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&) [259]
[254]    0.0    0.00    0.00       1         std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&) [254]
                0.00    0.00       1/2           std::allocator<int>::allocator(std::allocator<int> const&) [136]
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data() [258]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [260]
[255]    0.0    0.00    0.00       1         std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl() [255]
                0.00    0.00       1/3           std::allocator<int>::~allocator() [114]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [260]
[256]    0.0    0.00    0.00       1         std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long) [256]
                0.00    0.00       1/1           std::allocator_traits<std::allocator<int> >::deallocate(std::allocator<int>&, int*, unsigned long) [294]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&) [259]
[257]    0.0    0.00    0.00       1         std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long) [257]
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) [253]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&) [254]
[258]    0.0    0.00    0.00       1         std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data() [258]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<int, std::allocator<int> >::vector(unsigned long, std::allocator<int> const&) [315]
[259]    0.0    0.00    0.00       1         std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&) [259]
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&) [254]
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long) [257]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<int, std::allocator<int> >::~vector() [316]
[260]    0.0    0.00    0.00       1         std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [260]
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl() [255]
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long) [256]
-----------------------------------------------
                0.00    0.00       1/1           std::shared_ptr<cl::sycl::detail::queue>::shared_ptr(std::shared_ptr<cl::sycl::detail::queue> const&) [230]
[261]    0.0    0.00    0.00       1         std::__shared_ptr<cl::sycl::detail::queue, (__gnu_cxx::_Lock_policy)2>::__shared_ptr(std::__shared_ptr<cl::sycl::detail::queue, (__gnu_cxx::_Lock_policy)2> const&) [261]
                0.00    0.00       1/1           std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count(std::__shared_count<(__gnu_cxx::_Lock_policy)2> const&) [276]
-----------------------------------------------
                0.00    0.00       1/1           std::shared_ptr<cl::sycl::detail::queue>::shared_ptr() [228]
[262]    0.0    0.00    0.00       1         std::__shared_ptr<cl::sycl::detail::queue, (__gnu_cxx::_Lock_policy)2>::__shared_ptr() [262]
                0.00    0.00       1/1           std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count() [278]
-----------------------------------------------
                0.00    0.00       1/1           std::shared_ptr<cl::sycl::detail::kernel>::~shared_ptr() [231]
[263]    0.0    0.00    0.00       1         std::__shared_ptr<cl::sycl::detail::kernel, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() [263]
                0.00    0.00       1/19          std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count() [54]
-----------------------------------------------
                0.00    0.00       1/1           std::shared_ptr<cl::sycl::detail::program>::~shared_ptr() [232]
[264]    0.0    0.00    0.00       1         std::__shared_ptr<cl::sycl::detail::program, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() [264]
                0.00    0.00       1/19          std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count() [54]
-----------------------------------------------
                0.00    0.00       1/1           std::__shared_ptr<void, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<void, cl::sycl::detail::NullDeleter, void>(void*, cl::sycl::detail::NullDeleter) [266]
[265]    0.0    0.00    0.00       1         std::enable_if<!std::__shared_ptr<void, (__gnu_cxx::_Lock_policy)2>::__has_esft_base<void, void>::value, void>::type std::__shared_ptr<void, (__gnu_cxx::_Lock_policy)2>::_M_enable_shared_from_this_with<void, void>(void*) [265]
-----------------------------------------------
                0.00    0.00       1/1           std::shared_ptr<void>::shared_ptr<void, cl::sycl::detail::NullDeleter, void>(void*, cl::sycl::detail::NullDeleter) [233]
[266]    0.0    0.00    0.00       1         std::__shared_ptr<void, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<void, cl::sycl::detail::NullDeleter, void>(void*, cl::sycl::detail::NullDeleter) [266]
                0.00    0.00       1/7           std::remove_reference<cl::sycl::detail::NullDeleter&>::type&& std::move<cl::sycl::detail::NullDeleter&>(cl::sycl::detail::NullDeleter&) [63]
                0.00    0.00       1/1           std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<void*, cl::sycl::detail::NullDeleter, void>(void*, cl::sycl::detail::NullDeleter) [279]
                0.00    0.00       1/1           std::enable_if<!std::__shared_ptr<void, (__gnu_cxx::_Lock_policy)2>::__has_esft_base<void, void>::value, void>::type std::__shared_ptr<void, (__gnu_cxx::_Lock_policy)2>::_M_enable_shared_from_this_with<void, void>(void*) [265]
-----------------------------------------------
                0.00    0.00       1/1           std::shared_ptr<void>::~shared_ptr() [234]
[267]    0.0    0.00    0.00       1         std::__shared_ptr<void, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() [267]
                0.00    0.00       1/19          std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count() [54]
-----------------------------------------------
                0.00    0.00       1/1           std::_Function_base::~_Function_base() [146]
[268]    0.0    0.00    0.00       1         std::_Function_base::_Base_manager<void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}>::_M_manager(std::_Any_data&, {lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1} const&, std::_Manager_operation) [268]
                0.00    0.00       3/3           std::_Function_base::_Base_manager<void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) [117]
                0.00    0.00       2/2           std::_Function_base::_Base_manager<void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}>::_M_clone(std::_Any_data&, {lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1} const&, std::integral_constant<bool, false>) [144]
-----------------------------------------------
                0.00    0.00       1/1           std::function<void (cl::sycl::detail::item_base&)>::function<void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda(cl::sycl::detail::item_base&)#1}, void, void>(void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda(cl::sycl::detail::item_base&)#1}) [319]
[269]    0.0    0.00    0.00       1         std::_Function_base::_Base_manager<void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}>::_M_init_functor(std::_Any_data&, {lambda(cl::sycl::id<1>)#1}::item_base&&) [269]
                0.00    0.00       1/3           std::remove_reference<void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}&>::type&& std::move<void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}&>(void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}&&) [121]
                0.00    0.00       1/1           std::_Function_base::_Base_manager<void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}>::_M_init_functor(std::_Any_data&, {lambda(cl::sycl::id<1>)#1}::item_base&&, std::integral_constant<bool, false>) [270]
-----------------------------------------------
                0.00    0.00       1/1           std::_Function_base::_Base_manager<void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}>::_M_init_functor(std::_Any_data&, {lambda(cl::sycl::id<1>)#1}::item_base&&) [269]
[270]    0.0    0.00    0.00       1         std::_Function_base::_Base_manager<void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}>::_M_init_functor(std::_Any_data&, {lambda(cl::sycl::id<1>)#1}::item_base&&, std::integral_constant<bool, false>) [270]
                0.00    0.00       1/3           std::remove_reference<void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}&>::type&& std::move<void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}&>(void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}&&) [121]
                0.00    0.00       1/1           void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}::item_base({lambda(cl::sycl::id<1>)#1}::item_base&&) [346]
                0.00    0.00       1/6           void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}*& std::_Any_data::_M_access<void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}*>() [71]
-----------------------------------------------
                0.00    0.00       1/1           std::function<void (cl::sycl::detail::item_base&)>::function<void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda(cl::sycl::detail::item_base&)#1}, void, void>(void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda(cl::sycl::detail::item_base&)#1}) [319]
[271]    0.0    0.00    0.00       1         bool std::_Function_base::_Base_manager<void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}>::_M_not_empty_function<{lambda(cl::sycl::id<1>)#1}::item_base>({lambda(cl::sycl::id<1>)#1}::item_base const&) [271]
-----------------------------------------------
                0.00    0.00       1/1           std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_Impl::_M_del() [297]
[272]    0.0    0.00    0.00       1         std::_Sp_ebo_helper<0, cl::sycl::detail::NullDeleter, true>::_S_get(std::_Sp_ebo_helper<0, cl::sycl::detail::NullDeleter, true>&) [272]
-----------------------------------------------
                0.00    0.00       1/1           std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_Impl::_Impl(void*, cl::sycl::detail::NullDeleter, std::allocator<void> const&) [299]
[273]    0.0    0.00    0.00       1         std::_Sp_ebo_helper<0, cl::sycl::detail::NullDeleter, true>::_Sp_ebo_helper(cl::sycl::detail::NullDeleter&&) [273]
                0.00    0.00       1/7           std::remove_reference<cl::sycl::detail::NullDeleter&>::type&& std::move<cl::sycl::detail::NullDeleter&>(cl::sycl::detail::NullDeleter&) [63]
-----------------------------------------------
                0.00    0.00       1/1           std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_Impl::_M_alloc() [298]
[274]    0.0    0.00    0.00       1         std::_Sp_ebo_helper<1, std::allocator<void>, true>::_S_get(std::_Sp_ebo_helper<1, std::allocator<void>, true>&) [274]
-----------------------------------------------
                0.00    0.00       1/1           std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_Impl::_Impl(void*, cl::sycl::detail::NullDeleter, std::allocator<void> const&) [299]
[275]    0.0    0.00    0.00       1         std::_Sp_ebo_helper<1, std::allocator<void>, true>::_Sp_ebo_helper(std::allocator<void> const&) [275]
-----------------------------------------------
                0.00    0.00       1/1           std::__shared_ptr<cl::sycl::detail::queue, (__gnu_cxx::_Lock_policy)2>::__shared_ptr(std::__shared_ptr<cl::sycl::detail::queue, (__gnu_cxx::_Lock_policy)2> const&) [261]
[276]    0.0    0.00    0.00       1         std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count(std::__shared_count<(__gnu_cxx::_Lock_policy)2> const&) [276]
                0.00    0.00       1/1           std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_add_ref_copy() [289]
-----------------------------------------------
                0.00    0.00       1/1           std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<void*, cl::sycl::detail::NullDeleter, void>(void*, cl::sycl::detail::NullDeleter) [279]
[277]    0.0    0.00    0.00       1         std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, void>(void*, cl::sycl::detail::NullDeleter, std::allocator<void>) [277]
                0.00    0.00       1/2           std::allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> >::allocator<void>(std::allocator<void> const&) [134]
                0.00    0.00       1/1           std::__allocated_ptr<std::allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> > > std::__allocate_guarded<std::allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> >&) [330]
                0.00    0.00       1/1           std::__allocated_ptr<std::allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> > >::get() [281]
                0.00    0.00       1/7           std::remove_reference<cl::sycl::detail::NullDeleter&>::type&& std::move<cl::sycl::detail::NullDeleter&>(cl::sycl::detail::NullDeleter&) [63]
                0.00    0.00       1/1           std::remove_reference<std::allocator<void>&>::type&& std::move<std::allocator<void>&>(std::allocator<void>&) [340]
                0.00    0.00       1/1           operator new(unsigned long, void*) [348]
                0.00    0.00       1/1           std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_deleter(void*, cl::sycl::detail::NullDeleter, std::allocator<void> const&) [300]
                0.00    0.00       1/1           std::__allocated_ptr<std::allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> > >::operator=(decltype(nullptr)) [282]
                0.00    0.00       1/2           std::allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> >::~allocator() [135]
                0.00    0.00       1/2           std::__allocated_ptr<std::allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> > >::~__allocated_ptr() [148]
-----------------------------------------------
                0.00    0.00       1/1           std::__shared_ptr<cl::sycl::detail::queue, (__gnu_cxx::_Lock_policy)2>::__shared_ptr() [262]
[278]    0.0    0.00    0.00       1         std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count() [278]
-----------------------------------------------
                0.00    0.00       1/1           std::__shared_ptr<void, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<void, cl::sycl::detail::NullDeleter, void>(void*, cl::sycl::detail::NullDeleter) [266]
[279]    0.0    0.00    0.00       1         std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<void*, cl::sycl::detail::NullDeleter, void>(void*, cl::sycl::detail::NullDeleter) [279]
                0.00    0.00       1/7           std::remove_reference<cl::sycl::detail::NullDeleter&>::type&& std::move<cl::sycl::detail::NullDeleter&>(cl::sycl::detail::NullDeleter&) [63]
                0.00    0.00       1/1           std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, void>(void*, cl::sycl::detail::NullDeleter, std::allocator<void>) [277]
-----------------------------------------------
                0.00    0.00       1/1           std::_Head_base<1ul, std::default_delete<cl::sycl::detail::base_allocator>, true>::_Head_base<std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >(std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >&&) [224]
[280]    0.0    0.00    0.00       1         std::default_delete<cl::sycl::detail::base_allocator>::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>, void>(std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > const&) [280]
-----------------------------------------------
                0.00    0.00       1/1           std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, void>(void*, cl::sycl::detail::NullDeleter, std::allocator<void>) [277]
[281]    0.0    0.00    0.00       1         std::__allocated_ptr<std::allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> > >::get() [281]
                0.00    0.00       1/1           std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>* std::__to_address<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> >(std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>*) [329]
-----------------------------------------------
                0.00    0.00       1/1           std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, void>(void*, cl::sycl::detail::NullDeleter, std::allocator<void>) [277]
[282]    0.0    0.00    0.00       1         std::__allocated_ptr<std::allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> > >::operator=(decltype(nullptr)) [282]
-----------------------------------------------
                0.00    0.00       1/1           std::unique_ptr<cl::sycl::detail::base_allocator, std::default_delete<cl::sycl::detail::base_allocator> >::~unique_ptr() [236]
[283]    0.0    0.00    0.00       1         std::__uniq_ptr_impl<cl::sycl::detail::base_allocator, std::default_delete<cl::sycl::detail::base_allocator> >::_M_ptr() [283]
                0.00    0.00       1/1           std::tuple_element<0ul, std::tuple<cl::sycl::detail::base_allocator*, std::default_delete<cl::sycl::detail::base_allocator> > >::type& std::get<0ul, cl::sycl::detail::base_allocator*, std::default_delete<cl::sycl::detail::base_allocator> >(std::tuple<cl::sycl::detail::base_allocator*, std::default_delete<cl::sycl::detail::base_allocator> >&) [333]
-----------------------------------------------
                0.00    0.00       1/1           std::unique_ptr<cl::sycl::detail::base_allocator, std::default_delete<cl::sycl::detail::base_allocator> >::unique_ptr<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >, void>(std::unique_ptr<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >&&) [235]
[284]    0.0    0.00    0.00       1         std::__uniq_ptr_impl<cl::sycl::detail::base_allocator, std::default_delete<cl::sycl::detail::base_allocator> >::__uniq_ptr_impl<std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >(cl::sycl::detail::base_allocator*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >&&) [284]
                0.00    0.00       1/6           std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >&& std::forward<std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >(std::remove_reference<std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::type&) [73]
                0.00    0.00       1/1           std::tuple<cl::sycl::detail::base_allocator*, std::default_delete<cl::sycl::detail::base_allocator> >::tuple<cl::sycl::detail::base_allocator*&, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >, true>(cl::sycl::detail::base_allocator*&, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >&&) [303]
-----------------------------------------------
                0.00    0.00       1/1           std::unique_ptr<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::get_deleter() [237]
[285]    0.0    0.00    0.00       1         std::__uniq_ptr_impl<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::_M_deleter() [285]
                0.00    0.00       1/1           std::tuple_element<1ul, std::tuple<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > > >::type& std::get<1ul, cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >(std::tuple<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >&) [336]
-----------------------------------------------
                0.00    0.00       1/1           std::unique_ptr<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::unique_ptr<std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >, void>(cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*) [239]
[286]    0.0    0.00    0.00       1         std::__uniq_ptr_impl<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::__uniq_ptr_impl(cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*) [286]
                0.00    0.00       1/1           std::tuple<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::tuple<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >, true>() [304]
                0.00    0.00       1/3           std::__uniq_ptr_impl<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::_M_ptr() [118]
-----------------------------------------------
                0.00    0.00       1/1           std::unique_ptr<cl::sycl::handler, std::default_delete<cl::sycl::handler> >::get_deleter() [241]
[287]    0.0    0.00    0.00       1         std::__uniq_ptr_impl<cl::sycl::handler, std::default_delete<cl::sycl::handler> >::_M_deleter() [287]
                0.00    0.00       1/1           std::tuple_element<1ul, std::tuple<cl::sycl::handler*, std::default_delete<cl::sycl::handler> > >::type& std::get<1ul, cl::sycl::handler*, std::default_delete<cl::sycl::handler> >(std::tuple<cl::sycl::handler*, std::default_delete<cl::sycl::handler> >&) [337]
-----------------------------------------------
                0.00    0.00       1/1           std::unique_ptr<cl::sycl::handler, std::default_delete<cl::sycl::handler> >::~unique_ptr() [242]
[288]    0.0    0.00    0.00       1         std::__uniq_ptr_impl<cl::sycl::handler, std::default_delete<cl::sycl::handler> >::_M_ptr() [288]
                0.00    0.00       1/1           std::tuple_element<0ul, std::tuple<cl::sycl::handler*, std::default_delete<cl::sycl::handler> > >::type& std::get<0ul, cl::sycl::handler*, std::default_delete<cl::sycl::handler> >(std::tuple<cl::sycl::handler*, std::default_delete<cl::sycl::handler> >&) [335]
-----------------------------------------------
                0.00    0.00       1/1           std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count(std::__shared_count<(__gnu_cxx::_Lock_policy)2> const&) [276]
[289]    0.0    0.00    0.00       1         std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_add_ref_copy() [289]
                0.00    0.00       1/1           __gnu_cxx::__atomic_add_dispatch(int*, int) [207]
-----------------------------------------------
                0.00    0.00       1/1           std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_deleter(void*, cl::sycl::detail::NullDeleter, std::allocator<void> const&) [300]
[290]    0.0    0.00    0.00       1         std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_Sp_counted_base() [290]
-----------------------------------------------
                0.00    0.00       1/1           std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_deleter() [301]
[291]    0.0    0.00    0.00       1         std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::~_Sp_counted_base() [291]
-----------------------------------------------
                0.00    0.00       1/1           std::__allocated_ptr<std::allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> > >::~__allocated_ptr() [148]
[292]    0.0    0.00    0.00       1         std::allocator_traits<std::allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> > >::deallocate(std::allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> >&, std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>*, unsigned long) [292]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> >::deallocate(std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>*, unsigned long) [201]
-----------------------------------------------
                0.00    0.00       1/1           std::__allocated_ptr<std::allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> > > std::__allocate_guarded<std::allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> >&) [330]
[293]    0.0    0.00    0.00       1         std::allocator_traits<std::allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> > >::allocate(std::allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> >&, unsigned long) [293]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> >::allocate(unsigned long, void const*) [202]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long) [256]
[294]    0.0    0.00    0.00       1         std::allocator_traits<std::allocator<int> >::deallocate(std::allocator<int>&, int*, unsigned long) [294]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long) [203]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) [253]
[295]    0.0    0.00    0.00       1         std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long) [295]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) [204]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<int, std::allocator<int> >::_S_max_size(std::allocator<int> const&) [311]
[296]    0.0    0.00    0.00       1         std::allocator_traits<std::allocator<int> >::max_size(std::allocator<int> const&) [296]
                0.00    0.00       1/2           __gnu_cxx::new_allocator<int>::max_size() const [129]
-----------------------------------------------
                0.00    0.00       1/1           std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_dispose() [630]
[297]    0.0    0.00    0.00       1         std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_Impl::_M_del() [297]
                0.00    0.00       1/1           std::_Sp_ebo_helper<0, cl::sycl::detail::NullDeleter, true>::_S_get(std::_Sp_ebo_helper<0, cl::sycl::detail::NullDeleter, true>&) [272]
-----------------------------------------------
                0.00    0.00       1/1           std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [629]
[298]    0.0    0.00    0.00       1         std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_Impl::_M_alloc() [298]
                0.00    0.00       1/1           std::_Sp_ebo_helper<1, std::allocator<void>, true>::_S_get(std::_Sp_ebo_helper<1, std::allocator<void>, true>&) [274]
-----------------------------------------------
                0.00    0.00       1/1           std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_deleter(void*, cl::sycl::detail::NullDeleter, std::allocator<void> const&) [300]
[299]    0.0    0.00    0.00       1         std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_Impl::_Impl(void*, cl::sycl::detail::NullDeleter, std::allocator<void> const&) [299]
                0.00    0.00       1/7           std::remove_reference<cl::sycl::detail::NullDeleter&>::type&& std::move<cl::sycl::detail::NullDeleter&>(cl::sycl::detail::NullDeleter&) [63]
                0.00    0.00       1/1           std::_Sp_ebo_helper<0, cl::sycl::detail::NullDeleter, true>::_Sp_ebo_helper(cl::sycl::detail::NullDeleter&&) [273]
                0.00    0.00       1/1           std::_Sp_ebo_helper<1, std::allocator<void>, true>::_Sp_ebo_helper(std::allocator<void> const&) [275]
-----------------------------------------------
                0.00    0.00       1/1           std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, void>(void*, cl::sycl::detail::NullDeleter, std::allocator<void>) [277]
[300]    0.0    0.00    0.00       1         std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_deleter(void*, cl::sycl::detail::NullDeleter, std::allocator<void> const&) [300]
                0.00    0.00       1/1           std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_Sp_counted_base() [290]
                0.00    0.00       1/7           std::remove_reference<cl::sycl::detail::NullDeleter&>::type&& std::move<cl::sycl::detail::NullDeleter&>(cl::sycl::detail::NullDeleter&) [63]
                0.00    0.00       1/1           std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_Impl::_Impl(void*, cl::sycl::detail::NullDeleter, std::allocator<void> const&) [299]
-----------------------------------------------
                0.00    0.00       1/1           std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [629]
[301]    0.0    0.00    0.00       1         std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_deleter() [301]
                0.00    0.00       1/1           std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::~_Sp_counted_base() [291]
-----------------------------------------------
                0.00    0.00       1/1           int* std::__uninitialized_default_n<int*, unsigned long>(int*, unsigned long) [331]
[302]    0.0    0.00    0.00       1         int* std::__uninitialized_default_n_1<true>::__uninit_default_n<int*, unsigned long>(int*, unsigned long) [302]
                0.00    0.00       1/1           int* std::fill_n<int*, unsigned long, int>(int*, unsigned long, int const&) [342]
-----------------------------------------------
                0.00    0.00       1/1           std::__uniq_ptr_impl<cl::sycl::detail::base_allocator, std::default_delete<cl::sycl::detail::base_allocator> >::__uniq_ptr_impl<std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >(cl::sycl::detail::base_allocator*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >&&) [284]
[303]    0.0    0.00    0.00       1         std::tuple<cl::sycl::detail::base_allocator*, std::default_delete<cl::sycl::detail::base_allocator> >::tuple<cl::sycl::detail::base_allocator*&, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >, true>(cl::sycl::detail::base_allocator*&, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >&&) [303]
                0.00    0.00       1/6           std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >&& std::forward<std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >(std::remove_reference<std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::type&) [73]
                0.00    0.00       1/3           cl::sycl::detail::base_allocator*& std::forward<cl::sycl::detail::base_allocator*&>(std::remove_reference<cl::sycl::detail::base_allocator*&>::type&) [122]
                0.00    0.00       1/1           std::_Tuple_impl<0ul, cl::sycl::detail::base_allocator*, std::default_delete<cl::sycl::detail::base_allocator> >::_Tuple_impl<cl::sycl::detail::base_allocator*&, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >, void>(cl::sycl::detail::base_allocator*&, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >&&) [244]
-----------------------------------------------
                0.00    0.00       1/1           std::__uniq_ptr_impl<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::__uniq_ptr_impl(cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*) [286]
[304]    0.0    0.00    0.00       1         std::tuple<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::tuple<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >, true>() [304]
                0.00    0.00       1/1           std::_Tuple_impl<0ul, cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::_Tuple_impl() [246]
-----------------------------------------------
                0.00    0.00       1/1           main [12]
[305]    0.0    0.00    0.00       1         std::enable_if<std::chrono::__is_duration<std::chrono::duration<long, std::ratio<1l, 1000l> > >::value, std::chrono::duration<long, std::ratio<1l, 1000l> > >::type std::chrono::duration_cast<std::chrono::duration<long, std::ratio<1l, 1000l> >, long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [305]
                0.00    0.00       1/1           std::chrono::duration<long, std::ratio<1l, 1000l> > std::chrono::__duration_cast_impl<std::chrono::duration<long, std::ratio<1l, 1000l> >, std::ratio<1l, 1000000l>, long, true, false>::__cast<long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [306]
-----------------------------------------------
                0.00    0.00       1/1           std::enable_if<std::chrono::__is_duration<std::chrono::duration<long, std::ratio<1l, 1000l> > >::value, std::chrono::duration<long, std::ratio<1l, 1000l> > >::type std::chrono::duration_cast<std::chrono::duration<long, std::ratio<1l, 1000l> >, long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [305]
[306]    0.0    0.00    0.00       1         std::chrono::duration<long, std::ratio<1l, 1000l> > std::chrono::__duration_cast_impl<std::chrono::duration<long, std::ratio<1l, 1000l> >, std::ratio<1l, 1000000l>, long, true, false>::__cast<long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [306]
                0.00    0.00       1/3           std::chrono::duration<long, std::ratio<1l, 1000000000l> >::count() const [113]
                0.00    0.00       1/1           std::chrono::duration<long, std::ratio<1l, 1000l> >::duration<long, void>(long const&) [308]
-----------------------------------------------
                0.00    0.00       1/1           std::common_type<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::type std::chrono::operator-<long, std::ratio<1l, 1000000000l>, long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&, std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [310]
[307]    0.0    0.00    0.00       1         std::chrono::duration<long, std::ratio<1l, 1000000000l> >::duration<long, void>(long const&) [307]
-----------------------------------------------
                0.00    0.00       1/1           std::chrono::duration<long, std::ratio<1l, 1000l> > std::chrono::__duration_cast_impl<std::chrono::duration<long, std::ratio<1l, 1000l> >, std::ratio<1l, 1000000l>, long, true, false>::__cast<long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [306]
[308]    0.0    0.00    0.00       1         std::chrono::duration<long, std::ratio<1l, 1000l> >::duration<long, void>(long const&) [308]
-----------------------------------------------
                0.00    0.00       1/1           main [12]
[309]    0.0    0.00    0.00       1         std::common_type<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::type std::chrono::operator-<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >(std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&, std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&) [309]
                0.00    0.00       2/2           std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::time_since_epoch() const [132]
                0.00    0.00       1/1           std::common_type<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::type std::chrono::operator-<long, std::ratio<1l, 1000000000l>, long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&, std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [310]
-----------------------------------------------
                0.00    0.00       1/1           std::common_type<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::type std::chrono::operator-<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >(std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&, std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&) [309]
[310]    0.0    0.00    0.00       1         std::common_type<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::type std::chrono::operator-<long, std::ratio<1l, 1000000000l>, long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&, std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [310]
                0.00    0.00       2/3           std::chrono::duration<long, std::ratio<1l, 1000000000l> >::count() const [113]
                0.00    0.00       1/1           std::chrono::duration<long, std::ratio<1l, 1000000000l> >::duration<long, void>(long const&) [307]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<int, std::allocator<int> >::_S_check_init_len(unsigned long, std::allocator<int> const&) [312]
[311]    0.0    0.00    0.00       1         std::vector<int, std::allocator<int> >::_S_max_size(std::allocator<int> const&) [311]
                0.00    0.00       1/1           std::allocator_traits<std::allocator<int> >::max_size(std::allocator<int> const&) [296]
                0.00    0.00       1/6           unsigned long const& std::min<unsigned long>(unsigned long const&, unsigned long const&) [72]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<int, std::allocator<int> >::vector(unsigned long, std::allocator<int> const&) [315]
[312]    0.0    0.00    0.00       1         std::vector<int, std::allocator<int> >::_S_check_init_len(unsigned long, std::allocator<int> const&) [312]
                0.00    0.00       1/1           std::vector<int, std::allocator<int> >::_S_max_size(std::allocator<int> const&) [311]
                0.00    0.00       1/2           std::allocator<int>::allocator(std::allocator<int> const&) [136]
                0.00    0.00       1/3           std::allocator<int>::~allocator() [114]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<int, std::allocator<int> >::vector(unsigned long, std::allocator<int> const&) [315]
[313]    0.0    0.00    0.00       1         std::vector<int, std::allocator<int> >::_M_default_initialize(unsigned long) [313]
                0.00    0.00       1/2           std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() [141]
                0.00    0.00       1/1           int* std::__uninitialized_default_n_a<int*, unsigned long, int>(int*, unsigned long, std::allocator<int>&) [332]
-----------------------------------------------
                0.00    0.00       1/1           main [12]
[314]    0.0    0.00    0.00       1         std::vector<int, std::allocator<int> >::data() [314]
                0.00    0.00       1/1           int* std::vector<int, std::allocator<int> >::_M_data_ptr<int>(int*) const [217]
-----------------------------------------------
                0.00    0.00       1/1           main [12]
[315]    0.0    0.00    0.00       1         std::vector<int, std::allocator<int> >::vector(unsigned long, std::allocator<int> const&) [315]
                0.00    0.00       1/1           std::vector<int, std::allocator<int> >::_S_check_init_len(unsigned long, std::allocator<int> const&) [312]
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&) [259]
                0.00    0.00       1/1           std::vector<int, std::allocator<int> >::_M_default_initialize(unsigned long) [313]
-----------------------------------------------
                0.00    0.00       1/1           main [12]
[316]    0.0    0.00    0.00       1         std::vector<int, std::allocator<int> >::~vector() [316]
                0.00    0.00       1/2           std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() [141]
                0.00    0.00       1/1           void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&) [344]
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [260]
-----------------------------------------------
                0.00    0.00       1/1           cl::sycl::queue::queue(cl::sycl::property_list const&) [164]
[317]    0.0    0.00    0.00       1         std::function<void (cl::sycl::exception_list)>::function() [317]
                0.00    0.00       1/2           std::_Function_base::_Function_base() [145]
-----------------------------------------------
                0.00    0.00       1/1           cl::sycl::queue::queue(cl::sycl::property_list const&) [164]
[318]    0.0    0.00    0.00       1         std::function<void (cl::sycl::exception_list)>::~function() [318]
                0.00    0.00       1/2           std::_Function_base::~_Function_base() [146]
-----------------------------------------------
                0.00    0.00       1/1           void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}) [195]
[319]    0.0    0.00    0.00       1         std::function<void (cl::sycl::detail::item_base&)>::function<void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda(cl::sycl::detail::item_base&)#1}, void, void>(void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda(cl::sycl::detail::item_base&)#1}) [319]
                0.00    0.00       1/1           bool std::_Function_base::_Base_manager<void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}>::_M_not_empty_function<{lambda(cl::sycl::id<1>)#1}::item_base>({lambda(cl::sycl::id<1>)#1}::item_base const&) [271]
                0.00    0.00       1/2           std::_Function_base::_Function_base() [145]
                0.00    0.00       1/3           std::remove_reference<void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}&>::type&& std::move<void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}&>(void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}&&) [121]
                0.00    0.00       1/1           std::_Function_base::_Base_manager<void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}>::_M_init_functor(std::_Any_data&, {lambda(cl::sycl::id<1>)#1}::item_base&&) [269]
-----------------------------------------------
                0.00    0.00       1/1           void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}) [195]
[320]    0.0    0.00    0.00       1         std::function<void (cl::sycl::detail::item_base&)>::~function() [320]
                0.00    0.00       1/2           std::_Function_base::~_Function_base() [146]
-----------------------------------------------
                0.00    0.00       1/1           int* std::fill_n<int*, unsigned long, int>(int*, unsigned long, int const&) [342]
[321]    0.0    0.00    0.00       1         __gnu_cxx::__enable_if<std::__is_scalar<int>::__value, int*>::__type std::__fill_n_a<int*, unsigned long, int>(int*, unsigned long, int const&) [321]
-----------------------------------------------
                0.00    0.00       1/1           std::tuple_element<0ul, std::tuple<cl::sycl::detail::base_allocator*, std::default_delete<cl::sycl::detail::base_allocator> > >::type& std::get<0ul, cl::sycl::detail::base_allocator*, std::default_delete<cl::sycl::detail::base_allocator> >(std::tuple<cl::sycl::detail::base_allocator*, std::default_delete<cl::sycl::detail::base_allocator> >&) [333]
[322]    0.0    0.00    0.00       1         cl::sycl::detail::base_allocator*& std::__get_helper<0ul, cl::sycl::detail::base_allocator*, std::default_delete<cl::sycl::detail::base_allocator> >(std::_Tuple_impl<0ul, cl::sycl::detail::base_allocator*, std::default_delete<cl::sycl::detail::base_allocator> >&) [322]
                0.00    0.00       1/1           std::_Tuple_impl<0ul, cl::sycl::detail::base_allocator*, std::default_delete<cl::sycl::detail::base_allocator> >::_M_head(std::_Tuple_impl<0ul, cl::sycl::detail::base_allocator*, std::default_delete<cl::sycl::detail::base_allocator> >&) [243]
-----------------------------------------------
                0.00    0.00       1/1           std::tuple_element<0ul, std::tuple<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > > >::type const& std::get<0ul, cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >(std::tuple<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > > const&) [334]
[323]    0.0    0.00    0.00       1         cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>* const& std::__get_helper<0ul, cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >(std::_Tuple_impl<0ul, cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > > const&) [323]
                0.00    0.00       1/1           std::_Tuple_impl<0ul, cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::_M_head(std::_Tuple_impl<0ul, cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > > const&) [245]
-----------------------------------------------
                0.00    0.00       1/1           std::tuple_element<0ul, std::tuple<cl::sycl::handler*, std::default_delete<cl::sycl::handler> > >::type& std::get<0ul, cl::sycl::handler*, std::default_delete<cl::sycl::handler> >(std::tuple<cl::sycl::handler*, std::default_delete<cl::sycl::handler> >&) [335]
[324]    0.0    0.00    0.00       1         cl::sycl::handler*& std::__get_helper<0ul, cl::sycl::handler*, std::default_delete<cl::sycl::handler> >(std::_Tuple_impl<0ul, cl::sycl::handler*, std::default_delete<cl::sycl::handler> >&) [324]
                0.00    0.00       1/1           std::_Tuple_impl<0ul, cl::sycl::handler*, std::default_delete<cl::sycl::handler> >::_M_head(std::_Tuple_impl<0ul, cl::sycl::handler*, std::default_delete<cl::sycl::handler> >&) [247]
-----------------------------------------------
                0.00    0.00       1/1           std::tuple_element<1ul, std::tuple<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > > >::type& std::get<1ul, cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >(std::tuple<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >&) [336]
[325]    0.0    0.00    0.00       1         std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >& std::__get_helper<1ul, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >>(std::_Tuple_impl<1ul, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >>&) [325]
                0.00    0.00       1/1           std::_Tuple_impl<1ul, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::_M_head(std::_Tuple_impl<1ul, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >&) [249]
-----------------------------------------------
                0.00    0.00       1/1           std::tuple_element<1ul, std::tuple<cl::sycl::handler*, std::default_delete<cl::sycl::handler> > >::type& std::get<1ul, cl::sycl::handler*, std::default_delete<cl::sycl::handler> >(std::tuple<cl::sycl::handler*, std::default_delete<cl::sycl::handler> >&) [337]
[326]    0.0    0.00    0.00       1         std::default_delete<cl::sycl::handler>& std::__get_helper<1ul, std::default_delete<cl::sycl::handler>>(std::_Tuple_impl<1ul, std::default_delete<cl::sycl::handler>>&) [326]
                0.00    0.00       1/1           std::_Tuple_impl<1ul, std::default_delete<cl::sycl::handler> >::_M_head(std::_Tuple_impl<1ul, std::default_delete<cl::sycl::handler> >&) [251]
-----------------------------------------------
                0.00    0.00       1/1           int* std::fill_n<int*, unsigned long, int>(int*, unsigned long, int const&) [342]
[327]    0.0    0.00    0.00       1         int* std::__niter_base<int*>(int*) [327]
-----------------------------------------------
                0.00    0.00       1/1           int* std::fill_n<int*, unsigned long, int>(int*, unsigned long, int const&) [342]
[328]    0.0    0.00    0.00       1         int* std::__niter_wrap<int*>(int* const&, int*) [328]
-----------------------------------------------
                0.00    0.00       1/1           std::__allocated_ptr<std::allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> > >::get() [281]
[329]    0.0    0.00    0.00       1         std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>* std::__to_address<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> >(std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>*) [329]
-----------------------------------------------
                0.00    0.00       1/1           std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, void>(void*, cl::sycl::detail::NullDeleter, std::allocator<void>) [277]
[330]    0.0    0.00    0.00       1         std::__allocated_ptr<std::allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> > > std::__allocate_guarded<std::allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> >&) [330]
                0.00    0.00       1/1           std::allocator_traits<std::allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> > >::allocate(std::allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> >&, unsigned long) [293]
                0.00    0.00       1/2           std::__allocated_ptr<std::allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> > >::__allocated_ptr(std::allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> >&, std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>*) [147]
-----------------------------------------------
                0.00    0.00       1/1           int* std::__uninitialized_default_n_a<int*, unsigned long, int>(int*, unsigned long, std::allocator<int>&) [332]
[331]    0.0    0.00    0.00       1         int* std::__uninitialized_default_n<int*, unsigned long>(int*, unsigned long) [331]
                0.00    0.00       1/1           int* std::__uninitialized_default_n_1<true>::__uninit_default_n<int*, unsigned long>(int*, unsigned long) [302]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<int, std::allocator<int> >::_M_default_initialize(unsigned long) [313]
[332]    0.0    0.00    0.00       1         int* std::__uninitialized_default_n_a<int*, unsigned long, int>(int*, unsigned long, std::allocator<int>&) [332]
                0.00    0.00       1/1           int* std::__uninitialized_default_n<int*, unsigned long>(int*, unsigned long) [331]
-----------------------------------------------
                0.00    0.00       1/1           std::__uniq_ptr_impl<cl::sycl::detail::base_allocator, std::default_delete<cl::sycl::detail::base_allocator> >::_M_ptr() [283]
[333]    0.0    0.00    0.00       1         std::tuple_element<0ul, std::tuple<cl::sycl::detail::base_allocator*, std::default_delete<cl::sycl::detail::base_allocator> > >::type& std::get<0ul, cl::sycl::detail::base_allocator*, std::default_delete<cl::sycl::detail::base_allocator> >(std::tuple<cl::sycl::detail::base_allocator*, std::default_delete<cl::sycl::detail::base_allocator> >&) [333]
                0.00    0.00       1/1           cl::sycl::detail::base_allocator*& std::__get_helper<0ul, cl::sycl::detail::base_allocator*, std::default_delete<cl::sycl::detail::base_allocator> >(std::_Tuple_impl<0ul, cl::sycl::detail::base_allocator*, std::default_delete<cl::sycl::detail::base_allocator> >&) [322]
-----------------------------------------------
                0.00    0.00       1/1           std::__uniq_ptr_impl<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::_M_ptr() const [215]
[334]    0.0    0.00    0.00       1         std::tuple_element<0ul, std::tuple<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > > >::type const& std::get<0ul, cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >(std::tuple<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > > const&) [334]
                0.00    0.00       1/1           cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>* const& std::__get_helper<0ul, cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >(std::_Tuple_impl<0ul, cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > > const&) [323]
-----------------------------------------------
                0.00    0.00       1/1           std::__uniq_ptr_impl<cl::sycl::handler, std::default_delete<cl::sycl::handler> >::_M_ptr() [288]
[335]    0.0    0.00    0.00       1         std::tuple_element<0ul, std::tuple<cl::sycl::handler*, std::default_delete<cl::sycl::handler> > >::type& std::get<0ul, cl::sycl::handler*, std::default_delete<cl::sycl::handler> >(std::tuple<cl::sycl::handler*, std::default_delete<cl::sycl::handler> >&) [335]
                0.00    0.00       1/1           cl::sycl::handler*& std::__get_helper<0ul, cl::sycl::handler*, std::default_delete<cl::sycl::handler> >(std::_Tuple_impl<0ul, cl::sycl::handler*, std::default_delete<cl::sycl::handler> >&) [324]
-----------------------------------------------
                0.00    0.00       1/1           std::__uniq_ptr_impl<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::_M_deleter() [285]
[336]    0.0    0.00    0.00       1         std::tuple_element<1ul, std::tuple<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > > >::type& std::get<1ul, cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >(std::tuple<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >&) [336]
                0.00    0.00       1/1           std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >& std::__get_helper<1ul, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >>(std::_Tuple_impl<1ul, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >>&) [325]
-----------------------------------------------
                0.00    0.00       1/1           std::__uniq_ptr_impl<cl::sycl::handler, std::default_delete<cl::sycl::handler> >::_M_deleter() [287]
[337]    0.0    0.00    0.00       1         std::tuple_element<1ul, std::tuple<cl::sycl::handler*, std::default_delete<cl::sycl::handler> > >::type& std::get<1ul, cl::sycl::handler*, std::default_delete<cl::sycl::handler> >(std::tuple<cl::sycl::handler*, std::default_delete<cl::sycl::handler> >&) [337]
                0.00    0.00       1/1           std::default_delete<cl::sycl::handler>& std::__get_helper<1ul, std::default_delete<cl::sycl::handler>>(std::_Tuple_impl<1ul, std::default_delete<cl::sycl::handler>>&) [326]
-----------------------------------------------
                0.00    0.00       1/1           cl::sycl::detail::accessor_common<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::accessor_common(cl::sycl::detail::accessor_common<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>&&) [180]
[338]    0.0    0.00    0.00       1         std::remove_reference<cl::sycl::detail::accessor_common<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>&>::type&& std::move<cl::sycl::detail::accessor_common<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>&>(cl::sycl::detail::accessor_common<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>&) [338]
-----------------------------------------------
                0.00    0.00       1/1           std::unique_ptr<cl::sycl::handler, std::default_delete<cl::sycl::handler> >::~unique_ptr() [242]
[339]    0.0    0.00    0.00       1         std::remove_reference<cl::sycl::handler*&>::type&& std::move<cl::sycl::handler*&>(cl::sycl::handler*&) [339]
-----------------------------------------------
                0.00    0.00       1/1           std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, void>(void*, cl::sycl::detail::NullDeleter, std::allocator<void>) [277]
[340]    0.0    0.00    0.00       1         std::remove_reference<std::allocator<void>&>::type&& std::move<std::allocator<void>&>(std::allocator<void>&) [340]
-----------------------------------------------
                0.00    0.00       1/1           cl::sycl::buffer<int, 1, cl::sycl::detail::aligned_mem::aligned_allocator>::buffer(int*, cl::sycl::range<1> const&, cl::sycl::property_list const&) [168]
[341]    0.0    0.00    0.00       1         std::remove_reference<std::shared_ptr<void> >::type&& std::move<std::shared_ptr<void> >(std::shared_ptr<void>&&) [341]
-----------------------------------------------
                0.00    0.00       1/1           int* std::__uninitialized_default_n_1<true>::__uninit_default_n<int*, unsigned long>(int*, unsigned long) [302]
[342]    0.0    0.00    0.00       1         int* std::fill_n<int*, unsigned long, int>(int*, unsigned long, int const&) [342]
                0.00    0.00       1/1           int* std::__niter_base<int*>(int*) [327]
                0.00    0.00       1/1           __gnu_cxx::__enable_if<std::__is_scalar<int>::__value, int*>::__type std::__fill_n_a<int*, unsigned long, int>(int*, unsigned long, int const&) [321]
                0.00    0.00       1/1           int* std::__niter_wrap<int*>(int* const&, int*) [328]
-----------------------------------------------
                0.00    0.00       1/1           void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&) [344]
[343]    0.0    0.00    0.00       1         void std::_Destroy<int*>(int*, int*) [343]
                0.00    0.00       1/1           void std::_Destroy_aux<true>::__destroy<int*>(int*, int*) [252]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<int, std::allocator<int> >::~vector() [316]
[344]    0.0    0.00    0.00       1         void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&) [344]
                0.00    0.00       1/1           void std::_Destroy<int*>(int*, int*) [343]
-----------------------------------------------
                0.00    0.00       1/1           cl::sycl::event cl::sycl::detail::command_group::submit_handler<main::{lambda(cl::sycl::handler&)#1}>(main::{lambda(cl::sycl::handler&)#1}, std::shared_ptr<cl::sycl::detail::queue> const&, cl::sycl::detail::standard_handler_tag) [175]
[345]    0.0    0.00    0.00       1         main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const [345]
                0.00    0.00       1/1           cl::sycl::accessor<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0> cl::sycl::buffer<int, 1, cl::sycl::detail::aligned_mem::aligned_allocator>::get_access<(cl::sycl::access::mode)1, (cl::sycl::access::target)1>(cl::sycl::handler&) [167]
                0.00    0.00       1/6           cl::sycl::accessor<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::accessor(cl::sycl::accessor<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0> const&) [68]
                0.00    0.00       1/1           void cl::sycl::handler::parallel_for<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::range<1> const&, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1} const&) [194]
                0.00    0.00       1/7           main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}::~id() [64]
                0.00    0.00       1/8           cl::sycl::accessor<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::~accessor() [60]
-----------------------------------------------
                0.00    0.00       1/1           std::_Function_base::_Base_manager<void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}>::_M_init_functor(std::_Any_data&, {lambda(cl::sycl::id<1>)#1}::item_base&&, std::integral_constant<bool, false>) [270]
[346]    0.0    0.00    0.00       1         void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}::item_base({lambda(cl::sycl::id<1>)#1}::item_base&&) [346]
                0.00    0.00       1/1           main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}::id(cl::sycl::id<1>&&) [347]
-----------------------------------------------
                0.00    0.00       1/1           void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}::item_base({lambda(cl::sycl::id<1>)#1}::item_base&&) [346]
[347]    0.0    0.00    0.00       1         main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}::id(cl::sycl::id<1>&&) [347]
                0.00    0.00       1/1           cl::sycl::accessor<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::accessor(cl::sycl::accessor<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>&&) [199]
-----------------------------------------------
                0.00    0.00       1/1           std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, void>(void*, cl::sycl::detail::NullDeleter, std::allocator<void>) [277]
[348]    0.0    0.00    0.00       1         operator new(unsigned long, void*) [348]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.

Copyright (C) 2012-2016 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Index by function name

 [152] _GLOBAL__sub_I__Z3hcfjj [44] int& cl::sycl::detail::accessor_buffer_interface<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::operator[]<int, void>(cl::sycl::id<1>) const [275] std::_Sp_ebo_helper<1, std::allocator<void>, true>::_Sp_ebo_helper(std::allocator<void> const&)
   [6] sumTotient(unsigned int, unsigned int) [45] cl::sycl::detail::item_base::get_id(int) const [14] std::__array_traits<unsigned long, 1ul>::_S_ref(unsigned long const (&) [1], unsigned long)
 [153] __static_initialization_and_destruction_0(int, int) [46] cl::sycl::detail::item_base::operator[](int) const [16] std::__array_traits<unsigned long, 3ul>::_S_ref(unsigned long const (&) [3], unsigned long)
  [51] __gthread_active_p()  [210] cl::sycl::kernel cl::sycl::program::get_kernel<Totient<int> >() const [276] std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count(std::__shared_count<(__gnu_cxx::_Lock_policy)2> const&)
 [154] cl::sycl::buffer_mem::~buffer_mem() [75] __gnu_cxx::new_allocator<std::shared_ptr<cl::sycl::detail::property_base> >::max_size() const [277] std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, void>(void*, cl::sycl::detail::NullDeleter, std::allocator<void>)
 [155] cl::sycl::amd_selector::amd_selector() [211] __gnu_cxx::new_allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> >::max_size() const [278] std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count()
 [156] cl::sycl::cpu_selector::cpu_selector() [129] __gnu_cxx::new_allocator<int>::max_size() const [279] std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<void*, cl::sycl::detail::NullDeleter, void>(void*, cl::sycl::detail::NullDeleter)
 [157] cl::sycl::gpu_selector::gpu_selector() [212] std::unique_ptr<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::get() const [54] std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count()
  [56] cl::sycl::accessor_base::~accessor_base() [130] std::unique_ptr<cl::sycl::handler, std::default_delete<cl::sycl::handler> >::get() const [280] std::default_delete<cl::sycl::detail::base_allocator>::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>, void>(std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > const&)
 [158] cl::sycl::host_selector::host_selector() [213] std::unique_ptr<cl::sycl::handler, std::default_delete<cl::sycl::handler> >::operator*() const [281] std::__allocated_ptr<std::allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> > >::get()
  [83] cl::sycl::property_list::property_list<, void, void>() [76] std::_Vector_base<std::shared_ptr<cl::sycl::detail::property_base>, std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > >::_M_get_Tp_allocator() const [147] std::__allocated_ptr<std::allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> > >::__allocated_ptr(std::allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> >&, std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>*)
  [84] cl::sycl::property_list::~property_list() [214] std::default_delete<cl::sycl::handler>::operator()(cl::sycl::handler*) const [148] std::__allocated_ptr<std::allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> > >::~__allocated_ptr()
 [159] cl::sycl::intel_selector::intel_selector() [215] std::__uniq_ptr_impl<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::_M_ptr() const [282] std::__allocated_ptr<std::allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> > >::operator=(decltype(nullptr))
 [160] cl::sycl::default_selector::default_selector() [131] std::__uniq_ptr_impl<cl::sycl::handler, std::default_delete<cl::sycl::handler> >::_M_ptr() const [283] std::__uniq_ptr_impl<cl::sycl::detail::base_allocator, std::default_delete<cl::sycl::detail::base_allocator> >::_M_ptr()
 [161] cl::sycl::accelerator_selector::accelerator_selector() [17] std::array<unsigned long, 1ul>::operator[](unsigned long) const [284] std::__uniq_ptr_impl<cl::sycl::detail::base_allocator, std::default_delete<cl::sycl::detail::base_allocator> >::__uniq_ptr_impl<std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >(cl::sycl::detail::base_allocator*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >&&)
  [36] cl::sycl::id<1>::id(cl::sycl::detail::index_array const&) [20] std::array<unsigned long, 3ul>::operator[](unsigned long) const [285] std::__uniq_ptr_impl<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::_M_deleter()
  [37] cl::sycl::id<1>::id(cl::sycl::detail::item_base const&) [132] std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::time_since_epoch() const [118] std::__uniq_ptr_impl<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::_M_ptr()
  [28] cl::sycl::id<1>::id() [113] std::chrono::duration<long, std::ratio<1l, 1000000000l> >::count() const [286] std::__uniq_ptr_impl<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::__uniq_ptr_impl(cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*)
 [162] cl::sycl::event::~event() [216] std::chrono::duration<long, std::ratio<1l, 1000l> >::count() const [287] std::__uniq_ptr_impl<cl::sycl::handler, std::default_delete<cl::sycl::handler> >::_M_deleter()
 [163] cl::sycl::event cl::sycl::queue::submit<main::{lambda(cl::sycl::handler&)#1}>(main::{lambda(cl::sycl::handler&)#1}) [77] std::vector<std::shared_ptr<cl::sycl::detail::property_base>, std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > >::capacity() const [288] std::__uniq_ptr_impl<cl::sycl::handler, std::default_delete<cl::sycl::handler> >::_M_ptr()
 [164] cl::sycl::queue::queue(cl::sycl::property_list const&) [78] std::vector<std::shared_ptr<cl::sycl::detail::property_base>, std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > >::max_size() const [55] std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release()
 [165] cl::sycl::queue::~queue() [217] int* std::vector<int, std::allocator<int> >::_M_data_ptr<int>(int*) const [289] std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_add_ref_copy()
  [23] cl::sycl::range<1>::range() [35] std::_Any_data::_M_access() const [290] std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_Sp_counted_base()
  [24] cl::sycl::range<1>::range(cl::sycl::detail::index_array const&) [133] void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1} const* const& std::_Any_data::_M_access<void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1} const*>() const [291] std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::~_Sp_counted_base()
 [166] cl::sycl::range<1>::range<>(unsigned long) [47] void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}* const& std::_Any_data::_M_access<void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}*>() const [79] std::allocator_traits<std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > >::max_size(std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > const&)
 [167] cl::sycl::accessor<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0> cl::sycl::buffer<int, 1, cl::sycl::detail::aligned_mem::aligned_allocator>::get_access<(cl::sycl::access::mode)1, (cl::sycl::access::target)1>(cl::sycl::handler&) [89] std::allocator<std::shared_ptr<cl::sycl::detail::property_base> >::allocator() [292] std::allocator_traits<std::allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> > >::deallocate(std::allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> >&, std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>*, unsigned long)
 [168] cl::sycl::buffer<int, 1, cl::sycl::detail::aligned_mem::aligned_allocator>::buffer(int*, cl::sycl::range<1> const&, cl::sycl::property_list const&) [90] std::allocator<std::shared_ptr<cl::sycl::detail::property_base> >::~allocator() [293] std::allocator_traits<std::allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> > >::allocate(std::allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> >&, unsigned long)
 [169] cl::sycl::buffer<int, 1, cl::sycl::detail::aligned_mem::aligned_allocator>::~buffer() [134] std::allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> >::allocator<void>(std::allocator<void> const&) [294] std::allocator_traits<std::allocator<int> >::deallocate(std::allocator<int>&, int*, unsigned long)
 [170] cl::sycl::detail::NullDeleter::operator()(void*) [135] std::allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> >::~allocator() [295] std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long)
 [171] cl::sycl::detail::aligned_mem::aligned_allocator::deallocate(void*, unsigned long) [136] std::allocator<int>::allocator(std::allocator<int> const&) [296] std::allocator_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
 [172] cl::sycl::detail::aligned_mem::aligned_allocator::allocate(unsigned long) [218] std::allocator<int>::allocator() [297] std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_Impl::_M_del()
 [106] cl::sycl::detail::aligned_mem::aligned_allocator::aligned_allocator(cl::sycl::detail::aligned_mem::aligned_allocator const&) [114] std::allocator<int>::~allocator() [298] std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_Impl::_M_alloc()
 [173] cl::sycl::detail::aligned_mem::aligned_allocator::aligned_allocator(unsigned long, unsigned long) [219] std::_Head_base<0ul, cl::sycl::detail::base_allocator*, false>::_M_head(std::_Head_base<0ul, cl::sycl::detail::base_allocator*, false>&) [299] std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_Impl::_Impl(void*, cl::sycl::detail::NullDeleter, std::allocator<void> const&)
  [85] cl::sycl::detail::aligned_mem::aligned_allocator::~aligned_allocator() [220] std::_Head_base<0ul, cl::sycl::detail::base_allocator*, false>::_Head_base<cl::sycl::detail::base_allocator*&>(cl::sycl::detail::base_allocator*&) [300] std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_deleter(void*, cl::sycl::detail::NullDeleter, std::allocator<void> const&)
 [107] cl::sycl::detail::index_array::index_array(unsigned long, unsigned long, unsigned long) [221] std::_Head_base<0ul, cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, false>::_M_head(std::_Head_base<0ul, cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, false> const&) [301] std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_deleter()
 [174] cl::sycl::detail::access_range::access_range(cl::sycl::detail::index_array, cl::sycl::detail::index_array) [115] std::_Head_base<0ul, cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, false>::_M_head(std::_Head_base<0ul, cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, false>&) [302] int* std::__uninitialized_default_n_1<true>::__uninit_default_n<int*, unsigned long>(int*, unsigned long)
 [175] cl::sycl::event cl::sycl::detail::command_group::submit_handler<main::{lambda(cl::sycl::handler&)#1}>(main::{lambda(cl::sycl::handler&)#1}, std::shared_ptr<cl::sycl::detail::queue> const&, cl::sycl::detail::standard_handler_tag) [222] std::_Head_base<0ul, cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, false>::_Head_base() [15] std::array<unsigned long, 1ul>::operator[](unsigned long)
 [176] cl::sycl::detail::command_group::command_group(std::shared_ptr<cl::sycl::detail::queue> const&) [137] std::_Head_base<0ul, cl::sycl::handler*, false>::_M_head(std::_Head_base<0ul, cl::sycl::handler*, false> const&) [69] std::array<unsigned long, 3ul>::operator[](unsigned long)
 [177] cl::sycl::detail::command_group::~command_group() [223] std::_Head_base<0ul, cl::sycl::handler*, false>::_M_head(std::_Head_base<0ul, cl::sycl::handler*, false>&) [303] std::tuple<cl::sycl::detail::base_allocator*, std::default_delete<cl::sycl::detail::base_allocator> >::tuple<cl::sycl::detail::base_allocator*&, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >, true>(cl::sycl::detail::base_allocator*&, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >&&)
  [29] cl::sycl::detail::id_range_base<unsigned long, 1, cl::sycl::id<1> >::id_range_base(cl::sycl::detail::id_range_base<unsigned long, 1, cl::sycl::id<1> >::fill_tag, unsigned long) [224] std::_Head_base<1ul, std::default_delete<cl::sycl::detail::base_allocator>, true>::_Head_base<std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >(std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >&&) [304] std::tuple<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::tuple<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >, true>()
  [30] cl::sycl::detail::id_range_base<unsigned long, 1, cl::sycl::id<1> >::id_range_base<0ul>(unsigned long, std::integer_sequence<unsigned long, 0ul>) [225] std::_Head_base<1ul, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >, true>::_M_head(std::_Head_base<1ul, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >, true>&) [305] std::enable_if<std::chrono::__is_duration<std::chrono::duration<long, std::ratio<1l, 1000l> > >::value, std::chrono::duration<long, std::ratio<1l, 1000l> > >::type std::chrono::duration_cast<std::chrono::duration<long, std::ratio<1l, 1000l> >, long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&)
  [21] cl::sycl::detail::id_range_base<unsigned long, 1, cl::sycl::id<1> >::operator[](int) [226] std::_Head_base<1ul, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >, true>::_Head_base() [306] std::chrono::duration<long, std::ratio<1l, 1000l> > std::chrono::__duration_cast_impl<std::chrono::duration<long, std::ratio<1l, 1000l> >, std::ratio<1l, 1000000l>, long, true, false>::__cast<long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&)
  [25] cl::sycl::detail::id_range_base<unsigned long, 1, cl::sycl::range<1> >::id_range_base(cl::sycl::detail::id_range_base<unsigned long, 1, cl::sycl::range<1> >::fill_tag, unsigned long) [227] std::_Head_base<1ul, std::default_delete<cl::sycl::handler>, true>::_M_head(std::_Head_base<1ul, std::default_delete<cl::sycl::handler>, true>&) [307] std::chrono::duration<long, std::ratio<1l, 1000000000l> >::duration<long, void>(long const&)
 [178] cl::sycl::detail::id_range_base<unsigned long, 1, cl::sycl::range<1> >::id_range_base<unsigned long>(cl::sycl::detail::id_range_base<unsigned long, 1, cl::sycl::range<1> >::values_tag, unsigned long) [138] std::shared_ptr<cl::sycl::detail::event>::~shared_ptr() [308] std::chrono::duration<long, std::ratio<1l, 1000l> >::duration<long, void>(long const&)
  [26] cl::sycl::detail::id_range_base<unsigned long, 1, cl::sycl::range<1> >::id_range_base<0ul>(unsigned long, std::integer_sequence<unsigned long, 0ul>) [228] std::shared_ptr<cl::sycl::detail::queue>::shared_ptr() [309] std::common_type<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::type std::chrono::operator-<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >(std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&, std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&)
  [27] cl::sycl::detail::id_range_base<unsigned long, 1, cl::sycl::range<1> >::operator[](int) [229] std::shared_ptr<cl::sycl::detail::queue>::shared_ptr(decltype(nullptr)) [310] std::common_type<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::type std::chrono::operator-<long, std::ratio<1l, 1000000000l>, long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&, std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&)
 [108] cl::sycl::detail::id_range_base<unsigned long, 3, cl::sycl::detail::index_array>::id_range_base<unsigned long, unsigned long, unsigned long>(cl::sycl::detail::id_range_base<unsigned long, 3, cl::sycl::detail::index_array>::values_tag, unsigned long, unsigned long, unsigned long) [230] std::shared_ptr<cl::sycl::detail::queue>::shared_ptr(std::shared_ptr<cl::sycl::detail::queue> const&) [80] std::vector<std::shared_ptr<cl::sycl::detail::property_base>, std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > >::_S_max_size(std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > const&)
  [65] cl::sycl::detail::id_range_base<unsigned long, 3, cl::sycl::detail::index_array>::operator[](int) [91] std::shared_ptr<cl::sycl::detail::queue>::~shared_ptr() [101] std::vector<std::shared_ptr<cl::sycl::detail::property_base>, std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > >::reserve(unsigned long)
 [179] cl::sycl::detail::nd_range_base::nd_range_base(cl::sycl::detail::index_array, cl::sycl::detail::index_array) [231] std::shared_ptr<cl::sycl::detail::kernel>::~shared_ptr() [102] std::vector<std::shared_ptr<cl::sycl::detail::property_base>, std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > >::vector()
  [86] cl::sycl::detail::add_properties<>::apply(std::vector<std::shared_ptr<cl::sycl::detail::property_base>, std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > >&) [139] std::shared_ptr<cl::sycl::detail::context>::~shared_ptr() [103] std::vector<std::shared_ptr<cl::sycl::detail::property_base>, std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > >::~vector()
 [124] cl::sycl::detail::base_allocator::base_allocator() [232] std::shared_ptr<cl::sycl::detail::program>::~shared_ptr() [311] std::vector<int, std::allocator<int> >::_S_max_size(std::allocator<int> const&)
 [109] cl::sycl::detail::base_allocator::base_allocator(cl::sycl::detail::base_allocator const&) [61] std::shared_ptr<cl::sycl::detail::accessor>::~shared_ptr() [312] std::vector<int, std::allocator<int> >::_S_check_init_len(unsigned long, std::allocator<int> const&)
  [74] cl::sycl::detail::base_allocator::~base_allocator() [233] std::shared_ptr<void>::shared_ptr<void, cl::sycl::detail::NullDeleter, void>(void*, cl::sycl::detail::NullDeleter) [313] std::vector<int, std::allocator<int> >::_M_default_initialize(unsigned long)
 [180] cl::sycl::detail::accessor_common<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::accessor_common(cl::sycl::detail::accessor_common<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>&&) [234] std::shared_ptr<void>::~shared_ptr() [314] std::vector<int, std::allocator<int> >::data()
  [66] cl::sycl::detail::accessor_common<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::accessor_common(cl::sycl::detail::accessor_common<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0> const&) [235] std::unique_ptr<cl::sycl::detail::base_allocator, std::default_delete<cl::sycl::detail::base_allocator> >::unique_ptr<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >, void>(std::unique_ptr<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >&&) [315] std::vector<int, std::allocator<int> >::vector(unsigned long, std::allocator<int> const&)
 [181] cl::sycl::detail::accessor_common<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::accessor_common(cl::sycl::storage_mem&, cl::sycl::handler&, cl::sycl::detail::access_range, cl::sycl::property_list const&) [236] std::unique_ptr<cl::sycl::detail::base_allocator, std::default_delete<cl::sycl::detail::base_allocator> >::~unique_ptr() [316] std::vector<int, std::allocator<int> >::~vector()
  [57] cl::sycl::detail::accessor_common<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::~accessor_common() [237] std::unique_ptr<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::get_deleter() [49] std::vector<int, std::allocator<int> >::operator[](unsigned long)
 [182] cl::sycl::detail::access_range cl::sycl::detail::get_access_range<1, 1>(cl::sycl::range<1> const&) [238] std::unique_ptr<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::release() [317] std::function<void (cl::sycl::exception_list)>::function()
 [183] cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>::wrapped_allocator(cl::sycl::detail::aligned_mem::aligned_allocator, unsigned long) [239] std::unique_ptr<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::unique_ptr<std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >, void>(cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*) [318] std::function<void (cl::sycl::exception_list)>::~function()
 [184] cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>::~wrapped_allocator() [240] std::unique_ptr<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::~unique_ptr() [319] std::function<void (cl::sycl::detail::item_base&)>::function<void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda(cl::sycl::detail::item_base&)#1}, void, void>(void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda(cl::sycl::detail::item_base&)#1})
  [58] cl::sycl::detail::host_arg_container::~host_arg_container() [241] std::unique_ptr<cl::sycl::handler, std::default_delete<cl::sycl::handler> >::get_deleter() [320] std::function<void (cl::sycl::detail::item_base&)>::~function()
 [185] cl::sycl::detail::make_base_allocator<int, cl::sycl::detail::aligned_mem::aligned_allocator>::get_buffer_allocator(cl::sycl::detail::aligned_mem::aligned_allocator) [242] std::unique_ptr<cl::sycl::handler, std::default_delete<cl::sycl::handler> >::~unique_ptr() [70] std::_Any_data::_M_access()
 [186] cl::sycl::detail::make_base_allocator<int, cl::sycl::detail::aligned_mem::aligned_allocator>::get_elem_size_multiplier() [243] std::_Tuple_impl<0ul, cl::sycl::detail::base_allocator*, std::default_delete<cl::sycl::detail::base_allocator> >::_M_head(std::_Tuple_impl<0ul, cl::sycl::detail::base_allocator*, std::default_delete<cl::sycl::detail::base_allocator> >&) [71] void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}*& std::_Any_data::_M_access<void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}*>()
 [187] cl::sycl::detail::make_base_allocator<int, cl::sycl::detail::aligned_mem::aligned_allocator>::get(cl::sycl::detail::aligned_mem::aligned_allocator, unsigned long) [244] std::_Tuple_impl<0ul, cl::sycl::detail::base_allocator*, std::default_delete<cl::sycl::detail::base_allocator> >::_Tuple_impl<cl::sycl::detail::base_allocator*&, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >, void>(cl::sycl::detail::base_allocator*&, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >&&) [321] __gnu_cxx::__enable_if<std::__is_scalar<int>::__value, int*>::__type std::__fill_n_a<int*, unsigned long, int>(int*, unsigned long, int const&)
 [188] cl::sycl::access::mode cl::sycl::detail::mode_from_properties<(cl::sycl::access::mode)1>(cl::sycl::property_list const&) [245] std::_Tuple_impl<0ul, cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::_M_head(std::_Tuple_impl<0ul, cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > > const&) [149] std::allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> >* std::__addressof<std::allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> >&)
  [67] cl::sycl::detail::accessor_buffer_interface<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::accessor_buffer_interface(cl::sycl::detail::accessor_buffer_interface<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0> const&) [116] std::_Tuple_impl<0ul, cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::_M_head(std::_Tuple_impl<0ul, cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >&) [322] cl::sycl::detail::base_allocator*& std::__get_helper<0ul, cl::sycl::detail::base_allocator*, std::default_delete<cl::sycl::detail::base_allocator> >(std::_Tuple_impl<0ul, cl::sycl::detail::base_allocator*, std::default_delete<cl::sycl::detail::base_allocator> >&)
 [189] cl::sycl::detail::accessor_buffer_interface<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::accessor_buffer_interface(cl::sycl::detail::accessor_buffer_interface<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>&&) [246] std::_Tuple_impl<0ul, cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::_Tuple_impl() [323] cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>* const& std::__get_helper<0ul, cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >(std::_Tuple_impl<0ul, cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > > const&)
 [190] _ZN2cl4sycl6detail25accessor_buffer_interfaceIiLi1ELNS0_6access4modeE1ELNS3_6targetE1ELNS3_11placeholderE0EECI2NS1_15accessor_commonIiLi1ELS4_1ELS5_1ELS6_0EEEERNS0_11storage_memERNS0_7handlerENS1_12access_rangeERKNS0_13property_listE [140] std::_Tuple_impl<0ul, cl::sycl::handler*, std::default_delete<cl::sycl::handler> >::_M_head(std::_Tuple_impl<0ul, cl::sycl::handler*, std::default_delete<cl::sycl::handler> > const&) [119] cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*& std::__get_helper<0ul, cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >(std::_Tuple_impl<0ul, cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >&)
  [59] cl::sycl::detail::accessor_buffer_interface<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::~accessor_buffer_interface() [247] std::_Tuple_impl<0ul, cl::sycl::handler*, std::default_delete<cl::sycl::handler> >::_M_head(std::_Tuple_impl<0ul, cl::sycl::handler*, std::default_delete<cl::sycl::handler> >&) [150] cl::sycl::handler* const& std::__get_helper<0ul, cl::sycl::handler*, std::default_delete<cl::sycl::handler> >(std::_Tuple_impl<0ul, cl::sycl::handler*, std::default_delete<cl::sycl::handler> > const&)
 [191] cl::sycl::detail::init_sycl_language_version::init_sycl_language_version() [248] std::_Tuple_impl<1ul, std::default_delete<cl::sycl::detail::base_allocator> >::_Tuple_impl<std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >(std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >&&) [324] cl::sycl::handler*& std::__get_helper<0ul, cl::sycl::handler*, std::default_delete<cl::sycl::handler> >(std::_Tuple_impl<0ul, cl::sycl::handler*, std::default_delete<cl::sycl::handler> >&)
  [31] unsigned long cl::sycl::detail::construct_linear_row_major_index<1>(cl::sycl::id<1> const&, cl::sycl::range<1> const&) [249] std::_Tuple_impl<1ul, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::_M_head(std::_Tuple_impl<1ul, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >&) [325] std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >& std::__get_helper<1ul, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >>(std::_Tuple_impl<1ul, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >>&)
  [32] unsigned long cl::sycl::detail::construct_linear_row_major_index<1ul>(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long) [250] std::_Tuple_impl<1ul, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::_Tuple_impl() [326] std::default_delete<cl::sycl::handler>& std::__get_helper<1ul, std::default_delete<cl::sycl::handler>>(std::_Tuple_impl<1ul, std::default_delete<cl::sycl::handler>>&)
 [192] _ZN2cl4sycl6detailL15get_handler_tagIZ4mainEUlRNS0_7handlerEE_EEDTcmclfp_cl7declvalIS4_EEEtlNS1_20standard_handler_tagEEET_NS1_14handler_choiceILj0EEE [251] std::_Tuple_impl<1ul, std::default_delete<cl::sycl::handler> >::_M_head(std::_Tuple_impl<1ul, std::default_delete<cl::sycl::handler> >&) [327] int* std::__niter_base<int*>(int*)
 [193] cl::sycl::kernel::~kernel() [92] void std::_Destroy_aux<false>::__destroy<std::shared_ptr<cl::sycl::detail::property_base>*>(std::shared_ptr<cl::sycl::detail::property_base>*, std::shared_ptr<cl::sycl::detail::property_base>*) [328] int* std::__niter_wrap<int*>(int* const&, int*)
 [125] cl::sycl::context::~context() [252] void std::_Destroy_aux<true>::__destroy<int*>(int*, int*) [329] std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>* std::__to_address<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> >(std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>*)
 [194] void cl::sycl::handler::parallel_for<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::range<1> const&, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1} const&) [93] std::_Vector_base<std::shared_ptr<cl::sycl::detail::property_base>, std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > >::_Vector_impl::_Vector_impl() [330] std::__allocated_ptr<std::allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> > > std::__allocate_guarded<std::allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> >&)
 [195] void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}) [94] std::_Vector_base<std::shared_ptr<cl::sycl::detail::property_base>, std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > >::_Vector_impl::~_Vector_impl() [331] int* std::__uninitialized_default_n<int*, unsigned long>(int*, unsigned long)
 [196] void cl::sycl::handler::process_functor_arguments<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}>(main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1} const&, cl::sycl::kernel&, cl::sycl::detail::enqueue_device_kernel_command*) [95] std::_Vector_base<std::shared_ptr<cl::sycl::detail::property_base>, std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > >::_M_deallocate(std::shared_ptr<cl::sycl::detail::property_base>*, unsigned long) [332] int* std::__uninitialized_default_n_a<int*, unsigned long, int>(int*, unsigned long, std::allocator<int>&)
 [197] cl::sycl::program cl::sycl::program::create_program_for_kernel<Totient<int> >(cl::sycl::context) [96] std::_Vector_base<std::shared_ptr<cl::sycl::detail::property_base>, std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > >::_Vector_impl_data::_Vector_impl_data() [333] std::tuple_element<0ul, std::tuple<cl::sycl::detail::base_allocator*, std::default_delete<cl::sycl::detail::base_allocator> > >::type& std::get<0ul, cl::sycl::detail::base_allocator*, std::default_delete<cl::sycl::detail::base_allocator> >(std::tuple<cl::sycl::detail::base_allocator*, std::default_delete<cl::sycl::detail::base_allocator> >&)
 [198] cl::sycl::program::~program() [97] std::_Vector_base<std::shared_ptr<cl::sycl::detail::property_base>, std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > >::_M_get_Tp_allocator() [334] std::tuple_element<0ul, std::tuple<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > > >::type const& std::get<0ul, cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >(std::tuple<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > > const&)
 [199] cl::sycl::accessor<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::accessor(cl::sycl::accessor<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>&&) [98] std::_Vector_base<std::shared_ptr<cl::sycl::detail::property_base>, std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > >::_Vector_base() [120] std::tuple_element<0ul, std::tuple<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > > >::type& std::get<0ul, cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >(std::tuple<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >&)
  [68] cl::sycl::accessor<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::accessor(cl::sycl::accessor<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0> const&) [99] std::_Vector_base<std::shared_ptr<cl::sycl::detail::property_base>, std::allocator<std::shared_ptr<cl::sycl::detail::property_base> > >::~_Vector_base() [151] std::tuple_element<0ul, std::tuple<cl::sycl::handler*, std::default_delete<cl::sycl::handler> > >::type const& std::get<0ul, cl::sycl::handler*, std::default_delete<cl::sycl::handler> >(std::tuple<cl::sycl::handler*, std::default_delete<cl::sycl::handler> > const&)
 [200] cl::sycl::accessor<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::accessor<cl::sycl::detail::aligned_mem::aligned_allocator, int, void>(cl::sycl::buffer<int, 1, cl::sycl::detail::aligned_mem::aligned_allocator>&, cl::sycl::handler&, cl::sycl::property_list const&) [253] std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) [335] std::tuple_element<0ul, std::tuple<cl::sycl::handler*, std::default_delete<cl::sycl::handler> > >::type& std::get<0ul, cl::sycl::handler*, std::default_delete<cl::sycl::handler> >(std::tuple<cl::sycl::handler*, std::default_delete<cl::sycl::handler> >&)
  [60] cl::sycl::accessor<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::~accessor() [254] std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&) [336] std::tuple_element<1ul, std::tuple<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > > >::type& std::get<1ul, cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >(std::tuple<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator>*, std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >&)
  [87] __gnu_cxx::new_allocator<std::shared_ptr<cl::sycl::detail::property_base> >::new_allocator() [255] std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl() [337] std::tuple_element<1ul, std::tuple<cl::sycl::handler*, std::default_delete<cl::sycl::handler> > >::type& std::get<1ul, cl::sycl::handler*, std::default_delete<cl::sycl::handler> >(std::tuple<cl::sycl::handler*, std::default_delete<cl::sycl::handler> >&)
  [88] __gnu_cxx::new_allocator<std::shared_ptr<cl::sycl::detail::property_base> >::~new_allocator() [256] std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long) [72] unsigned long const& std::min<unsigned long>(unsigned long const&, unsigned long const&)
 [201] __gnu_cxx::new_allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> >::deallocate(std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>*, unsigned long) [257] std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long) [63] std::remove_reference<cl::sycl::detail::NullDeleter&>::type&& std::move<cl::sycl::detail::NullDeleter&>(cl::sycl::detail::NullDeleter&)
 [202] __gnu_cxx::new_allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> >::allocate(unsigned long, void const*) [258] std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data() [338] std::remove_reference<cl::sycl::detail::accessor_common<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>&>::type&& std::move<cl::sycl::detail::accessor_common<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>&>(cl::sycl::detail::accessor_common<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>&)
 [126] __gnu_cxx::new_allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> >::new_allocator() [141] std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() [339] std::remove_reference<cl::sycl::handler*&>::type&& std::move<cl::sycl::handler*&>(cl::sycl::handler*&)
 [127] __gnu_cxx::new_allocator<std::_Sp_counted_deleter<void*, cl::sycl::detail::NullDeleter, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> >::~new_allocator() [259] std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&) [340] std::remove_reference<std::allocator<void>&>::type&& std::move<std::allocator<void>&>(std::allocator<void>&)
 [203] __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long) [260] std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [121] std::remove_reference<void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}&>::type&& std::move<void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}&>(void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}&&)
 [204] __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) [142] std::__shared_ptr<cl::sycl::detail::event, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() [341] std::remove_reference<std::shared_ptr<void> >::type&& std::move<std::shared_ptr<void> >(std::shared_ptr<void>&&)
 [205] __gnu_cxx::new_allocator<int>::new_allocator() [261] std::__shared_ptr<cl::sycl::detail::queue, (__gnu_cxx::_Lock_policy)2>::__shared_ptr(std::__shared_ptr<cl::sycl::detail::queue, (__gnu_cxx::_Lock_policy)2> const&) [342] int* std::fill_n<int*, unsigned long, int>(int*, unsigned long, int const&)
 [128] __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&) [262] std::__shared_ptr<cl::sycl::detail::queue, (__gnu_cxx::_Lock_policy)2>::__shared_ptr() [50] cl::sycl::detail::item_base& std::forward<cl::sycl::detail::item_base&>(std::remove_reference<cl::sycl::detail::item_base&>::type&)
 [110] __gnu_cxx::new_allocator<int>::~new_allocator() [100] std::__shared_ptr<cl::sycl::detail::queue, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() [122] cl::sycl::detail::base_allocator*& std::forward<cl::sycl::detail::base_allocator*&>(std::remove_reference<cl::sycl::detail::base_allocator*&>::type&)
 [206] __gnu_cxx::__atomic_add(int volatile*, int) [263] std::__shared_ptr<cl::sycl::detail::kernel, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() [73] std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> >&& std::forward<std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >(std::remove_reference<std::default_delete<cl::sycl::detail::wrapped_allocator<cl::sycl::detail::aligned_mem::aligned_allocator> > >::type&)
  [52] __gnu_cxx::__exchange_and_add(int volatile*, int) [143] std::__shared_ptr<cl::sycl::detail::context, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() [104] void std::_Destroy<std::shared_ptr<cl::sycl::detail::property_base>*>(std::shared_ptr<cl::sycl::detail::property_base>*, std::shared_ptr<cl::sycl::detail::property_base>*)
 [207] __gnu_cxx::__atomic_add_dispatch(int*, int) [264] std::__shared_ptr<cl::sycl::detail::program, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() [105] void std::_Destroy<std::shared_ptr<cl::sycl::detail::property_base>*, std::shared_ptr<cl::sycl::detail::property_base> >(std::shared_ptr<cl::sycl::detail::property_base>*, std::shared_ptr<cl::sycl::detail::property_base>*, std::allocator<std::shared_ptr<cl::sycl::detail::property_base> >&)
  [53] __gnu_cxx::__exchange_and_add_dispatch(int*, int) [62] std::__shared_ptr<cl::sycl::detail::accessor, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() [343] void std::_Destroy<int*>(int*, int*)
  [38] cl::sycl::accessor_base::get_host_data() const [265] std::enable_if<!std::__shared_ptr<void, (__gnu_cxx::_Lock_policy)2>::__has_esft_base<void, void>::value, void>::type std::__shared_ptr<void, (__gnu_cxx::_Lock_policy)2>::_M_enable_shared_from_this_with<void, void>(void*) [344] void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
  [33] cl::sycl::accessor_base::get_store_range() const [266] std::__shared_ptr<void, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<void, cl::sycl::detail::NullDeleter, void>(void*, cl::sycl::detail::NullDeleter) [345] main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const
 [208] bool cl::sycl::property_list::has_property<cl::sycl::property::no_init_impl>() const [267] std::__shared_ptr<void, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() [346] void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}::item_base({lambda(cl::sycl::id<1>)#1}::item_base&&)
 [111] cl::sycl::range<1>::operator cl::sycl::detail::index_array() const [117] std::_Function_base::_Base_manager<void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) [123] void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}::item_base({lambda(cl::sycl::id<1>)#1}::item_base const&)
 [209] cl::sycl::buffer<int, 1, cl::sycl::detail::aligned_mem::aligned_allocator>::get_range() const [268] std::_Function_base::_Base_manager<void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}>::_M_manager(std::_Any_data&, {lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1} const&, std::_Manager_operation) [81] void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}::~item_base()
  [18] cl::sycl::detail::fill_helper<unsigned long>::operator()(unsigned long) const [48] std::_Function_base::_Base_manager<void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}>::_M_get_pointer(std::_Any_data const&) [1] _ZZN2cl4sycl7handler17parallel_for_implI7TotientIiEZZ4mainENKUlRS1_E_clES5_EUlNS0_2idILi1EEEE_Li1EEEvRKNS0_6detail11index_arrayESD_T0_ENUlRNSA_9item_baseEE_clESG_
  [34] cl::sycl::detail::id_range_base<unsigned long, 1, cl::sycl::id<1> >::operator[](int) const [269] std::_Function_base::_Base_manager<void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}>::_M_init_functor(std::_Any_data&, {lambda(cl::sycl::id<1>)#1}::item_base&&) [2] main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}::operator()(cl::sycl::id) const
 [112] cl::sycl::detail::id_range_base<unsigned long, 1, cl::sycl::range<1> >::get(int) const [270] std::_Function_base::_Base_manager<void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}>::_M_init_functor(std::_Any_data&, {lambda(cl::sycl::id<1>)#1}::item_base&&, std::integral_constant<bool, false>) [347] main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}::id(cl::sycl::id<1>&&)
  [22] cl::sycl::detail::id_range_base<unsigned long, 1, cl::sycl::range<1> >::operator[](int) const [271] bool std::_Function_base::_Base_manager<void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}>::_M_not_empty_function<{lambda(cl::sycl::id<1>)#1}::item_base>({lambda(cl::sycl::id<1>)#1}::item_base const&) [82] main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}::id(cl::sycl::id<1> const&)
  [19] cl::sycl::detail::id_range_base<unsigned long, 3, cl::sycl::detail::index_array>::operator[](int) const [144] std::_Function_base::_Base_manager<void cl::sycl::handler::parallel_for_impl<Totient<int>, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}, 1>(cl::sycl::detail::index_array const&, cl::sycl::detail::index_array, main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1})::{lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1}>::_M_clone(std::_Any_data&, {lambda({lambda(cl::sycl::id<1>)#1}::item_base&)#1} const&, std::integral_constant<bool, false>) [64] main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}::~id()
  [39] cl::sycl::detail::accessor_common<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::get_offset() const [145] std::_Function_base::_Function_base() [4] main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}::operator()(cl::sycl::id) const::{lambda(unsigned int, unsigned int)#2}::operator()(unsigned int, unsigned int) const
  [40] cl::sycl::detail::accessor_common<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::get_device_ptr() const [146] std::_Function_base::~_Function_base() [5] main::{lambda(cl::sycl::handler&)#1}::operator()(cl::sycl::handler&) const::{lambda(cl::sycl::id<1>)#1}::operator()(cl::sycl::id) const::{lambda(unsigned int, unsigned int)#1}::operator()(unsigned int, unsigned int) const
  [41] cl::sycl::detail::accessor_buffer_interface<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::check_bounds(unsigned long) const [272] std::_Sp_ebo_helper<0, cl::sycl::detail::NullDeleter, true>::_S_get(std::_Sp_ebo_helper<0, cl::sycl::detail::NullDeleter, true>&) [348] operator new(unsigned long, void*)
  [42] unsigned long cl::sycl::detail::accessor_buffer_interface<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::get_linear_index<1>(cl::sycl::id<1> const&) const [273] std::_Sp_ebo_helper<0, cl::sycl::detail::NullDeleter, true>::_Sp_ebo_helper(cl::sycl::detail::NullDeleter&&)
  [43] cl::sycl::detail::accessor_buffer_interface<int, 1, (cl::sycl::access::mode)1, (cl::sycl::access::target)1, (cl::sycl::access::placeholder)0>::linear_offset_from_buffer() const [274] std::_Sp_ebo_helper<1, std::allocator<void>, true>::_S_get(std::_Sp_ebo_helper<1, std::allocator<void>, true>&)
